

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jul 25 15:39:55 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Version 2.40
    61                           ; Generated 17/11/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4620 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     
    96                           	psect	idataCOMRAM
    97   002D36                     __pidataCOMRAM:
    98                           	callstack 0
    99                           
   100                           ;initializer for _ret
   101   002D36  01                 	db	1
   102                           
   103                           	psect	idataBANK0
   104   002CDE                     __pidataBANK0:
   105                           	callstack 0
   106                           
   107                           ;initializer for _lat_registers
   108   002CDE  89                 	db	137
   109   002CDF  0F                 	db	15
   110   002CE0  8A                 	db	138
   111   002CE1  0F                 	db	15
   112   002CE2  8B                 	db	139
   113   002CE3  0F                 	db	15
   114   002CE4  8C                 	db	140
   115   002CE5  0F                 	db	15
   116   002CE6  8D                 	db	141
   117   002CE7  0F                 	db	15
   118                           
   119                           ;initializer for _tris_registers
   120   002CE8  92                 	db	146
   121   002CE9  0F                 	db	15
   122   002CEA  93                 	db	147
   123   002CEB  0F                 	db	15
   124   002CEC  94                 	db	148
   125   002CED  0F                 	db	15
   126   002CEE  95                 	db	149
   127   002CEF  0F                 	db	15
   128   002CF0  96                 	db	150
   129   002CF1  0F                 	db	15
   130                           
   131                           ;initializer for _lcd
   132   002CF2  04                 	db	4
   133   002CF3  0C                 	db	12
   134   002CF4  03                 	db	3
   135   002CF5  0B                 	db	11
   136   002CF6  13                 	db	19
   137   002CF7  1B                 	db	27
   138   002CF8  23                 	db	35
   139   002CF9  2B                 	db	43
   140   002CFA  33                 	db	51
   141   002CFB  3B                 	db	59
   142                           
   143                           ;initializer for _keypad
   144   002CFC  02                 	db	2
   145   002CFD  0A                 	db	10
   146   002CFE  12                 	db	18
   147   002CFF  1A                 	db	26
   148   002D00  62                 	db	98
   149   002D01  6A                 	db	106
   150   002D02  72                 	db	114
   151   002D03  7A                 	db	122
   152                           
   153                           	psect	idataBANK1
   154   002D22                     __pidataBANK1:
   155                           	callstack 0
   156                           
   157                           ;initializer for _port_registers
   158   002D22  80                 	db	128
   159   002D23  0F                 	db	15
   160   002D24  81                 	db	129
   161   002D25  0F                 	db	15
   162   002D26  82                 	db	130
   163   002D27  0F                 	db	15
   164   002D28  83                 	db	131
   165   002D29  0F                 	db	15
   166   002D2A  84                 	db	132
   167   002D2B  0F                 	db	15
   168                           
   169                           	psect	smallconst
   170   001000                     __psmallconst:
   171                           	callstack 0
   172   001000  00                 	db	0
   173   001001                     _keypad_matrix:
   174                           	callstack 0
   175   001001  37                 	db	55
   176   001002  38                 	db	56
   177   001003  39                 	db	57
   178   001004  2F                 	db	47
   179   001005  34                 	db	52
   180   001006  35                 	db	53
   181   001007  36                 	db	54
   182   001008  2A                 	db	42
   183   001009  31                 	db	49
   184   00100A  32                 	db	50
   185   00100B  33                 	db	51
   186   00100C  2D                 	db	45
   187   00100D  63                 	db	99
   188   00100E  30                 	db	48
   189   00100F  3D                 	db	61
   190   001010  2B                 	db	43
   191   001011                     __end_of_keypad_matrix:
   192                           	callstack 0
   193   001011                     STR_1:
   194   001011  25                 	db	37
   195   001012  6C                 	db	108	;'l'
   196   001013  64                 	db	100	;'d'
   197   001014  00                 	db	0
   198   001015  00                 	db	0	; dummy byte at the end
   199   000000                     
   200                           	psect	nvBANK0
   201   0000FA                     __pnvBANK0:
   202                           	callstack 0
   203   0000FA                     _keypad_value:
   204                           	callstack 0
   205   0000FA                     	ds	1
   206   000000                     _LATA	set	3977
   207   000000                     _PORTE	set	3972
   208   000000                     _PORTD	set	3971
   209   000000                     _PORTC	set	3970
   210   000000                     _PORTB	set	3969
   211   000000                     _PORTA	set	3968
   212   000000                     _TRISA	set	3986
   213   000000                     _TRISE	set	3990
   214   000000                     _TRISD	set	3989
   215   000000                     _TRISC	set	3988
   216   000000                     _TRISB	set	3987
   217   000000                     _LATE	set	3981
   218   000000                     _LATD	set	3980
   219   000000                     _LATC	set	3979
   220   000000                     _LATB	set	3978
   221                           
   222                           ; #config settings
   223                           
   224                           	psect	cinit
   225   002806                     __pcinit:
   226                           	callstack 0
   227   002806                     start_initialization:
   228                           	callstack 0
   229   002806                     __initialization:
   230                           	callstack 0
   231                           
   232                           ; Initialize objects allocated to BANK1 (10 bytes)
   233                           ; load TBLPTR registers with __pidataBANK1
   234   002806  0E22               	movlw	low __pidataBANK1
   235   002808  6EF6               	movwf	tblptrl,c
   236   00280A  0E2D               	movlw	high __pidataBANK1
   237   00280C  6EF7               	movwf	tblptrh,c
   238   00280E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   239   002810  6EF8               	movwf	tblptru,c
   240   002812  EE01  F032         	lfsr	0,__pdataBANK1
   241   002816  EE10 F00A          	lfsr	1,10
   242   00281A                     copy_data0:
   243   00281A  0009               	tblrd		*+
   244   00281C  CFF5 FFEE          	movff	tablat,postinc0
   245   002820  50E5               	movf	postdec1,w,c
   246   002822  50E1               	movf	fsr1l,w,c
   247   002824  E1FA               	bnz	copy_data0
   248                           
   249                           ; Initialize objects allocated to BANK0 (38 bytes)
   250                           ; load TBLPTR registers with __pidataBANK0
   251   002826  0EDE               	movlw	low __pidataBANK0
   252   002828  6EF6               	movwf	tblptrl,c
   253   00282A  0E2C               	movlw	high __pidataBANK0
   254   00282C  6EF7               	movwf	tblptrh,c
   255   00282E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   256   002830  6EF8               	movwf	tblptru,c
   257   002832  EE00  F0BA         	lfsr	0,__pdataBANK0
   258   002836  EE10 F026          	lfsr	1,38
   259   00283A                     copy_data1:
   260   00283A  0009               	tblrd		*+
   261   00283C  CFF5 FFEE          	movff	tablat,postinc0
   262   002840  50E5               	movf	postdec1,w,c
   263   002842  50E1               	movf	fsr1l,w,c
   264   002844  E1FA               	bnz	copy_data1
   265                           
   266                           ; Initialize objects allocated to COMRAM (1 bytes)
   267                           ; load TBLPTR registers with __pidataCOMRAM
   268   002846  0E36               	movlw	low __pidataCOMRAM
   269   002848  6EF6               	movwf	tblptrl,c
   270   00284A  0E2D               	movlw	high __pidataCOMRAM
   271   00284C  6EF7               	movwf	tblptrh,c
   272   00284E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   273   002850  6EF8               	movwf	tblptru,c
   274   002852  0009               	tblrd		*+	;fetch initializer
   275   002854  CFF5 F07E          	movff	tablat,__pdataCOMRAM
   276                           
   277                           ; Clear objects allocated to BANK1 (50 bytes)
   278   002858  EE01  F000         	lfsr	0,__pbssBANK1
   279   00285C  0E32               	movlw	50
   280   00285E                     clear_0:
   281   00285E  6AEE               	clrf	postinc0,c
   282   002860  06E8               	decf	wreg,f,c
   283   002862  E1FD               	bnz	clear_0
   284                           
   285                           ; Clear objects allocated to BANK0 (26 bytes)
   286   002864  EE00  F0E0         	lfsr	0,__pbssBANK0
   287   002868  0E1A               	movlw	26
   288   00286A                     clear_1:
   289   00286A  6AEE               	clrf	postinc0,c
   290   00286C  06E8               	decf	wreg,f,c
   291   00286E  E1FD               	bnz	clear_1
   292                           
   293                           ; Clear objects allocated to COMRAM (1 bytes)
   294   002870  6A7D               	clrf	__pbssCOMRAM& (0+255),c
   295   002872                     end_of_initialization:
   296                           	callstack 0
   297   002872                     __end_of__initialization:
   298                           	callstack 0
   299   002872  0E00               	movlw	low (__Lmediumconst shr (0+16))
   300   002874  6EF8               	movwf	tblptru,c
   301   002876  0100               	movlb	0
   302   002878  EF0B  F008         	goto	_main	;jump to C main() function
   303                           
   304                           	psect	bssCOMRAM
   305   00007D                     __pbssCOMRAM:
   306                           	callstack 0
   307   00007D                     _flags:
   308                           	callstack 0
   309   00007D                     	ds	1
   310                           
   311                           	psect	dataCOMRAM
   312   00007E                     __pdataCOMRAM:
   313                           	callstack 0
   314   00007E                     _ret:
   315                           	callstack 0
   316   00007E                     	ds	1
   317                           
   318                           	psect	bssBANK0
   319   0000E0                     __pbssBANK0:
   320                           	callstack 0
   321   0000E0                     _read_data:
   322                           	callstack 0
   323   0000E0                     	ds	20
   324   0000F4                     _width:
   325                           	callstack 0
   326   0000F4                     	ds	2
   327   0000F6                     _prec:
   328                           	callstack 0
   329   0000F6                     	ds	2
   330   0000F8                     _data_index:
   331                           	callstack 0
   332   0000F8                     	ds	1
   333   0000F9                     _lcd_output_char_col:
   334                           	callstack 0
   335   0000F9                     	ds	1
   336                           
   337                           	psect	dataBANK0
   338   0000BA                     __pdataBANK0:
   339                           	callstack 0
   340   0000BA                     _lat_registers:
   341                           	callstack 0
   342   0000BA                     	ds	10
   343   0000C4                     _tris_registers:
   344                           	callstack 0
   345   0000C4                     	ds	10
   346   0000CE                     _lcd:
   347                           	callstack 0
   348   0000CE                     	ds	10
   349   0000D8                     _keypad:
   350                           	callstack 0
   351   0000D8                     	ds	8
   352                           
   353                           	psect	bssBANK1
   354   000100                     __pbssBANK1:
   355                           	callstack 0
   356   000100                     	ds	9
   357   000109                     	ds	9
   358   000112                     _dbuf:
   359                           	callstack 0
   360   000112                     	ds	32
   361                           
   362                           	psect	dataBANK1
   363   000132                     __pdataBANK1:
   364                           	callstack 0
   365   000132                     _port_registers:
   366                           	callstack 0
   367   000132                     	ds	10
   368                           
   369                           	psect	cstackBANK0
   370   000080                     __pcstackBANK0:
   371                           	callstack 0
   372   000080                     lcd_convert_int_to_string@value:
   373                           	callstack 0
   374                           
   375                           ; 4 bytes @ 0x0
   376   000080                     	ds	4
   377   000084                     lcd_convert_int_to_string@str:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x4
   381   000084                     	ds	2
   382   000086                     main@second_num_text:
   383                           	callstack 0
   384                           
   385                           ; 9 bytes @ 0x6
   386   000086                     	ds	9
   387   00008F                     main@first_num_text:
   388                           	callstack 0
   389                           
   390                           ; 9 bytes @ 0xF
   391   00008F                     	ds	9
   392   000098                     main@result_text:
   393                           	callstack 0
   394                           
   395                           ; 11 bytes @ 0x18
   396   000098                     	ds	11
   397   0000A3                     main@result:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x23
   401   0000A3                     	ds	4
   402   0000A7                     _main$385:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x27
   406   0000A7                     	ds	4
   407   0000AB                     _main$386:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0x2B
   411   0000AB                     	ds	4
   412   0000AF                     main@second_value_index:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x2F
   416   0000AF                     	ds	1
   417   0000B0                     main@operator:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x30
   421   0000B0                     	ds	1
   422   0000B1                     main@num1_val:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x31
   426   0000B1                     	ds	4
   427   0000B5                     main@num2_val:
   428                           	callstack 0
   429                           
   430                           ; 4 bytes @ 0x35
   431   0000B5                     	ds	4
   432   0000B9                     main@index:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x39
   436   0000B9                     	ds	1
   437                           
   438                           	psect	cstackCOMRAM
   439   000001                     __pcstackCOMRAM:
   440                           	callstack 0
   441   000001                     ?_isspace:
   442                           	callstack 0
   443   000001                     ?_isdigit:
   444                           	callstack 0
   445   000001                     ?___lmul:
   446                           	callstack 0
   447   000001                     ?___aldiv:
   448                           	callstack 0
   449   000001                     ?___aodiv:
   450                           	callstack 0
   451   000001                     ?___aomod:
   452                           	callstack 0
   453   000001                     gpio_pin_direction_intialize@_pin_config:
   454                           	callstack 0
   455   000001                     gpio_pin_write_logic@_pin_config:
   456                           	callstack 0
   457   000001                     gpio_pin_read_logic@_pin_config:
   458                           	callstack 0
   459   000001                     isdigit@c:
   460                           	callstack 0
   461   000001                     isspace@c:
   462                           	callstack 0
   463   000001                     memset@dest:
   464                           	callstack 0
   465   000001                     fputc@c:
   466                           	callstack 0
   467   000001                     ___lmul@multiplier:
   468                           	callstack 0
   469   000001                     ___aldiv@dividend:
   470                           	callstack 0
   471   000001                     ___aodiv@dividend:
   472                           	callstack 0
   473   000001                     ___aomod@dividend:
   474                           	callstack 0
   475                           
   476                           ; 8 bytes @ 0x0
   477   000001                     	ds	2
   478   000003                     ??_gpio_pin_direction_intialize:
   479   000003                     ??_isspace:
   480   000003                     ??_isdigit:
   481   000003                     gpio_pin_write_logic@logic:
   482                           	callstack 0
   483   000003                     gpio_pin_read_logic@logic:
   484                           	callstack 0
   485   000003                     memset@c:
   486                           	callstack 0
   487   000003                     fputc@fp:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x2
   491   000003                     	ds	1
   492   000004                     ??_gpio_pin_write_logic:
   493                           
   494                           ; 1 bytes @ 0x3
   495   000004                     	ds	1
   496   000005                     ??_gpio_pin_read_logic:
   497   000005                     ??_fputc:
   498   000005                     _isspace$862:
   499                           	callstack 0
   500   000005                     memset@n:
   501                           	callstack 0
   502   000005                     ___lmul@multiplicand:
   503                           	callstack 0
   504   000005                     ___aldiv@divisor:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0x4
   508   000005                     	ds	2
   509   000007                     ??_memset:
   510                           
   511                           ; 1 bytes @ 0x6
   512   000007                     	ds	2
   513   000009                     gpio_pin_direction_intialize@ret:
   514                           	callstack 0
   515   000009                     ___aldiv@counter:
   516                           	callstack 0
   517   000009                     memset@k:
   518                           	callstack 0
   519   000009                     ___lmul@product:
   520                           	callstack 0
   521   000009                     ___aodiv@divisor:
   522                           	callstack 0
   523   000009                     ___aomod@divisor:
   524                           	callstack 0
   525                           
   526                           ; 8 bytes @ 0x8
   527   000009                     	ds	1
   528   00000A                     gpio_pin_write_logic@ret:
   529                           	callstack 0
   530   00000A                     gpio_pin_read_logic@ret:
   531                           	callstack 0
   532   00000A                     ___aldiv@sign:
   533                           	callstack 0
   534   00000A                     fputs@s:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x9
   538   00000A                     	ds	1
   539   00000B                     send_8bit_enable_signal@lcd:
   540                           	callstack 0
   541   00000B                     keypad_get_value@keypad:
   542                           	callstack 0
   543   00000B                     gpio_pin_intialize@_pin_config:
   544                           	callstack 0
   545   00000B                     memset@s:
   546                           	callstack 0
   547   00000B                     ___aldiv@quotient:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0xA
   551   00000B                     	ds	1
   552   00000C                     fputs@fp:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0xB
   556   00000C                     	ds	1
   557   00000D                     ??_gpio_pin_intialize:
   558   00000D                     ?_atol:
   559                           	callstack 0
   560   00000D                     send_8bit_enable_signal@ret:
   561                           	callstack 0
   562   00000D                     keypad_get_value@value:
   563                           	callstack 0
   564   00000D                     atol@s:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0xC
   568   00000D                     	ds	1
   569   00000E                     gpio_pin_intialize@ret:
   570                           	callstack 0
   571   00000E                     fputs@c:
   572                           	callstack 0
   573   00000E                     lcd_8bit_send_command@lcd:
   574                           	callstack 0
   575   00000E                     lcd_8bit_send_char@lcd:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0xD
   579   00000E                     	ds	1
   580   00000F                     ??_keypad_get_value:
   581   00000F                     keypad_intialize@keypad:
   582                           	callstack 0
   583   00000F                     fputs@i:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0xE
   587   00000F                     	ds	1
   588   000010                     lcd_8bit_send_command@command:
   589                           	callstack 0
   590   000010                     lcd_8bit_send_char@data:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0xF
   594   000010                     	ds	1
   595   000011                     ??_lcd_8bit_send_command:
   596   000011                     ??_atol:
   597   000011                     ??_lcd_8bit_send_char:
   598   000011                     ??_keypad_intialize:
   599   000011                     keypad_get_value@ret:
   600                           	callstack 0
   601   000011                     ___aodiv@counter:
   602                           	callstack 0
   603   000011                     ___aomod@counter:
   604                           	callstack 0
   605   000011                     pad@fp:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x10
   609   000011                     	ds	1
   610   000012                     keypad_get_value@logic:
   611                           	callstack 0
   612   000012                     ___aodiv@sign:
   613                           	callstack 0
   614   000012                     ___aomod@sign:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x11
   618   000012                     	ds	1
   619   000013                     ?_abs:
   620                           	callstack 0
   621   000013                     keypad_intialize@ret:
   622                           	callstack 0
   623   000013                     keypad_get_value@col:
   624                           	callstack 0
   625   000013                     pad@buf:
   626                           	callstack 0
   627   000013                     abs@a:
   628                           	callstack 0
   629   000013                     ___aodiv@quotient:
   630                           	callstack 0
   631                           
   632                           ; 8 bytes @ 0x12
   633   000013                     	ds	1
   634   000014                     keypad_get_value@rows:
   635                           	callstack 0
   636   000014                     keypad_intialize@rows_counter:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x13
   640   000014                     	ds	1
   641   000015                     ??_keypad_read_value:
   642   000015                     ??_abs:
   643   000015                     lcd_8bit_send_command@ret:
   644                           	callstack 0
   645   000015                     lcd_8bit_send_char@ret:
   646                           	callstack 0
   647   000015                     pad@p:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x14
   651   000015                     	ds	1
   652   000016                     lcd_8bit_send_command@line_data_pin:
   653                           	callstack 0
   654   000016                     lcd_8bit_send_char@line_data_pin:
   655                           	callstack 0
   656   000016                     keypad_read_value@current_value:
   657                           	callstack 0
   658   000016                     keypad_intialize@col_counter:
   659                           	callstack 0
   660   000016                     atol@neg:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x15
   664   000016                     	ds	1
   665   000017                     ??_pad:
   666   000017                     keypad_read_value@new_value:
   667                           	callstack 0
   668   000017                     lcd_8bit_intialize@lcd:
   669                           	callstack 0
   670   000017                     lcd_8bit_send_string@lcd:
   671                           	callstack 0
   672   000017                     lcd_8bit_set_cursor@lcd:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x16
   676   000017                     	ds	1
   677   000018                     pad@i:
   678                           	callstack 0
   679   000018                     atol@n:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x17
   683   000018                     	ds	1
   684   000019                     ??_lcd_8bit_intialize:
   685   000019                     lcd_8bit_set_cursor@row:
   686                           	callstack 0
   687   000019                     lcd_8bit_send_string@string:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x18
   691   000019                     	ds	1
   692   00001A                     lcd_8bit_set_cursor@colomn:
   693                           	callstack 0
   694   00001A                     pad@w:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x19
   698   00001A                     	ds	1
   699   00001B                     ??_lcd_8bit_set_cursor:
   700   00001B                     lcd_8bit_intialize@pin:
   701                           	callstack 0
   702   00001B                     lcd_8bit_send_string@ret:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x1A
   706   00001B                     	ds	1
   707   00001C                     lcd_8bit_intialize@ret:
   708                           	callstack 0
   709   00001C                     dtoa@fp:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x1B
   713   00001C                     	ds	1
   714   00001D                     lcd_8bit_set_cursor@ret:
   715                           	callstack 0
   716   00001D                     ecu_layer_intialize@ret:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x1C
   720   00001D                     	ds	1
   721   00001E                     lcd_8bit_send_char_pos@lcd:
   722                           	callstack 0
   723   00001E                     lcd_8bit_send_string_pos@lcd:
   724                           	callstack 0
   725   00001E                     dtoa@d:
   726                           	callstack 0
   727                           
   728                           ; 8 bytes @ 0x1D
   729   00001E                     	ds	2
   730   000020                     lcd_8bit_send_char_pos@row:
   731                           	callstack 0
   732   000020                     lcd_8bit_send_string_pos@row:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x1F
   736   000020                     	ds	1
   737   000021                     lcd_8bit_send_char_pos@colomn:
   738                           	callstack 0
   739   000021                     lcd_8bit_send_string_pos@colomn:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0x20
   743   000021                     	ds	1
   744   000022                     lcd_8bit_send_char_pos@data:
   745                           	callstack 0
   746   000022                     lcd_8bit_send_string_pos@string:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x21
   750   000022                     	ds	1
   751   000023                     lcd_8bit_send_char_pos@ret:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x22
   755   000023                     	ds	1
   756   000024                     lcd_8bit_send_string_pos@ret:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x23
   760   000024                     	ds	2
   761   000026                     ??_dtoa:
   762                           
   763                           ; 1 bytes @ 0x25
   764   000026                     	ds	8
   765   00002E                     _dtoa$954:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x2D
   769   00002E                     	ds	2
   770   000030                     dtoa@p:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x2F
   774   000030                     	ds	2
   775   000032                     dtoa@w:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x31
   779   000032                     	ds	2
   780   000034                     dtoa@n:
   781                           	callstack 0
   782                           
   783                           ; 8 bytes @ 0x33
   784   000034                     	ds	8
   785   00003C                     dtoa@i:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x3B
   789   00003C                     	ds	2
   790   00003E                     dtoa@s:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x3D
   794   00003E                     	ds	1
   795   00003F                     vfpfcnvrt@fp:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x3E
   799   00003F                     	ds	2
   800   000041                     vfpfcnvrt@fmt:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x40
   804   000041                     	ds	2
   805   000043                     vfpfcnvrt@ap:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x42
   809   000043                     	ds	2
   810   000045                     ??_vfpfcnvrt:
   811                           
   812                           ; 1 bytes @ 0x44
   813   000045                     	ds	14
   814   000053                     vfpfcnvrt@convarg:
   815                           	callstack 0
   816                           
   817                           ; 8 bytes @ 0x52
   818   000053                     	ds	8
   819   00005B                     vfpfcnvrt@c:
   820                           	callstack 0
   821                           
   822                           ; 1 bytes @ 0x5A
   823   00005B                     	ds	1
   824   00005C                     vfpfcnvrt@cp:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x5B
   828   00005C                     	ds	2
   829   00005E                     ?_vfprintf:
   830                           	callstack 0
   831   00005E                     vfprintf@fp:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x5D
   835   00005E                     	ds	2
   836   000060                     vfprintf@fmt:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x5F
   840   000060                     	ds	2
   841   000062                     vfprintf@ap:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x61
   845   000062                     	ds	2
   846   000064                     vfprintf@cfmt:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x63
   850   000064                     	ds	2
   851   000066                     ?_sprintf:
   852                           	callstack 0
   853   000066                     sprintf@s:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x65
   857   000066                     	ds	2
   858   000068                     sprintf@fmt:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x67
   862   000068                     	ds	6
   863   00006E                     sprintf@ap:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x6D
   867   00006E                     	ds	2
   868   000070                     sprintf@f:
   869                           	callstack 0
   870                           
   871                           ; 11 bytes @ 0x6F
   872   000070                     	ds	11
   873   00007B                     lcd_convert_int_to_string@ret:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x7A
   877   00007B                     	ds	1
   878   00007C                     
   879                           ; 1 bytes @ 0x7B
   880   00007C                     	ds	1
   881                           
   882 ;;
   883 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   884 ;;
   885 ;; *************** function _main *****************
   886 ;; Defined at:
   887 ;;		line 19 in file "calculator.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  result_text    11   24[BANK0 ] unsigned char [11]
   892 ;;  first_num_te    9   15[BANK0 ] unsigned char [9]
   893 ;;  second_num_t    9    6[BANK0 ] unsigned char [9]
   894 ;;  num2_val        4   53[BANK0 ] long 
   895 ;;  num1_val        4   49[BANK0 ] long 
   896 ;;  result          4   35[BANK0 ] long 
   897 ;;  index           1   57[BANK0 ] unsigned char 
   898 ;;  operator        1   48[BANK0 ] unsigned char 
   899 ;;  second_value    1   47[BANK0 ] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  2  215[None  ] int 
   902 ;; Registers used:
   903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Locals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Totals:         1      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;Total ram usage:       53 bytes
   914 ;; Hardware stack levels required when called: 9
   915 ;; This function calls:
   916 ;;		___aldiv
   917 ;;		___lmul
   918 ;;		_application_intialize
   919 ;;		_atol
   920 ;;		_keypad_read_value
   921 ;;		_lcd_8bit_send_char_pos
   922 ;;		_lcd_8bit_send_command
   923 ;;		_lcd_8bit_send_string_pos
   924 ;;		_lcd_convert_int_to_string
   925 ;; This function is called by:
   926 ;;		Startup code after reset
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text0
   931   001016                     __ptext0:
   932                           	callstack 0
   933   001016                     _main:
   934                           	callstack 22
   935   001016                     
   936                           ;calculator.c: 21:     application_intialize();
   937   001016  EC96  F016         	call	_application_intialize	;wreg free
   938   00101A                     l2823:
   939                           
   940                           ;calculator.c: 24:     {;calculator.c: 25:         keypad_value = keypad_read_value();
   941   00101A  ECA9  F014         	call	_keypad_read_value	;wreg free
   942   00101E  0100               	movlb	0	; () banked
   943   001020  6FFA               	movwf	_keypad_value& (0+255),b
   944   001022                     
   945                           ; BSR set to: 0
   946                           ;calculator.c: 27:         if('c' == keypad_value)
   947   001022  0E63               	movlw	99
   948   001024  19FA               	xorwf	_keypad_value& (0+255),w,b
   949   001026  A4D8               	btfss	status,2,c
   950   001028  EF18  F008         	goto	u2151
   951   00102C  EF1A  F008         	goto	u2150
   952   001030                     u2151:
   953   001030  EF2A  F008         	goto	l2833
   954   001034                     u2150:
   955   001034                     
   956                           ; BSR set to: 0
   957                           ;calculator.c: 28:         {;calculator.c: 29:             ret = lcd_8bit_send_command(&
      +                          lcd, 0x01);
   958   001034  0ECE               	movlw	low _lcd
   959   001036  6E0E               	movwf	lcd_8bit_send_command@lcd^0,c
   960   001038  0E00               	movlw	high _lcd
   961   00103A  6E0F               	movwf	(lcd_8bit_send_command@lcd+1)^0,c
   962   00103C  0E01               	movlw	1
   963   00103E  6E10               	movwf	lcd_8bit_send_command@command^0,c
   964   001040  EC82  F013         	call	_lcd_8bit_send_command	;wreg free
   965   001044  6E7E               	movwf	_ret^0,c
   966   001046                     
   967                           ;calculator.c: 30:             lcd_output_char_col = 0;
   968   001046  0E00               	movlw	0
   969   001048  0100               	movlb	0	; () banked
   970   00104A  6FF9               	movwf	_lcd_output_char_col& (0+255),b
   971   00104C                     
   972                           ; BSR set to: 0
   973                           ;calculator.c: 31:             data_index = 0;
   974   00104C  0E00               	movlw	0
   975   00104E  6FF8               	movwf	_data_index& (0+255),b
   976                           
   977                           ;calculator.c: 32:         }
   978   001050  EF0D  F008         	goto	l2823
   979   001054                     l2833:
   980                           
   981                           ; BSR set to: 0
   982   001054  0E3D               	movlw	61
   983   001056  19FA               	xorwf	_keypad_value& (0+255),w,b
   984   001058  A4D8               	btfss	status,2,c
   985   00105A  EF31  F008         	goto	u2161
   986   00105E  EF33  F008         	goto	u2160
   987   001062                     u2161:
   988   001062  EF7E  F009         	goto	l2893
   989   001066                     u2160:
   990   001066                     
   991                           ; BSR set to: 0
   992                           ;calculator.c: 35:         {;calculator.c: 36:             ret = lcd_8bit_send_char_pos(
      +                          &lcd, 2, 1, '=');
   993   001066  0ECE               	movlw	low _lcd
   994   001068  6E1E               	movwf	lcd_8bit_send_char_pos@lcd^0,c
   995   00106A  0E00               	movlw	high _lcd
   996   00106C  6E1F               	movwf	(lcd_8bit_send_char_pos@lcd+1)^0,c
   997   00106E  0E02               	movlw	2
   998   001070  6E20               	movwf	lcd_8bit_send_char_pos@row^0,c
   999   001072  0E01               	movlw	1
  1000   001074  6E21               	movwf	lcd_8bit_send_char_pos@colomn^0,c
  1001   001076  0E3D               	movlw	61
  1002   001078  6E22               	movwf	lcd_8bit_send_char_pos@data^0,c
  1003   00107A  EC39  F016         	call	_lcd_8bit_send_char_pos	;wreg free
  1004   00107E  6E7E               	movwf	_ret^0,c
  1005   001080                     
  1006                           ;calculator.c: 38:             uint8 first_num_text[9] = {[0 ... 8] = '\0'};
  1007   001080  EE20  F08F         	lfsr	2,main@first_num_text
  1008   001084  0E08               	movlw	8
  1009   001086                     u2171:
  1010   001086  6ADE               	clrf	postinc2,c
  1011   001088  06E8               	decf	wreg,f,c
  1012   00108A  E2FD               	bc	u2171
  1013   00108C                     
  1014                           ;calculator.c: 39:             uint8 second_num_text[9] = {[0 ... 8] = '\0'};
  1015   00108C  EE20  F086         	lfsr	2,main@second_num_text
  1016   001090  0E08               	movlw	8
  1017   001092                     u2181:
  1018   001092  6ADE               	clrf	postinc2,c
  1019   001094  06E8               	decf	wreg,f,c
  1020   001096  E2FD               	bc	u2181
  1021   001098                     
  1022                           ;calculator.c: 42:             first_num_text[0] = read_data[0];
  1023   001098  C0E0  F08F         	movff	_read_data,main@first_num_text
  1024   00109C                     
  1025                           ;calculator.c: 43:             for(index = 1 ; ('*' != read_data[index] && '+' != read_d
      +                          ata[index]
  1026   00109C  0E01               	movlw	1
  1027   00109E  0100               	movlb	0	; () banked
  1028   0010A0  6FB9               	movwf	main@index& (0+255),b
  1029   0010A2  EF62  F008         	goto	l2851
  1030   0010A6                     l2847:
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;calculator.c: 44:                             && '-' != read_data[index] && '/' != read
      +                          _data[index]) ; index++){;calculator.c: 45:                 first_num_text[index] = read
      +                          _data[index];
  1034   0010A6  0EE0               	movlw	low _read_data
  1035   0010A8  25B9               	addwf	main@index& (0+255),w,b
  1036   0010AA  6ED9               	movwf	fsr2l,c
  1037   0010AC  6ADA               	clrf	fsr2h,c
  1038   0010AE  0E00               	movlw	high _read_data
  1039   0010B0  22DA               	addwfc	fsr2h,f,c
  1040   0010B2  0E8F               	movlw	low main@first_num_text
  1041   0010B4  25B9               	addwf	main@index& (0+255),w,b
  1042   0010B6  6EE1               	movwf	fsr1l,c
  1043   0010B8  6AE2               	clrf	fsr1h,c
  1044   0010BA  0E00               	movlw	high main@first_num_text
  1045   0010BC  22E2               	addwfc	fsr1h,f,c
  1046   0010BE  CFDF FFE7          	movff	indf2,indf1
  1047   0010C2                     
  1048                           ; BSR set to: 0
  1049                           ;calculator.c: 46:             }
  1050   0010C2  2BB9               	incf	main@index& (0+255),f,b
  1051   0010C4                     l2851:
  1052                           
  1053                           ; BSR set to: 0
  1054   0010C4  0EE0               	movlw	low _read_data
  1055   0010C6  25B9               	addwf	main@index& (0+255),w,b
  1056   0010C8  6ED9               	movwf	fsr2l,c
  1057   0010CA  6ADA               	clrf	fsr2h,c
  1058   0010CC  0E00               	movlw	high _read_data
  1059   0010CE  22DA               	addwfc	fsr2h,f,c
  1060   0010D0  0E2A               	movlw	42
  1061   0010D2  18DE               	xorwf	postinc2,w,c
  1062   0010D4  B4D8               	btfsc	status,2,c
  1063   0010D6  EF6F  F008         	goto	u2191
  1064   0010DA  EF71  F008         	goto	u2190
  1065   0010DE                     u2191:
  1066   0010DE  EF9E  F008         	goto	l2859
  1067   0010E2                     u2190:
  1068   0010E2                     
  1069                           ; BSR set to: 0
  1070   0010E2  0EE0               	movlw	low _read_data
  1071   0010E4  25B9               	addwf	main@index& (0+255),w,b
  1072   0010E6  6ED9               	movwf	fsr2l,c
  1073   0010E8  6ADA               	clrf	fsr2h,c
  1074   0010EA  0E00               	movlw	high _read_data
  1075   0010EC  22DA               	addwfc	fsr2h,f,c
  1076   0010EE  0E2B               	movlw	43
  1077   0010F0  18DE               	xorwf	postinc2,w,c
  1078   0010F2  B4D8               	btfsc	status,2,c
  1079   0010F4  EF7E  F008         	goto	u2201
  1080   0010F8  EF80  F008         	goto	u2200
  1081   0010FC                     u2201:
  1082   0010FC  EF9E  F008         	goto	l2859
  1083   001100                     u2200:
  1084   001100                     
  1085                           ; BSR set to: 0
  1086   001100  0EE0               	movlw	low _read_data
  1087   001102  25B9               	addwf	main@index& (0+255),w,b
  1088   001104  6ED9               	movwf	fsr2l,c
  1089   001106  6ADA               	clrf	fsr2h,c
  1090   001108  0E00               	movlw	high _read_data
  1091   00110A  22DA               	addwfc	fsr2h,f,c
  1092   00110C  0E2D               	movlw	45
  1093   00110E  18DE               	xorwf	postinc2,w,c
  1094   001110  B4D8               	btfsc	status,2,c
  1095   001112  EF8D  F008         	goto	u2211
  1096   001116  EF8F  F008         	goto	u2210
  1097   00111A                     u2211:
  1098   00111A  EF9E  F008         	goto	l2859
  1099   00111E                     u2210:
  1100   00111E                     
  1101                           ; BSR set to: 0
  1102   00111E  0EE0               	movlw	low _read_data
  1103   001120  25B9               	addwf	main@index& (0+255),w,b
  1104   001122  6ED9               	movwf	fsr2l,c
  1105   001124  6ADA               	clrf	fsr2h,c
  1106   001126  0E00               	movlw	high _read_data
  1107   001128  22DA               	addwfc	fsr2h,f,c
  1108   00112A  0E2F               	movlw	47
  1109   00112C  18DE               	xorwf	postinc2,w,c
  1110   00112E  A4D8               	btfss	status,2,c
  1111   001130  EF9C  F008         	goto	u2221
  1112   001134  EF9E  F008         	goto	u2220
  1113   001138                     u2221:
  1114   001138  EF53  F008         	goto	l2847
  1115   00113C                     u2220:
  1116   00113C                     l2859:
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;calculator.c: 48:             uint8 operator = read_data[index];
  1120   00113C  0EE0               	movlw	low _read_data
  1121   00113E  25B9               	addwf	main@index& (0+255),w,b
  1122   001140  6ED9               	movwf	fsr2l,c
  1123   001142  6ADA               	clrf	fsr2h,c
  1124   001144  0E00               	movlw	high _read_data
  1125   001146  22DA               	addwfc	fsr2h,f,c
  1126   001148  50DF               	movf	indf2,w,c
  1127   00114A  6FB0               	movwf	main@operator& (0+255),b
  1128   00114C                     
  1129                           ; BSR set to: 0
  1130                           ;calculator.c: 50:             uint8 second_value_index = 0;
  1131   00114C  0E00               	movlw	0
  1132   00114E  6FAF               	movwf	main@second_value_index& (0+255),b
  1133                           
  1134                           ;calculator.c: 51:             while(++index < data_index){
  1135   001150  EFB9  F008         	goto	l2867
  1136   001154                     l2863:
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;calculator.c: 52:                 second_num_text[second_value_index++] = read_data[ind
      +                          ex];
  1140   001154  0EE0               	movlw	low _read_data
  1141   001156  25B9               	addwf	main@index& (0+255),w,b
  1142   001158  6ED9               	movwf	fsr2l,c
  1143   00115A  6ADA               	clrf	fsr2h,c
  1144   00115C  0E00               	movlw	high _read_data
  1145   00115E  22DA               	addwfc	fsr2h,f,c
  1146   001160  0E86               	movlw	low main@second_num_text
  1147   001162  25AF               	addwf	main@second_value_index& (0+255),w,b
  1148   001164  6EE1               	movwf	fsr1l,c
  1149   001166  6AE2               	clrf	fsr1h,c
  1150   001168  0E00               	movlw	high main@second_num_text
  1151   00116A  22E2               	addwfc	fsr1h,f,c
  1152   00116C  CFDF FFE7          	movff	indf2,indf1
  1153   001170                     
  1154                           ; BSR set to: 0
  1155   001170  2BAF               	incf	main@second_value_index& (0+255),f,b
  1156   001172                     l2867:
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;calculator.c: 51:             while(++index < data_index){
  1160   001172  2BB9               	incf	main@index& (0+255),f,b
  1161   001174  51F8               	movf	_data_index& (0+255),w,b
  1162   001176  5DB9               	subwf	main@index& (0+255),w,b
  1163   001178  A0D8               	btfss	status,0,c
  1164   00117A  EFC1  F008         	goto	u2231
  1165   00117E  EFC3  F008         	goto	u2230
  1166   001182                     u2231:
  1167   001182  EFAA  F008         	goto	l2863
  1168   001186                     u2230:
  1169   001186                     
  1170                           ; BSR set to: 0
  1171                           ;calculator.c: 55:             sint32 num1_val = atol(first_num_text);
  1172   001186  0E8F               	movlw	low main@first_num_text
  1173   001188  6E0D               	movwf	atol@s^0,c
  1174   00118A  0E00               	movlw	high main@first_num_text
  1175   00118C  6E0E               	movwf	(atol@s+1)^0,c
  1176   00118E  EC2A  F00C         	call	_atol	;wreg free
  1177   001192  C00D  F0B1         	movff	?_atol,main@num1_val
  1178   001196  C00E  F0B2         	movff	?_atol+1,main@num1_val+1
  1179   00119A  C00F  F0B3         	movff	?_atol+2,main@num1_val+2
  1180   00119E  C010  F0B4         	movff	?_atol+3,main@num1_val+3
  1181                           
  1182                           ;calculator.c: 56:             sint32 num2_val = atol(second_num_text);
  1183   0011A2  0E86               	movlw	low main@second_num_text
  1184   0011A4  6E0D               	movwf	atol@s^0,c
  1185   0011A6  0E00               	movlw	high main@second_num_text
  1186   0011A8  6E0E               	movwf	(atol@s+1)^0,c
  1187   0011AA  EC2A  F00C         	call	_atol	;wreg free
  1188   0011AE  C00D  F0B5         	movff	?_atol,main@num2_val
  1189   0011B2  C00E  F0B6         	movff	?_atol+1,main@num2_val+1
  1190   0011B6  C00F  F0B7         	movff	?_atol+2,main@num2_val+2
  1191   0011BA  C010  F0B8         	movff	?_atol+3,main@num2_val+3
  1192   0011BE                     
  1193                           ;calculator.c: 58:             sint32 result = ('+' == operator)? (num1_val + num2_val):
  1194   0011BE  0E2B               	movlw	43
  1195   0011C0  0100               	movlb	0	; () banked
  1196   0011C2  19B0               	xorwf	main@operator& (0+255),w,b
  1197   0011C4  B4D8               	btfsc	status,2,c
  1198   0011C6  EFE7  F008         	goto	u2241
  1199   0011CA  EFE9  F008         	goto	u2240
  1200   0011CE                     u2241:
  1201   0011CE  EF51  F009         	goto	l2887
  1202   0011D2                     u2240:
  1203   0011D2                     
  1204                           ; BSR set to: 0
  1205   0011D2  0E2D               	movlw	45
  1206   0011D4  19B0               	xorwf	main@operator& (0+255),w,b
  1207   0011D6  B4D8               	btfsc	status,2,c
  1208   0011D8  EFF0  F008         	goto	u2251
  1209   0011DC  EFF2  F008         	goto	u2250
  1210   0011E0                     u2251:
  1211   0011E0  EF3B  F009         	goto	l2883
  1212   0011E4                     u2250:
  1213   0011E4                     
  1214                           ; BSR set to: 0
  1215   0011E4  0E2A               	movlw	42
  1216   0011E6  19B0               	xorwf	main@operator& (0+255),w,b
  1217   0011E8  B4D8               	btfsc	status,2,c
  1218   0011EA  EFF9  F008         	goto	u2261
  1219   0011EE  EFFB  F008         	goto	u2260
  1220   0011F2                     u2261:
  1221   0011F2  EF17  F009         	goto	l2879
  1222   0011F6                     u2260:
  1223   0011F6                     
  1224                           ; BSR set to: 0
  1225   0011F6  C0B1  F001         	movff	main@num1_val,___aldiv@dividend
  1226   0011FA  C0B2  F002         	movff	main@num1_val+1,___aldiv@dividend+1
  1227   0011FE  C0B3  F003         	movff	main@num1_val+2,___aldiv@dividend+2
  1228   001202  C0B4  F004         	movff	main@num1_val+3,___aldiv@dividend+3
  1229   001206  C0B5  F005         	movff	main@num2_val,___aldiv@divisor
  1230   00120A  C0B6  F006         	movff	main@num2_val+1,___aldiv@divisor+1
  1231   00120E  C0B7  F007         	movff	main@num2_val+2,___aldiv@divisor+2
  1232   001212  C0B8  F008         	movff	main@num2_val+3,___aldiv@divisor+3
  1233   001216  ECEC  F010         	call	___aldiv	;wreg free
  1234   00121A  C001  F0AB         	movff	?___aldiv,_main$386
  1235   00121E  C002  F0AC         	movff	?___aldiv+1,_main$386+1
  1236   001222  C003  F0AD         	movff	?___aldiv+2,_main$386+2
  1237   001226  C004  F0AE         	movff	?___aldiv+3,_main$386+3
  1238   00122A  EF31  F009         	goto	l2881
  1239   00122E                     l2879:
  1240                           
  1241                           ; BSR set to: 0
  1242   00122E  C0B1  F001         	movff	main@num1_val,___lmul@multiplier
  1243   001232  C0B2  F002         	movff	main@num1_val+1,___lmul@multiplier+1
  1244   001236  C0B3  F003         	movff	main@num1_val+2,___lmul@multiplier+2
  1245   00123A  C0B4  F004         	movff	main@num1_val+3,___lmul@multiplier+3
  1246   00123E  C0B5  F005         	movff	main@num2_val,___lmul@multiplicand
  1247   001242  C0B6  F006         	movff	main@num2_val+1,___lmul@multiplicand+1
  1248   001246  C0B7  F007         	movff	main@num2_val+2,___lmul@multiplicand+2
  1249   00124A  C0B8  F008         	movff	main@num2_val+3,___lmul@multiplicand+3
  1250   00124E  EC74  F014         	call	___lmul	;wreg free
  1251   001252  C001  F0AB         	movff	?___lmul,_main$386
  1252   001256  C002  F0AC         	movff	?___lmul+1,_main$386+1
  1253   00125A  C003  F0AD         	movff	?___lmul+2,_main$386+2
  1254   00125E  C004  F0AE         	movff	?___lmul+3,_main$386+3
  1255   001262                     l2881:
  1256   001262  C0AB  F0A7         	movff	_main$386,_main$385
  1257   001266  C0AC  F0A8         	movff	_main$386+1,_main$385+1
  1258   00126A  C0AD  F0A9         	movff	_main$386+2,_main$385+2
  1259   00126E  C0AE  F0AA         	movff	_main$386+3,_main$385+3
  1260   001272  EF47  F009         	goto	l2885
  1261   001276                     l2883:
  1262                           
  1263                           ; BSR set to: 0
  1264   001276  51B5               	movf	main@num2_val& (0+255),w,b
  1265   001278  5DB1               	subwf	main@num1_val& (0+255),w,b
  1266   00127A  6FA7               	movwf	_main$385& (0+255),b
  1267   00127C  51B6               	movf	(main@num2_val+1)& (0+255),w,b
  1268   00127E  59B2               	subwfb	(main@num1_val+1)& (0+255),w,b
  1269   001280  6FA8               	movwf	(_main$385+1)& (0+255),b
  1270   001282  51B7               	movf	(main@num2_val+2)& (0+255),w,b
  1271   001284  59B3               	subwfb	(main@num1_val+2)& (0+255),w,b
  1272   001286  6FA9               	movwf	(_main$385+2)& (0+255),b
  1273   001288  51B8               	movf	(main@num2_val+3)& (0+255),w,b
  1274   00128A  59B4               	subwfb	(main@num1_val+3)& (0+255),w,b
  1275   00128C  6FAA               	movwf	(_main$385+3)& (0+255),b
  1276   00128E                     l2885:
  1277   00128E  C0A7  F0A3         	movff	_main$385,main@result
  1278   001292  C0A8  F0A4         	movff	_main$385+1,main@result+1
  1279   001296  C0A9  F0A5         	movff	_main$385+2,main@result+2
  1280   00129A  C0AA  F0A6         	movff	_main$385+3,main@result+3
  1281   00129E  EF5D  F009         	goto	l2889
  1282   0012A2                     l2887:
  1283                           
  1284                           ; BSR set to: 0
  1285   0012A2  51B5               	movf	main@num2_val& (0+255),w,b
  1286   0012A4  25B1               	addwf	main@num1_val& (0+255),w,b
  1287   0012A6  6FA3               	movwf	main@result& (0+255),b
  1288   0012A8  51B6               	movf	(main@num2_val+1)& (0+255),w,b
  1289   0012AA  21B2               	addwfc	(main@num1_val+1)& (0+255),w,b
  1290   0012AC  6FA4               	movwf	(main@result+1)& (0+255),b
  1291   0012AE  51B7               	movf	(main@num2_val+2)& (0+255),w,b
  1292   0012B0  21B3               	addwfc	(main@num1_val+2)& (0+255),w,b
  1293   0012B2  6FA5               	movwf	(main@result+2)& (0+255),b
  1294   0012B4  51B8               	movf	(main@num2_val+3)& (0+255),w,b
  1295   0012B6  21B4               	addwfc	(main@num1_val+3)& (0+255),w,b
  1296   0012B8  6FA6               	movwf	(main@result+3)& (0+255),b
  1297   0012BA                     l2889:
  1298                           
  1299                           ;calculator.c: 62:             uint8 result_text[11];;calculator.c: 64:             ret 
      +                          = lcd_convert_int_to_string(result, result_text);
  1300   0012BA  C0A3  F080         	movff	main@result,lcd_convert_int_to_string@value
  1301   0012BE  C0A4  F081         	movff	main@result+1,lcd_convert_int_to_string@value+1
  1302   0012C2  C0A5  F082         	movff	main@result+2,lcd_convert_int_to_string@value+2
  1303   0012C6  C0A6  F083         	movff	main@result+3,lcd_convert_int_to_string@value+3
  1304   0012CA  0E98               	movlw	low main@result_text
  1305   0012CC  0100               	movlb	0	; () banked
  1306   0012CE  6F84               	movwf	lcd_convert_int_to_string@str& (0+255),b
  1307   0012D0  0E00               	movlw	high main@result_text
  1308   0012D2  6F85               	movwf	(lcd_convert_int_to_string@str+1)& (0+255),b
  1309   0012D4  EC0F  F015         	call	_lcd_convert_int_to_string	;wreg free
  1310   0012D8  6E7E               	movwf	_ret^0,c
  1311   0012DA                     
  1312                           ;calculator.c: 65:             ret = lcd_8bit_send_string_pos(&lcd, 2, 3, result_text);
  1313   0012DA  0ECE               	movlw	low _lcd
  1314   0012DC  6E1E               	movwf	lcd_8bit_send_string_pos@lcd^0,c
  1315   0012DE  0E00               	movlw	high _lcd
  1316   0012E0  6E1F               	movwf	(lcd_8bit_send_string_pos@lcd+1)^0,c
  1317   0012E2  0E02               	movlw	2
  1318   0012E4  6E20               	movwf	lcd_8bit_send_string_pos@row^0,c
  1319   0012E6  0E03               	movlw	3
  1320   0012E8  6E21               	movwf	lcd_8bit_send_string_pos@colomn^0,c
  1321   0012EA  0E98               	movlw	low main@result_text
  1322   0012EC  6E22               	movwf	lcd_8bit_send_string_pos@string^0,c
  1323   0012EE  0E00               	movlw	high main@result_text
  1324   0012F0  6E23               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1325   0012F2  ECF7  F015         	call	_lcd_8bit_send_string_pos	;wreg free
  1326   0012F6  6E7E               	movwf	_ret^0,c
  1327                           
  1328                           ;calculator.c: 66:         }
  1329   0012F8  EF0D  F008         	goto	l2823
  1330   0012FC                     l2893:
  1331                           
  1332                           ; BSR set to: 0
  1333   0012FC  51FA               	movf	_keypad_value& (0+255),w,b
  1334   0012FE  B4D8               	btfsc	status,2,c
  1335   001300  EF84  F009         	goto	u2271
  1336   001304  EF86  F009         	goto	u2270
  1337   001308                     u2271:
  1338   001308  EFBE  F009         	goto	l218
  1339   00130C                     u2270:
  1340   00130C                     
  1341                           ; BSR set to: 0
  1342   00130C  0E14               	movlw	20
  1343   00130E  19F9               	xorwf	_lcd_output_char_col& (0+255),w,b
  1344   001310  B4D8               	btfsc	status,2,c
  1345   001312  EF8D  F009         	goto	u2281
  1346   001316  EF8F  F009         	goto	u2280
  1347   00131A                     u2281:
  1348   00131A  EFBE  F009         	goto	l218
  1349   00131E                     u2280:
  1350   00131E                     
  1351                           ; BSR set to: 0
  1352                           ;calculator.c: 69:         {;calculator.c: 70:             ret = lcd_8bit_send_char_pos(
      +                          &lcd, 1, ++lcd_output_char_col, keypad_value);
  1353   00131E  0ECE               	movlw	low _lcd
  1354   001320  6E1E               	movwf	lcd_8bit_send_char_pos@lcd^0,c
  1355   001322  0E00               	movlw	high _lcd
  1356   001324  6E1F               	movwf	(lcd_8bit_send_char_pos@lcd+1)^0,c
  1357   001326  0E01               	movlw	1
  1358   001328  6E20               	movwf	lcd_8bit_send_char_pos@row^0,c
  1359   00132A  2BF9               	incf	_lcd_output_char_col& (0+255),f,b
  1360   00132C  C0F9  F021         	movff	_lcd_output_char_col,lcd_8bit_send_char_pos@colomn
  1361   001330  C0FA  F022         	movff	_keypad_value,lcd_8bit_send_char_pos@data
  1362   001334  EC39  F016         	call	_lcd_8bit_send_char_pos	;wreg free
  1363   001338  6E7E               	movwf	_ret^0,c
  1364   00133A                     
  1365                           ;calculator.c: 71:             read_data[data_index] = '\0';
  1366   00133A  0EE0               	movlw	low _read_data
  1367   00133C  0100               	movlb	0	; () banked
  1368   00133E  25F8               	addwf	_data_index& (0+255),w,b
  1369   001340  6ED9               	movwf	fsr2l,c
  1370   001342  6ADA               	clrf	fsr2h,c
  1371   001344  0E00               	movlw	high _read_data
  1372   001346  22DA               	addwfc	fsr2h,f,c
  1373   001348  0E00               	movlw	0
  1374   00134A  6EDF               	movwf	indf2,c
  1375   00134C                     
  1376                           ; BSR set to: 0
  1377                           ;calculator.c: 72:             read_data[data_index++] = keypad_value;
  1378   00134C  0EE0               	movlw	low _read_data
  1379   00134E  25F8               	addwf	_data_index& (0+255),w,b
  1380   001350  6ED9               	movwf	fsr2l,c
  1381   001352  6ADA               	clrf	fsr2h,c
  1382   001354  0E00               	movlw	high _read_data
  1383   001356  22DA               	addwfc	fsr2h,f,c
  1384   001358  C0FA  FFDF         	movff	_keypad_value,indf2
  1385   00135C                     
  1386                           ; BSR set to: 0
  1387   00135C  2BF8               	incf	_data_index& (0+255),f,b
  1388   00135E                     
  1389                           ; BSR set to: 0
  1390                           ;calculator.c: 74:             ret = lcd_8bit_send_char_pos(&lcd, 1, lcd_output_char_col
      +                          +1, ' ');
  1391   00135E  0ECE               	movlw	low _lcd
  1392   001360  6E1E               	movwf	lcd_8bit_send_char_pos@lcd^0,c
  1393   001362  0E00               	movlw	high _lcd
  1394   001364  6E1F               	movwf	(lcd_8bit_send_char_pos@lcd+1)^0,c
  1395   001366  0E01               	movlw	1
  1396   001368  6E20               	movwf	lcd_8bit_send_char_pos@row^0,c
  1397   00136A  29F9               	incf	_lcd_output_char_col& (0+255),w,b
  1398   00136C  6E21               	movwf	lcd_8bit_send_char_pos@colomn^0,c
  1399   00136E  0E20               	movlw	32
  1400   001370  6E22               	movwf	lcd_8bit_send_char_pos@data^0,c
  1401   001372  EC39  F016         	call	_lcd_8bit_send_char_pos	;wreg free
  1402   001376  6E7E               	movwf	_ret^0,c
  1403                           
  1404                           ;calculator.c: 75:         }
  1405   001378  EF0D  F008         	goto	l2823
  1406   00137C                     l218:
  1407                           
  1408                           ; BSR set to: 0
  1409   00137C  EF0D  F008         	goto	l2823
  1410   001380  EF00  F000         	goto	start
  1411   001384                     __end_of_main:
  1412                           	callstack 0
  1413                           
  1414 ;; *************** function _lcd_convert_int_to_string *****************
  1415 ;; Defined at:
  1416 ;;		line 196 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  value           4    0[BANK0 ] long 
  1419 ;;  str             2    4[BANK0 ] PTR unsigned char 
  1420 ;;		 -> main@result_text(11), 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  ret             1  122[COMRAM] unsigned char 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      unsigned char 
  1425 ;; Registers used:
  1426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1432 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;Total ram usage:        7 bytes
  1437 ;; Hardware stack levels used: 1
  1438 ;; Hardware stack levels required when called: 8
  1439 ;; This function calls:
  1440 ;;		_memset
  1441 ;;		_sprintf
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text1
  1448   002A1E                     __ptext1:
  1449                           	callstack 0
  1450   002A1E                     _lcd_convert_int_to_string:
  1451                           	callstack 22
  1452   002A1E                     
  1453                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 197:     Std_ReturnType ret = (Std_ReturnType)0x00;
  1454   002A1E  0E00               	movlw	0
  1455   002A20  6E7B               	movwf	lcd_convert_int_to_string@ret^0,c
  1456   002A22                     
  1457                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 198:     if(((void*)0) != str){
  1458   002A22  0100               	movlb	0	; () banked
  1459   002A24  5184               	movf	lcd_convert_int_to_string@str& (0+255),w,b
  1460   002A26  1185               	iorwf	(lcd_convert_int_to_string@str+1)& (0+255),w,b
  1461   002A28  B4D8               	btfsc	status,2,c
  1462   002A2A  EF19  F015         	goto	u2021
  1463   002A2E  EF1B  F015         	goto	u2020
  1464   002A32                     u2021:
  1465   002A32  EF3D  F015         	goto	l2717
  1466   002A36                     u2020:
  1467   002A36                     
  1468                           ; BSR set to: 0
  1469                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 199:         ret = (Std_ReturnType)0x01;
  1470   002A36  0E01               	movlw	1
  1471   002A38  6E7B               	movwf	lcd_convert_int_to_string@ret^0,c
  1472   002A3A                     
  1473                           ; BSR set to: 0
  1474                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 200:         memset(str, '\0', 11);
  1475   002A3A  C084  F001         	movff	lcd_convert_int_to_string@str,memset@dest
  1476   002A3E  C085  F002         	movff	lcd_convert_int_to_string@str+1,memset@dest+1
  1477   002A42  0E00               	movlw	0
  1478   002A44  6E04               	movwf	(memset@c+1)^0,c
  1479   002A46  0E00               	movlw	0
  1480   002A48  6E03               	movwf	memset@c^0,c
  1481   002A4A  0E00               	movlw	0
  1482   002A4C  6E06               	movwf	(memset@n+1)^0,c
  1483   002A4E  0E0B               	movlw	11
  1484   002A50  6E05               	movwf	memset@n^0,c
  1485   002A52  ECB7  F00D         	call	_memset	;wreg free
  1486   002A56                     
  1487                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 201:         sprintf(str, "%ld", value);
  1488   002A56  C084  F066         	movff	lcd_convert_int_to_string@str,sprintf@s
  1489   002A5A  C085  F067         	movff	lcd_convert_int_to_string@str+1,sprintf@s+1
  1490   002A5E  0E11               	movlw	low STR_1
  1491   002A60  6E68               	movwf	sprintf@fmt^0,c
  1492   002A62  0E10               	movlw	high STR_1
  1493   002A64  6E69               	movwf	(sprintf@fmt+1)^0,c
  1494   002A66  C080  F06A         	movff	lcd_convert_int_to_string@value,?_sprintf+4
  1495   002A6A  C081  F06B         	movff	lcd_convert_int_to_string@value+1,?_sprintf+5
  1496   002A6E  C082  F06C         	movff	lcd_convert_int_to_string@value+2,?_sprintf+6
  1497   002A72  C083  F06D         	movff	lcd_convert_int_to_string@value+3,?_sprintf+7
  1498   002A76  EC3F  F015         	call	_sprintf	;wreg free
  1499   002A7A                     l2717:
  1500                           
  1501                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 203:     return ret;
  1502   002A7A  507B               	movf	lcd_convert_int_to_string@ret^0,w,c
  1503   002A7C  0012               	return		;funcret
  1504   002A7E                     __end_of_lcd_convert_int_to_string:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _sprintf *****************
  1508 ;; Defined at:
  1509 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  s               2  101[COMRAM] PTR unsigned char 
  1512 ;;		 -> main@result_text(11), 
  1513 ;;  fmt             2  103[COMRAM] PTR const unsigned char 
  1514 ;;		 -> STR_1(4), 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  f              11  111[COMRAM] struct _IO_FILE
  1517 ;;  ap              2  109[COMRAM] PTR void [1]
  1518 ;;		 -> ?_sprintf(2), 
  1519 ;;  ret             2    0        int 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  2  101[COMRAM] int 
  1522 ;; Registers used:
  1523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1529 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;Total ram usage:       21 bytes
  1534 ;; Hardware stack levels used: 1
  1535 ;; Hardware stack levels required when called: 7
  1536 ;; This function calls:
  1537 ;;		_vfprintf
  1538 ;; This function is called by:
  1539 ;;		_lcd_convert_int_to_string
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text2
  1544   002A7E                     __ptext2:
  1545                           	callstack 0
  1546   002A7E                     _sprintf:
  1547                           	callstack 22
  1548   002A7E  0E6A               	movlw	low (?_sprintf+4)
  1549   002A80  6E6E               	movwf	sprintf@ap^0,c
  1550   002A82  0E00               	movlw	high (?_sprintf+4)
  1551   002A84  6E6F               	movwf	(sprintf@ap+1)^0,c
  1552   002A86  C066  F070         	movff	sprintf@s,sprintf@f
  1553   002A8A  C067  F071         	movff	sprintf@s+1,sprintf@f+1
  1554   002A8E  0E00               	movlw	0
  1555   002A90  6E74               	movwf	(sprintf@f+4)^0,c
  1556   002A92  0E00               	movlw	0
  1557   002A94  6E73               	movwf	(sprintf@f+3)^0,c
  1558   002A96  0E00               	movlw	0
  1559   002A98  6E7A               	movwf	(sprintf@f+10)^0,c
  1560   002A9A  0E00               	movlw	0
  1561   002A9C  6E79               	movwf	(sprintf@f+9)^0,c
  1562   002A9E  0E70               	movlw	low sprintf@f
  1563   002AA0  6E5E               	movwf	vfprintf@fp^0,c
  1564   002AA2  0E00               	movlw	high sprintf@f
  1565   002AA4  6E5F               	movwf	(vfprintf@fp+1)^0,c
  1566   002AA6  C068  F060         	movff	sprintf@fmt,vfprintf@fmt
  1567   002AAA  C069  F061         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1568   002AAE  0E6E               	movlw	low sprintf@ap
  1569   002AB0  6E62               	movwf	vfprintf@ap^0,c
  1570   002AB2  0E00               	movlw	high sprintf@ap
  1571   002AB4  6E63               	movwf	(vfprintf@ap+1)^0,c
  1572   002AB6  EC66  F015         	call	_vfprintf	;wreg free
  1573   002ABA  5073               	movf	(sprintf@f+3)^0,w,c
  1574   002ABC  2466               	addwf	sprintf@s^0,w,c
  1575   002ABE  6ED9               	movwf	fsr2l,c
  1576   002AC0  5074               	movf	(sprintf@f+4)^0,w,c
  1577   002AC2  2067               	addwfc	(sprintf@s+1)^0,w,c
  1578   002AC4  6EDA               	movwf	fsr2h,c
  1579   002AC6  0E00               	movlw	0
  1580   002AC8  6EDF               	movwf	indf2,c
  1581   002ACA  0012               	return		;funcret
  1582   002ACC                     __end_of_sprintf:
  1583                           	callstack 0
  1584                           
  1585 ;; *************** function _vfprintf *****************
  1586 ;; Defined at:
  1587 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  fp              2   93[COMRAM] PTR struct _IO_FILE
  1590 ;;		 -> sprintf@f(11), 
  1591 ;;  fmt             2   95[COMRAM] PTR const unsigned char 
  1592 ;;		 -> STR_1(4), 
  1593 ;;  ap              2   97[COMRAM] PTR PTR void 
  1594 ;;		 -> sprintf@ap(2), 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  cfmt            2   99[COMRAM] PTR unsigned char 
  1597 ;;		 -> STR_1(4), 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  2   93[COMRAM] int 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1607 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;Total ram usage:        8 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; Hardware stack levels required when called: 6
  1614 ;; This function calls:
  1615 ;;		_vfpfcnvrt
  1616 ;; This function is called by:
  1617 ;;		_sprintf
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text3
  1622   002ACC                     __ptext3:
  1623                           	callstack 0
  1624   002ACC                     _vfprintf:
  1625                           	callstack 22
  1626   002ACC                     
  1627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1628   002ACC  C060  F064         	movff	vfprintf@fmt,vfprintf@cfmt
  1629   002AD0  C061  F065         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1632   002AD4  EF7A  F015         	goto	l2517
  1633   002AD8                     l2515:
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1636   002AD8  C05E  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1637   002ADC  C05F  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1638   002AE0  0E64               	movlw	low vfprintf@cfmt
  1639   002AE2  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1640   002AE4  0E00               	movlw	high vfprintf@cfmt
  1641   002AE6  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1642   002AE8  C062  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1643   002AEC  C063  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1644   002AF0  EC01  F00B         	call	_vfpfcnvrt	;wreg free
  1645   002AF4                     l2517:
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1648   002AF4  C064  FFF6         	movff	vfprintf@cfmt,tblptrl
  1649   002AF8  C065  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1650   002AFC                     	if	0	;tblptru may be non-zero
  1651   002AFC                     	endif
  1652   002AFC                     	if	0	;tblptru may be non-zero
  1653   002AFC                     	endif
  1654   002AFC  0008               	tblrd		*
  1655   002AFE  50F5               	movf	tablat,w,c
  1656   002B00  0900               	iorlw	0
  1657   002B02  A4D8               	btfss	status,2,c
  1658   002B04  EF86  F015         	goto	u1771
  1659   002B08  EF88  F015         	goto	u1770
  1660   002B0C                     u1771:
  1661   002B0C  EF6C  F015         	goto	l2515
  1662   002B10                     u1770:
  1663   002B10                     
  1664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1665   002B10  0E00               	movlw	0
  1666   002B12  6E5F               	movwf	(?_vfprintf+1)^0,c
  1667   002B14  0E00               	movlw	0
  1668   002B16  6E5E               	movwf	?_vfprintf^0,c
  1669   002B18  0012               	return		;funcret
  1670   002B1A                     __end_of_vfprintf:
  1671                           	callstack 0
  1672                           
  1673 ;; *************** function _vfpfcnvrt *****************
  1674 ;; Defined at:
  1675 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1678 ;;		 -> sprintf@f(11), 
  1679 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1680 ;;		 -> vfprintf@cfmt(2), 
  1681 ;;  ap              2   66[COMRAM] PTR PTR void 
  1682 ;;		 -> sprintf@ap(2), 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  convarg         8   82[COMRAM] struct .
  1685 ;;  cp              2   91[COMRAM] PTR unsigned char 
  1686 ;;		 -> STR_1(4), 
  1687 ;;  i               2    0        int 
  1688 ;;  done            2    0        int 
  1689 ;;  c               1   90[COMRAM] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1699 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;Total ram usage:       31 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 5
  1706 ;; This function calls:
  1707 ;;		_dtoa
  1708 ;;		_fputc
  1709 ;; This function is called by:
  1710 ;;		_vfprintf
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text4
  1715   001602                     __ptext4:
  1716                           	callstack 0
  1717   001602                     _vfpfcnvrt:
  1718                           	callstack 22
  1719   001602                     
  1720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1721   001602  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1722   001606  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1723   00160A  CFDE FFF6          	movff	postinc2,tblptrl
  1724   00160E  CFDD FFF7          	movff	postdec2,tblptrh
  1725   001612                     	if	0	;tblptru may be non-zero
  1726   001612                     	endif
  1727   001612                     	if	0	;tblptru may be non-zero
  1728   001612                     	endif
  1729   001612  0008               	tblrd		*
  1730   001614  50F5               	movf	tablat,w,c
  1731   001616  0A25               	xorlw	37
  1732   001618  A4D8               	btfss	status,2,c
  1733   00161A  EF11  F00B         	goto	u1621
  1734   00161E  EF13  F00B         	goto	u1620
  1735   001622                     u1621:
  1736   001622  EF15  F00C         	goto	l2371
  1737   001626                     u1620:
  1738   001626                     
  1739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1740   001626  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1741   00162A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1742   00162E  2ADE               	incf	postinc2,f,c
  1743   001630  0E00               	movlw	0
  1744   001632  22DD               	addwfc	postdec2,f,c
  1745   001634                     
  1746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1747   001634  0E00               	movlw	0
  1748   001636  0100               	movlb	0	; () banked
  1749   001638  6FF5               	movwf	(_width+1)& (0+255),b
  1750   00163A  0E00               	movlw	0
  1751   00163C  6FF4               	movwf	_width& (0+255),b
  1752   00163E  C0F4  F07D         	movff	_width,_flags
  1753   001642                     
  1754                           ; BSR set to: 0
  1755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1756   001642  69F6               	setf	_prec& (0+255),b
  1757   001644  69F7               	setf	(_prec+1)& (0+255),b
  1758   001646                     
  1759                           ; BSR set to: 0
  1760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1761   001646  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1762   00164A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1763   00164E  CFDE F05C          	movff	postinc2,vfpfcnvrt@cp
  1764   001652  CFDD F05D          	movff	postdec2,vfpfcnvrt@cp+1
  1765   001656                     
  1766                           ; BSR set to: 0
  1767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1119:   c = *cp;
  1768   001656  C05C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1769   00165A  C05D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1770   00165E                     	if	0	;tblptru may be non-zero
  1771   00165E                     	endif
  1772   00165E                     	if	0	;tblptru may be non-zero
  1773   00165E                     	endif
  1774   00165E  0008               	tblrd		*
  1775   001660  CFF5 F05B          	movff	tablat,vfpfcnvrt@c
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1120:   switch(c)
      +                           {
  1778   001664  EF40  F00B         	goto	l2347
  1779   001668                     l2339:
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1135:     cp++;
  1783   001668  4A5C               	infsnz	vfpfcnvrt@cp^0,f,c
  1784   00166A  2A5D               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1785                           
  1786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1142:     break;
  1787   00166C  EF59  F00B         	goto	l2349
  1788   001670                     l2341:
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1176:     c = 'i'
      +                          ;
  1792   001670  0E69               	movlw	105
  1793   001672  6E5B               	movwf	vfpfcnvrt@c^0,c
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1177:     break;
  1796   001674  EF59  F00B         	goto	l2349
  1797   001678                     l2343:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1179:     c = 0;
  1801   001678  0E00               	movlw	0
  1802   00167A  6E5B               	movwf	vfpfcnvrt@c^0,c
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1180:     break;
  1805   00167C  EF59  F00B         	goto	l2349
  1806   001680                     l2347:
  1807                           
  1808                           ; BSR set to: 0
  1809   001680  505B               	movf	vfpfcnvrt@c^0,w,c
  1810   001682  6E45               	movwf	??_vfpfcnvrt^0,c
  1811   001684  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  1812                           
  1813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1814                           ; Switch size 1, requested type "simple"
  1815                           ; Number of cases is 1, Range of values is 0 to 0
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte            4     3 (average)
  1819                           ;	Chosen strategy is simple_byte
  1820   001686  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  1821   001688  0A00               	xorlw	0	; case 0
  1822   00168A  B4D8               	btfsc	status,2,c
  1823   00168C  EF4A  F00B         	goto	l3067
  1824   001690  EF3C  F00B         	goto	l2343
  1825   001694                     l3067:
  1826                           
  1827                           ; BSR set to: 0
  1828                           ; Switch size 1, requested type "simple"
  1829                           ; Number of cases is 3, Range of values is 100 to 108
  1830                           ; switch strategies available:
  1831                           ; Name         Instructions Cycles
  1832                           ; simple_byte           10     6 (average)
  1833                           ;	Chosen strategy is simple_byte
  1834   001694  5045               	movf	??_vfpfcnvrt^0,w,c
  1835   001696  0A64               	xorlw	100	; case 100
  1836   001698  B4D8               	btfsc	status,2,c
  1837   00169A  EF38  F00B         	goto	l2341
  1838   00169E  0A0D               	xorlw	13	; case 105
  1839   0016A0  B4D8               	btfsc	status,2,c
  1840   0016A2  EF38  F00B         	goto	l2341
  1841   0016A6  0A05               	xorlw	5	; case 108
  1842   0016A8  B4D8               	btfsc	status,2,c
  1843   0016AA  EF34  F00B         	goto	l2339
  1844   0016AE  EF3C  F00B         	goto	l2343
  1845   0016B2                     l2349:
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1849   0016B2  C05C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1850   0016B6  C05D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1851   0016BA                     	if	0	;tblptru may be non-zero
  1852   0016BA                     	endif
  1853   0016BA                     	if	0	;tblptru may be non-zero
  1854   0016BA                     	endif
  1855   0016BA  0008               	tblrd		*
  1856   0016BC  50F5               	movf	tablat,w,c
  1857   0016BE  0A64               	xorlw	100
  1858   0016C0  B4D8               	btfsc	status,2,c
  1859   0016C2  EF65  F00B         	goto	u1631
  1860   0016C6  EF67  F00B         	goto	u1630
  1861   0016CA                     u1631:
  1862   0016CA  EFD1  F00B         	goto	l2359
  1863   0016CE                     u1630:
  1864   0016CE                     
  1865                           ; BSR set to: 0
  1866   0016CE  C05C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1867   0016D2  C05D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1868   0016D6                     	if	0	;tblptru may be non-zero
  1869   0016D6                     	endif
  1870   0016D6                     	if	0	;tblptru may be non-zero
  1871   0016D6                     	endif
  1872   0016D6  0008               	tblrd		*
  1873   0016D8  50F5               	movf	tablat,w,c
  1874   0016DA  0A69               	xorlw	105
  1875   0016DC  A4D8               	btfss	status,2,c
  1876   0016DE  EF73  F00B         	goto	u1641
  1877   0016E2  EF75  F00B         	goto	u1640
  1878   0016E6                     u1641:
  1879   0016E6  EF0C  F00C         	goto	l2367
  1880   0016EA                     u1640:
  1881   0016EA  EFD1  F00B         	goto	l2359
  1882   0016EE                     l2353:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1191:      convar
      +                          g.ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1886   0016EE  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1887   0016F2  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1888   0016F6  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1889   0016FA  0E02               	movlw	2
  1890   0016FC  26DE               	addwf	postinc2,f,c
  1891   0016FE  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1892   001702  0E00               	movlw	0
  1893   001704  22DD               	addwfc	postdec2,f,c
  1894   001706  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1895   00170A  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1896   00170E  CFDE F053          	movff	postinc2,vfpfcnvrt@convarg
  1897   001712  CFDD F054          	movff	postdec2,vfpfcnvrt@convarg+1
  1898   001716  0E00               	movlw	0
  1899   001718  BE54               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1900   00171A  0EFF               	movlw	-1
  1901   00171C  6E55               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1902   00171E  6E56               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1903   001720  6E57               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1904   001722  6E58               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1905   001724  6E59               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1906   001726  6E5A               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1192:      break;
  1909   001728  EFE6  F00B         	goto	l2361
  1910   00172C                     l2355:
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1205:      convar
      +                          g.ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  1914   00172C  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1915   001730  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1916   001734  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1917   001738  0E04               	movlw	4
  1918   00173A  26DE               	addwf	postinc2,f,c
  1919   00173C  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1920   001740  0E00               	movlw	0
  1921   001742  22DD               	addwfc	postdec2,f,c
  1922   001744  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1923   001748  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1924   00174C  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  1925   001750  CFDE F048          	movff	postinc2,??_vfpfcnvrt+3
  1926   001754  CFDE F049          	movff	postinc2,??_vfpfcnvrt+4
  1927   001758  CFDE F04A          	movff	postinc2,??_vfpfcnvrt+5
  1928   00175C  C047  F04B         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  1929   001760  C048  F04C         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  1930   001764  C049  F04D         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  1931   001768  C04A  F04E         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  1932   00176C  6A4F               	clrf	(??_vfpfcnvrt+10)^0,c
  1933   00176E  BE4E               	btfsc	(??_vfpfcnvrt+9)^0,7,c
  1934   001770  684F               	setf	(??_vfpfcnvrt+10)^0,c
  1935   001772  C04F  F050         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  1936   001776  C04F  F051         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  1937   00177A  C04F  F052         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  1938   00177E  C04B  F053         	movff	??_vfpfcnvrt+6,vfpfcnvrt@convarg
  1939   001782  C04C  F054         	movff	??_vfpfcnvrt+7,vfpfcnvrt@convarg+1
  1940   001786  C04D  F055         	movff	??_vfpfcnvrt+8,vfpfcnvrt@convarg+2
  1941   00178A  C04E  F056         	movff	??_vfpfcnvrt+9,vfpfcnvrt@convarg+3
  1942   00178E  C04F  F057         	movff	??_vfpfcnvrt+10,vfpfcnvrt@convarg+4
  1943   001792  C050  F058         	movff	??_vfpfcnvrt+11,vfpfcnvrt@convarg+5
  1944   001796  C051  F059         	movff	??_vfpfcnvrt+12,vfpfcnvrt@convarg+6
  1945   00179A  C052  F05A         	movff	??_vfpfcnvrt+13,vfpfcnvrt@convarg+7
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1206:      break;
  1948   00179E  EFE6  F00B         	goto	l2361
  1949   0017A2                     l2359:
  1950                           
  1951                           ; BSR set to: 0
  1952   0017A2  505B               	movf	vfpfcnvrt@c^0,w,c
  1953   0017A4  6E45               	movwf	??_vfpfcnvrt^0,c
  1954   0017A6  6A46               	clrf	(??_vfpfcnvrt+1)^0,c
  1955                           
  1956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1957                           ; Switch size 1, requested type "simple"
  1958                           ; Number of cases is 1, Range of values is 0 to 0
  1959                           ; switch strategies available:
  1960                           ; Name         Instructions Cycles
  1961                           ; simple_byte            4     3 (average)
  1962                           ;	Chosen strategy is simple_byte
  1963   0017A8  5046               	movf	(??_vfpfcnvrt+1)^0,w,c
  1964   0017AA  0A00               	xorlw	0	; case 0
  1965   0017AC  B4D8               	btfsc	status,2,c
  1966   0017AE  EFDB  F00B         	goto	l3069
  1967   0017B2  EFE6  F00B         	goto	l2361
  1968   0017B6                     l3069:
  1969                           
  1970                           ; BSR set to: 0
  1971                           ; Switch size 1, requested type "simple"
  1972                           ; Number of cases is 2, Range of values is 105 to 108
  1973                           ; switch strategies available:
  1974                           ; Name         Instructions Cycles
  1975                           ; simple_byte            7     4 (average)
  1976                           ;	Chosen strategy is simple_byte
  1977   0017B6  5045               	movf	??_vfpfcnvrt^0,w,c
  1978   0017B8  0A69               	xorlw	105	; case 105
  1979   0017BA  B4D8               	btfsc	status,2,c
  1980   0017BC  EF77  F00B         	goto	l2353
  1981   0017C0  0A05               	xorlw	5	; case 108
  1982   0017C2  B4D8               	btfsc	status,2,c
  1983   0017C4  EF96  F00B         	goto	l2355
  1984   0017C8  EFE6  F00B         	goto	l2361
  1985   0017CC                     l2361:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1989   0017CC  0E01               	movlw	1
  1990   0017CE  245C               	addwf	vfpfcnvrt@cp^0,w,c
  1991   0017D0  6E45               	movwf	??_vfpfcnvrt^0,c
  1992   0017D2  0E00               	movlw	0
  1993   0017D4  205D               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1994   0017D6  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1995   0017D8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1996   0017DC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1997   0017E0  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1998   0017E4  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1999   0017E8                     
  2000                           ; BSR set to: 0
  2001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2002   0017E8  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2003   0017EC  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2004   0017F0  C053  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2005   0017F4  C054  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2006   0017F8  C055  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2007   0017FC  C056  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2008   001800  C057  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2009   001804  C058  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2010   001808  C059  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2011   00180C  C05A  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2012   001810  ECC2  F009         	call	_dtoa	;wreg free
  2013   001814  EF29  F00C         	goto	l1049
  2014   001818                     l2367:
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2017   001818  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2018   00181C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2019   001820  2ADE               	incf	postinc2,f,c
  2020   001822  0E00               	movlw	0
  2021   001824  22DD               	addwfc	postdec2,f,c
  2022   001826  EF29  F00C         	goto	l1049
  2023   00182A                     l2371:
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2026   00182A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2027   00182E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2028   001832  CFDE FFF6          	movff	postinc2,tblptrl
  2029   001836  CFDD FFF7          	movff	postdec2,tblptrh
  2030   00183A                     	if	0	;tblptru may be non-zero
  2031   00183A                     	endif
  2032   00183A                     	if	0	;tblptru may be non-zero
  2033   00183A                     	endif
  2034   00183A  0008               	tblrd		*
  2035   00183C  50F5               	movf	tablat,w,c
  2036   00183E  6E01               	movwf	fputc@c^0,c
  2037   001840  6A02               	clrf	(fputc@c+1)^0,c
  2038   001842  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2039   001846  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2040   00184A  ECE4  F011         	call	_fputc	;wreg free
  2041   00184E  EF0C  F00C         	goto	l2367
  2042   001852                     l1049:
  2043   001852  0012               	return		;funcret
  2044   001854                     __end_of_vfpfcnvrt:
  2045                           	callstack 0
  2046                           
  2047 ;; *************** function _dtoa *****************
  2048 ;; Defined at:
  2049 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2052 ;;		 -> sprintf@f(11), 
  2053 ;;  d               8   29[COMRAM] long long 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  n               8   51[COMRAM] long long 
  2056 ;;  i               2   59[COMRAM] int 
  2057 ;;  w               2   49[COMRAM] int 
  2058 ;;  p               2   47[COMRAM] int 
  2059 ;;  s               1   61[COMRAM] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2069 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;Total ram usage:       35 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 4
  2076 ;; This function calls:
  2077 ;;		___aodiv
  2078 ;;		___aomod
  2079 ;;		_abs
  2080 ;;		_pad
  2081 ;; This function is called by:
  2082 ;;		_vfpfcnvrt
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text5
  2087   001384                     __ptext5:
  2088                           	callstack 0
  2089   001384                     _dtoa:
  2090                           	callstack 22
  2091   001384                     
  2092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2093   001384  C01E  F034         	movff	dtoa@d,dtoa@n
  2094   001388  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2095   00138C  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2096   001390  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2097   001394  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2098   001398  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2099   00139C  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2100   0013A0  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2101   0013A4                     
  2102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2103   0013A4  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2104   0013A6  EFD7  F009         	goto	u1471
  2105   0013AA  EFDA  F009         	goto	u1470
  2106   0013AE                     u1471:
  2107   0013AE  0E01               	movlw	1
  2108   0013B0  EFDB  F009         	goto	u1480
  2109   0013B4                     u1470:
  2110   0013B4  0E00               	movlw	0
  2111   0013B6                     u1480:
  2112   0013B6  6E3E               	movwf	dtoa@s^0,c
  2113   0013B8                     
  2114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2115   0013B8  503E               	movf	dtoa@s^0,w,c
  2116   0013BA  B4D8               	btfsc	status,2,c
  2117   0013BC  EFE2  F009         	goto	u1491
  2118   0013C0  EFE4  F009         	goto	u1490
  2119   0013C4                     u1491:
  2120   0013C4  EFF4  F009         	goto	l2243
  2121   0013C8                     u1490:
  2122   0013C8                     
  2123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2124   0013C8  1E3B               	comf	(dtoa@n+7)^0,f,c
  2125   0013CA  1E3A               	comf	(dtoa@n+6)^0,f,c
  2126   0013CC  1E39               	comf	(dtoa@n+5)^0,f,c
  2127   0013CE  1E38               	comf	(dtoa@n+4)^0,f,c
  2128   0013D0  1E37               	comf	(dtoa@n+3)^0,f,c
  2129   0013D2  1E36               	comf	(dtoa@n+2)^0,f,c
  2130   0013D4  1E35               	comf	(dtoa@n+1)^0,f,c
  2131   0013D6  6C34               	negf	dtoa@n^0,c
  2132   0013D8  0E00               	movlw	0
  2133   0013DA  2235               	addwfc	(dtoa@n+1)^0,f,c
  2134   0013DC  2236               	addwfc	(dtoa@n+2)^0,f,c
  2135   0013DE  2237               	addwfc	(dtoa@n+3)^0,f,c
  2136   0013E0  2238               	addwfc	(dtoa@n+4)^0,f,c
  2137   0013E2  2239               	addwfc	(dtoa@n+5)^0,f,c
  2138   0013E4  223A               	addwfc	(dtoa@n+6)^0,f,c
  2139   0013E6  223B               	addwfc	(dtoa@n+7)^0,f,c
  2140   0013E8                     l2243:
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2143   0013E8  0100               	movlb	0	; () banked
  2144   0013EA  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  2145   0013EC  EF02  F00A         	goto	u1500
  2146   0013F0  51F7               	movf	(_prec+1)& (0+255),w,b
  2147   0013F2  E106               	bnz	u1501
  2148   0013F4  05F6               	decf	_prec& (0+255),w,b
  2149   0013F6  B0D8               	btfsc	status,0,c
  2150   0013F8  EF00  F00A         	goto	u1501
  2151   0013FC  EF02  F00A         	goto	u1500
  2152   001400                     u1501:
  2153   001400  EF08  F00A         	goto	l1018
  2154   001404                     u1500:
  2155   001404                     
  2156                           ; BSR set to: 0
  2157   001404  0E00               	movlw	0
  2158   001406  6E31               	movwf	(dtoa@p+1)^0,c
  2159   001408  0E01               	movlw	1
  2160   00140A  6E30               	movwf	dtoa@p^0,c
  2161   00140C  EF0C  F00A         	goto	l1020
  2162   001410                     l1018:
  2163                           
  2164                           ; BSR set to: 0
  2165   001410  C0F6  F030         	movff	_prec,dtoa@p
  2166   001414  C0F7  F031         	movff	_prec+1,dtoa@p+1
  2167   001418                     l1020:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2171   001418  C0F4  F032         	movff	_width,dtoa@w
  2172   00141C  C0F5  F033         	movff	_width+1,dtoa@w+1
  2173   001420                     
  2174                           ; BSR set to: 0
  2175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2176   001420  503E               	movf	dtoa@s^0,w,c
  2177   001422  B4D8               	btfsc	status,2,c
  2178   001424  EF16  F00A         	goto	u1511
  2179   001428  EF18  F00A         	goto	u1510
  2180   00142C                     u1511:
  2181   00142C  EF2F  F00A         	goto	l1021
  2182   001430                     u1510:
  2183   001430                     
  2184                           ; BSR set to: 0
  2185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2186   001430  0632               	decf	dtoa@w^0,f,c
  2187   001432  A0D8               	btfss	status,0,c
  2188   001434  0633               	decf	(dtoa@w+1)^0,f,c
  2189   001436                     
  2190                           ; BSR set to: 0
  2191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2192   001436  503E               	movf	dtoa@s^0,w,c
  2193   001438  A4D8               	btfss	status,2,c
  2194   00143A  EF21  F00A         	goto	u1521
  2195   00143E  EF23  F00A         	goto	u1520
  2196   001442                     u1521:
  2197   001442  EF29  F00A         	goto	l2255
  2198   001446                     u1520:
  2199   001446                     
  2200                           ; BSR set to: 0
  2201   001446  0E00               	movlw	0
  2202   001448  6E2F               	movwf	(_dtoa$954+1)^0,c
  2203   00144A  0E2B               	movlw	43
  2204   00144C  6E2E               	movwf	_dtoa$954^0,c
  2205   00144E  EF2D  F00A         	goto	l2257
  2206   001452                     l2255:
  2207                           
  2208                           ; BSR set to: 0
  2209   001452  0E00               	movlw	0
  2210   001454  6E2F               	movwf	(_dtoa$954+1)^0,c
  2211   001456  0E2D               	movlw	45
  2212   001458  6E2E               	movwf	_dtoa$954^0,c
  2213   00145A                     l2257:
  2214                           
  2215                           ; BSR set to: 0
  2216   00145A  C02E  F03E         	movff	_dtoa$954,dtoa@s
  2217   00145E                     l1021:
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2221   00145E  0E00               	movlw	0
  2222   001460  6E3D               	movwf	(dtoa@i+1)^0,c
  2223   001462  0E1F               	movlw	31
  2224   001464  6E3C               	movwf	dtoa@i^0,c
  2225   001466                     
  2226                           ; BSR set to: 0
  2227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2228   001466  0E00               	movlw	0
  2229   001468  0101               	movlb	1	; () banked
  2230   00146A  6F31               	movwf	(_dbuf+31)& (0+255),b
  2231                           
  2232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2233   00146C  EFB4  F00A         	goto	l2271
  2234   001470                     l2261:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2237   001470  063C               	decf	dtoa@i^0,f,c
  2238   001472  A0D8               	btfss	status,0,c
  2239   001474  063D               	decf	(dtoa@i+1)^0,f,c
  2240   001476                     
  2241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2242   001476  0E12               	movlw	low _dbuf
  2243   001478  243C               	addwf	dtoa@i^0,w,c
  2244   00147A  6ED9               	movwf	fsr2l,c
  2245   00147C  0E01               	movlw	high _dbuf
  2246   00147E  203D               	addwfc	(dtoa@i+1)^0,w,c
  2247   001480  6EDA               	movwf	fsr2h,c
  2248   001482  C034  F001         	movff	dtoa@n,___aomod@dividend
  2249   001486  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2250   00148A  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2251   00148E  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2252   001492  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2253   001496  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2254   00149A  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2255   00149E  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2256   0014A2  0E0A               	movlw	10
  2257   0014A4  6E09               	movwf	___aomod@divisor^0,c
  2258   0014A6  0E00               	movlw	0
  2259   0014A8  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2260   0014AA  0E00               	movlw	0
  2261   0014AC  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2262   0014AE  0E00               	movlw	0
  2263   0014B0  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2264   0014B2  0E00               	movlw	0
  2265   0014B4  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2266   0014B6  0E00               	movlw	0
  2267   0014B8  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2268   0014BA  0E00               	movlw	0
  2269   0014BC  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2270   0014BE  0E00               	movlw	0
  2271   0014C0  6E10               	movwf	(___aomod@divisor+7)^0,c
  2272   0014C2  EC72  F00E         	call	___aomod	;wreg free
  2273   0014C6  C001  F026         	movff	?___aomod,??_dtoa
  2274   0014CA  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2275   0014CE  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2276   0014D2  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2277   0014D6  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2278   0014DA  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2279   0014DE  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2280   0014E2  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2281   0014E6  C026  F013         	movff	??_dtoa,abs@a
  2282   0014EA  C027  F014         	movff	??_dtoa+1,abs@a+1
  2283   0014EE  EC19  F016         	call	_abs	;wreg free
  2284   0014F2  5013               	movf	?_abs^0,w,c
  2285   0014F4  0F30               	addlw	48
  2286   0014F6  6EDF               	movwf	indf2,c
  2287   0014F8                     
  2288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2289   0014F8  0630               	decf	dtoa@p^0,f,c
  2290   0014FA  A0D8               	btfss	status,0,c
  2291   0014FC  0631               	decf	(dtoa@p+1)^0,f,c
  2292   0014FE                     
  2293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2294   0014FE  0632               	decf	dtoa@w^0,f,c
  2295   001500  A0D8               	btfss	status,0,c
  2296   001502  0633               	decf	(dtoa@w+1)^0,f,c
  2297   001504                     
  2298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2299   001504  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2300   001508  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2301   00150C  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2302   001510  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2303   001514  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2304   001518  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2305   00151C  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2306   001520  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2307   001524  0E0A               	movlw	10
  2308   001526  6E09               	movwf	___aodiv@divisor^0,c
  2309   001528  0E00               	movlw	0
  2310   00152A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2311   00152C  0E00               	movlw	0
  2312   00152E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2313   001530  0E00               	movlw	0
  2314   001532  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2315   001534  0E00               	movlw	0
  2316   001536  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2317   001538  0E00               	movlw	0
  2318   00153A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2319   00153C  0E00               	movlw	0
  2320   00153E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2321   001540  0E00               	movlw	0
  2322   001542  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2323   001544  ECF3  F00C         	call	___aodiv	;wreg free
  2324   001548  C001  F034         	movff	?___aodiv,dtoa@n
  2325   00154C  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2326   001550  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2327   001554  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2328   001558  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2329   00155C  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2330   001560  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2331   001564  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2332   001568                     l2271:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2335   001568  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2336   00156A  EFBF  F00A         	goto	u1531
  2337   00156E  503D               	movf	(dtoa@i+1)^0,w,c
  2338   001570  E108               	bnz	u1530
  2339   001572  043C               	decf	dtoa@i^0,w,c
  2340   001574  A0D8               	btfss	status,0,c
  2341   001576  EFBF  F00A         	goto	u1531
  2342   00157A  EFC1  F00A         	goto	u1530
  2343   00157E                     u1531:
  2344   00157E  EFDD  F00A         	goto	l2277
  2345   001582                     u1530:
  2346   001582  5034               	movf	dtoa@n^0,w,c
  2347   001584  1035               	iorwf	(dtoa@n+1)^0,w,c
  2348   001586  1036               	iorwf	(dtoa@n+2)^0,w,c
  2349   001588  1037               	iorwf	(dtoa@n+3)^0,w,c
  2350   00158A  1038               	iorwf	(dtoa@n+4)^0,w,c
  2351   00158C  1039               	iorwf	(dtoa@n+5)^0,w,c
  2352   00158E  103A               	iorwf	(dtoa@n+6)^0,w,c
  2353   001590  103B               	iorwf	(dtoa@n+7)^0,w,c
  2354   001592  A4D8               	btfss	status,2,c
  2355   001594  EFCE  F00A         	goto	u1541
  2356   001598  EFD0  F00A         	goto	u1540
  2357   00159C                     u1541:
  2358   00159C  EF38  F00A         	goto	l2261
  2359   0015A0                     u1540:
  2360   0015A0  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2361   0015A2  EFDD  F00A         	goto	u1550
  2362   0015A6  5031               	movf	(dtoa@p+1)^0,w,c
  2363   0015A8  E106               	bnz	u1551
  2364   0015AA  0430               	decf	dtoa@p^0,w,c
  2365   0015AC  B0D8               	btfsc	status,0,c
  2366   0015AE  EFDB  F00A         	goto	u1551
  2367   0015B2  EFDD  F00A         	goto	u1550
  2368   0015B6                     u1551:
  2369   0015B6  EF38  F00A         	goto	l2261
  2370   0015BA                     u1550:
  2371   0015BA                     l2277:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2374   0015BA  503E               	movf	dtoa@s^0,w,c
  2375   0015BC  B4D8               	btfsc	status,2,c
  2376   0015BE  EFE3  F00A         	goto	u1561
  2377   0015C2  EFE5  F00A         	goto	u1560
  2378   0015C6                     u1561:
  2379   0015C6  EFF0  F00A         	goto	l2283
  2380   0015CA                     u1560:
  2381   0015CA                     
  2382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2383   0015CA  063C               	decf	dtoa@i^0,f,c
  2384   0015CC  A0D8               	btfss	status,0,c
  2385   0015CE  063D               	decf	(dtoa@i+1)^0,f,c
  2386   0015D0                     
  2387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2388   0015D0  0E12               	movlw	low _dbuf
  2389   0015D2  243C               	addwf	dtoa@i^0,w,c
  2390   0015D4  6ED9               	movwf	fsr2l,c
  2391   0015D6  0E01               	movlw	high _dbuf
  2392   0015D8  203D               	addwfc	(dtoa@i+1)^0,w,c
  2393   0015DA  6EDA               	movwf	fsr2h,c
  2394   0015DC  C03E  FFDF         	movff	dtoa@s,indf2
  2395   0015E0                     l2283:
  2396                           
  2397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2398   0015E0  C01C  F011         	movff	dtoa@fp,pad@fp
  2399   0015E4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2400   0015E8  0E12               	movlw	low _dbuf
  2401   0015EA  243C               	addwf	dtoa@i^0,w,c
  2402   0015EC  6E13               	movwf	pad@buf^0,c
  2403   0015EE  0E01               	movlw	high _dbuf
  2404   0015F0  203D               	addwfc	(dtoa@i+1)^0,w,c
  2405   0015F2  6E14               	movwf	(pad@buf+1)^0,c
  2406   0015F4  C032  F015         	movff	dtoa@w,pad@p
  2407   0015F8  C033  F016         	movff	dtoa@w+1,pad@p+1
  2408   0015FC  ECC6  F013         	call	_pad	;wreg free
  2409   001600  0012               	return		;funcret
  2410   001602                     __end_of_dtoa:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _pad *****************
  2414 ;; Defined at:
  2415 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2418 ;;		 -> sprintf@f(11), 
  2419 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2420 ;;		 -> dbuf(32), 
  2421 ;;  p               2   20[COMRAM] int 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  w               2   25[COMRAM] int 
  2424 ;;  i               2   23[COMRAM] int 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2434 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;Total ram usage:       11 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 3
  2441 ;; This function calls:
  2442 ;;		_fputc
  2443 ;;		_fputs
  2444 ;; This function is called by:
  2445 ;;		_dtoa
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text6
  2450   00278C                     __ptext6:
  2451                           	callstack 0
  2452   00278C                     _pad:
  2453                           	callstack 22
  2454   00278C                     
  2455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2456   00278C  BE16               	btfsc	(pad@p+1)^0,7,c
  2457   00278E  EFCB  F013         	goto	u1371
  2458   002792  EFCD  F013         	goto	u1370
  2459   002796                     u1371:
  2460   002796  EFD3  F013         	goto	l2183
  2461   00279A                     u1370:
  2462   00279A  C015  F01A         	movff	pad@p,pad@w
  2463   00279E  C016  F01B         	movff	pad@p+1,pad@w+1
  2464   0027A2  EFD7  F013         	goto	l1009
  2465   0027A6                     l2183:
  2466   0027A6  0E00               	movlw	0
  2467   0027A8  6E1B               	movwf	(pad@w+1)^0,c
  2468   0027AA  0E00               	movlw	0
  2469   0027AC  6E1A               	movwf	pad@w^0,c
  2470   0027AE                     l1009:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2473   0027AE  0E00               	movlw	0
  2474   0027B0  6E19               	movwf	(pad@i+1)^0,c
  2475   0027B2  0E00               	movlw	0
  2476   0027B4  6E18               	movwf	pad@i^0,c
  2477                           
  2478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2479   0027B6  EFE9  F013         	goto	l2189
  2480   0027BA                     l2185:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2483   0027BA  0E00               	movlw	0
  2484   0027BC  6E02               	movwf	(fputc@c+1)^0,c
  2485   0027BE  0E20               	movlw	32
  2486   0027C0  6E01               	movwf	fputc@c^0,c
  2487   0027C2  C011  F003         	movff	pad@fp,fputc@fp
  2488   0027C6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2489   0027CA  ECE4  F011         	call	_fputc	;wreg free
  2490   0027CE                     
  2491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2492   0027CE  4A18               	infsnz	pad@i^0,f,c
  2493   0027D0  2A19               	incf	(pad@i+1)^0,f,c
  2494   0027D2                     l2189:
  2495                           
  2496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2497   0027D2  501A               	movf	pad@w^0,w,c
  2498   0027D4  5C18               	subwf	pad@i^0,w,c
  2499   0027D6  5019               	movf	(pad@i+1)^0,w,c
  2500   0027D8  0A80               	xorlw	128
  2501   0027DA  6E17               	movwf	??_pad^0,c
  2502   0027DC  501B               	movf	(pad@w+1)^0,w,c
  2503   0027DE  0A80               	xorlw	128
  2504   0027E0  5817               	subwfb	??_pad^0,w,c
  2505   0027E2  A0D8               	btfss	status,0,c
  2506   0027E4  EFF6  F013         	goto	u1381
  2507   0027E8  EFF8  F013         	goto	u1380
  2508   0027EC                     u1381:
  2509   0027EC  EFDD  F013         	goto	l2185
  2510   0027F0                     u1380:
  2511   0027F0                     
  2512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2513   0027F0  C013  F00A         	movff	pad@buf,fputs@s
  2514   0027F4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2515   0027F8  C011  F00C         	movff	pad@fp,fputs@fp
  2516   0027FC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2517   002800  ECD5  F015         	call	_fputs	;wreg free
  2518   002804  0012               	return		;funcret
  2519   002806                     __end_of_pad:
  2520                           	callstack 0
  2521                           
  2522 ;; *************** function _fputs *****************
  2523 ;; Defined at:
  2524 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2527 ;;		 -> dbuf(32), 
  2528 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2529 ;;		 -> sprintf@f(11), 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  i               2   14[COMRAM] int 
  2532 ;;  c               1   13[COMRAM] unsigned char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  2    9[COMRAM] int 
  2535 ;; Registers used:
  2536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;Total ram usage:        7 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; Hardware stack levels required when called: 2
  2549 ;; This function calls:
  2550 ;;		_fputc
  2551 ;; This function is called by:
  2552 ;;		_pad
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text7
  2557   002BAA                     __ptext7:
  2558                           	callstack 0
  2559   002BAA                     _fputs:
  2560                           	callstack 22
  2561   002BAA  0E00               	movlw	0
  2562   002BAC  6E10               	movwf	(fputs@i+1)^0,c
  2563   002BAE  0E00               	movlw	0
  2564   002BB0  6E0F               	movwf	fputs@i^0,c
  2565   002BB2  EFE6  F015         	goto	l2073
  2566   002BB6                     l2069:
  2567   002BB6  C00E  F001         	movff	fputs@c,fputc@c
  2568   002BBA  6A02               	clrf	(fputc@c+1)^0,c
  2569   002BBC  C00C  F003         	movff	fputs@fp,fputc@fp
  2570   002BC0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2571   002BC4  ECE4  F011         	call	_fputc	;wreg free
  2572   002BC8  4A0F               	infsnz	fputs@i^0,f,c
  2573   002BCA  2A10               	incf	(fputs@i+1)^0,f,c
  2574   002BCC                     l2073:
  2575   002BCC  500F               	movf	fputs@i^0,w,c
  2576   002BCE  240A               	addwf	fputs@s^0,w,c
  2577   002BD0  6ED9               	movwf	fsr2l,c
  2578   002BD2  5010               	movf	(fputs@i+1)^0,w,c
  2579   002BD4  200B               	addwfc	(fputs@s+1)^0,w,c
  2580   002BD6  6EDA               	movwf	fsr2h,c
  2581   002BD8  50DF               	movf	indf2,w,c
  2582   002BDA  6E0E               	movwf	fputs@c^0,c
  2583   002BDC  500E               	movf	fputs@c^0,w,c
  2584   002BDE  A4D8               	btfss	status,2,c
  2585   002BE0  EFF4  F015         	goto	u1191
  2586   002BE4  EFF6  F015         	goto	u1190
  2587   002BE8                     u1191:
  2588   002BE8  EFDB  F015         	goto	l2069
  2589   002BEC                     u1190:
  2590   002BEC  0012               	return		;funcret
  2591   002BEE                     __end_of_fputs:
  2592                           	callstack 0
  2593                           
  2594 ;; *************** function _fputc *****************
  2595 ;; Defined at:
  2596 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  c               2    0[COMRAM] int 
  2599 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2600 ;;		 -> sprintf@f(11), 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  2    0[COMRAM] int 
  2605 ;; Registers used:
  2606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;Total ram usage:        9 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 1
  2619 ;; This function calls:
  2620 ;;		_putch
  2621 ;; This function is called by:
  2622 ;;		_pad
  2623 ;;		_vfpfcnvrt
  2624 ;;		_fputs
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text8
  2629   0023C8                     __ptext8:
  2630                           	callstack 0
  2631   0023C8                     _fputc:
  2632                           	callstack 25
  2633   0023C8  5003               	movf	fputc@fp^0,w,c
  2634   0023CA  1004               	iorwf	(fputc@fp+1)^0,w,c
  2635   0023CC  B4D8               	btfsc	status,2,c
  2636   0023CE  EFEB  F011         	goto	u1151
  2637   0023D2  EFED  F011         	goto	u1150
  2638   0023D6                     u1151:
  2639   0023D6  EFF6  F011         	goto	l2057
  2640   0023DA                     u1150:
  2641   0023DA  5003               	movf	fputc@fp^0,w,c
  2642   0023DC  1004               	iorwf	(fputc@fp+1)^0,w,c
  2643   0023DE  A4D8               	btfss	status,2,c
  2644   0023E0  EFF4  F011         	goto	u1161
  2645   0023E4  EFF6  F011         	goto	u1160
  2646   0023E8                     u1161:
  2647   0023E8  EFFB  F011         	goto	l2059
  2648   0023EC                     u1160:
  2649   0023EC                     l2057:
  2650   0023EC  5001               	movf	fputc@c^0,w,c
  2651   0023EE  EC9A  F016         	call	_putch
  2652   0023F2  EF48  F012         	goto	l1074
  2653   0023F6                     l2059:
  2654   0023F6  EE20 F009          	lfsr	2,9
  2655   0023FA  5003               	movf	fputc@fp^0,w,c
  2656   0023FC  26D9               	addwf	fsr2l,f,c
  2657   0023FE  5004               	movf	(fputc@fp+1)^0,w,c
  2658   002400  22DA               	addwfc	fsr2h,f,c
  2659   002402  50DE               	movf	postinc2,w,c
  2660   002404  10DE               	iorwf	postinc2,w,c
  2661   002406  B4D8               	btfsc	status,2,c
  2662   002408  EF08  F012         	goto	u1171
  2663   00240C  EF0A  F012         	goto	u1170
  2664   002410                     u1171:
  2665   002410  EF25  F012         	goto	l2063
  2666   002414                     u1170:
  2667   002414  EE20 F009          	lfsr	2,9
  2668   002418  5003               	movf	fputc@fp^0,w,c
  2669   00241A  26D9               	addwf	fsr2l,f,c
  2670   00241C  5004               	movf	(fputc@fp+1)^0,w,c
  2671   00241E  22DA               	addwfc	fsr2h,f,c
  2672   002420  EE10 F003          	lfsr	1,3
  2673   002424  5003               	movf	fputc@fp^0,w,c
  2674   002426  26E1               	addwf	fsr1l,f,c
  2675   002428  5004               	movf	(fputc@fp+1)^0,w,c
  2676   00242A  22E2               	addwfc	fsr1h,f,c
  2677   00242C  50DE               	movf	postinc2,w,c
  2678   00242E  5CE6               	subwf	postinc1,w,c
  2679   002430  50E6               	movf	postinc1,w,c
  2680   002432  0A80               	xorlw	128
  2681   002434  6E09               	movwf	(??_fputc+4)^0,c
  2682   002436  50DE               	movf	postinc2,w,c
  2683   002438  0A80               	xorlw	128
  2684   00243A  5809               	subwfb	(??_fputc+4)^0,w,c
  2685   00243C  B0D8               	btfsc	status,0,c
  2686   00243E  EF23  F012         	goto	u1181
  2687   002442  EF25  F012         	goto	u1180
  2688   002446                     u1181:
  2689   002446  EF48  F012         	goto	l1074
  2690   00244A                     u1180:
  2691   00244A                     l2063:
  2692   00244A  EE20 F003          	lfsr	2,3
  2693   00244E  5003               	movf	fputc@fp^0,w,c
  2694   002450  26D9               	addwf	fsr2l,f,c
  2695   002452  5004               	movf	(fputc@fp+1)^0,w,c
  2696   002454  22DA               	addwfc	fsr2h,f,c
  2697   002456  CFDE F005          	movff	postinc2,??_fputc
  2698   00245A  CFDD F006          	movff	postdec2,??_fputc+1
  2699   00245E  C003  FFD9         	movff	fputc@fp,fsr2l
  2700   002462  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2701   002466  CFDE F007          	movff	postinc2,??_fputc+2
  2702   00246A  CFDD F008          	movff	postdec2,??_fputc+3
  2703   00246E  5005               	movf	??_fputc^0,w,c
  2704   002470  2407               	addwf	(??_fputc+2)^0,w,c
  2705   002472  6ED9               	movwf	fsr2l,c
  2706   002474  5006               	movf	(??_fputc+1)^0,w,c
  2707   002476  2008               	addwfc	(??_fputc+3)^0,w,c
  2708   002478  6EDA               	movwf	fsr2h,c
  2709   00247A  C001  FFDF         	movff	fputc@c,indf2
  2710   00247E  EE20 F003          	lfsr	2,3
  2711   002482  5003               	movf	fputc@fp^0,w,c
  2712   002484  26D9               	addwf	fsr2l,f,c
  2713   002486  5004               	movf	(fputc@fp+1)^0,w,c
  2714   002488  22DA               	addwfc	fsr2h,f,c
  2715   00248A  2ADE               	incf	postinc2,f,c
  2716   00248C  0E00               	movlw	0
  2717   00248E  22DD               	addwfc	postdec2,f,c
  2718   002490                     l1074:
  2719   002490  0012               	return		;funcret
  2720   002492                     __end_of_fputc:
  2721                           	callstack 0
  2722                           
  2723 ;; *************** function _putch *****************
  2724 ;; Defined at:
  2725 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  c               1    wreg     unsigned char 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  c               1    0[COMRAM] unsigned char 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;Total ram usage:        0 bytes
  2744 ;; Hardware stack levels used: 1
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_fputc
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text9
  2753   002D34                     __ptext9:
  2754                           	callstack 0
  2755   002D34                     _putch:
  2756                           	callstack 25
  2757   002D34  0012               	return		;funcret
  2758   002D36                     __end_of_putch:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _abs *****************
  2762 ;; Defined at:
  2763 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  a               2   18[COMRAM] int 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  2   18[COMRAM] int 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:        4 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_dtoa
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text10
  2791   002C32                     __ptext10:
  2792                           	callstack 0
  2793   002C32                     _abs:
  2794                           	callstack 25
  2795   002C32  BE14               	btfsc	(abs@a+1)^0,7,c
  2796   002C34  EF26  F016         	goto	u1390
  2797   002C38  5014               	movf	(abs@a+1)^0,w,c
  2798   002C3A  E106               	bnz	u1391
  2799   002C3C  0413               	decf	abs@a^0,w,c
  2800   002C3E  B0D8               	btfsc	status,0,c
  2801   002C40  EF24  F016         	goto	u1391
  2802   002C44  EF26  F016         	goto	u1390
  2803   002C48                     u1391:
  2804   002C48  EF34  F016         	goto	l1059
  2805   002C4C                     u1390:
  2806   002C4C  C013  F015         	movff	abs@a,??_abs
  2807   002C50  C014  F016         	movff	abs@a+1,??_abs+1
  2808   002C54  1E15               	comf	??_abs^0,f,c
  2809   002C56  1E16               	comf	(??_abs+1)^0,f,c
  2810   002C58  4A15               	infsnz	??_abs^0,f,c
  2811   002C5A  2A16               	incf	(??_abs+1)^0,f,c
  2812   002C5C  C015  F013         	movff	??_abs,?_abs
  2813   002C60  C016  F014         	movff	??_abs+1,?_abs+1
  2814   002C64  EF38  F016         	goto	l1062
  2815   002C68                     l1059:
  2816   002C68  C013  F013         	movff	abs@a,?_abs
  2817   002C6C  C014  F014         	movff	abs@a+1,?_abs+1
  2818   002C70                     l1062:
  2819   002C70  0012               	return		;funcret
  2820   002C72                     __end_of_abs:
  2821                           	callstack 0
  2822                           
  2823 ;; *************** function ___aomod *****************
  2824 ;; Defined at:
  2825 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  dividend        8    0[COMRAM] long long 
  2828 ;;  divisor         8    8[COMRAM] long long 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  sign            1   17[COMRAM] unsigned char 
  2831 ;;  counter         1   16[COMRAM] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  8    0[COMRAM] long long 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2841 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;Total ram usage:       18 bytes
  2846 ;; Hardware stack levels used: 1
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_dtoa
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text11
  2855   001CE4                     __ptext11:
  2856                           	callstack 0
  2857   001CE4                     ___aomod:
  2858                           	callstack 25
  2859   001CE4  0E00               	movlw	0
  2860   001CE6  6E12               	movwf	___aomod@sign^0,c
  2861   001CE8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2862   001CEA  EF7B  F00E         	goto	u1310
  2863   001CEE  EF79  F00E         	goto	u1311
  2864   001CF2                     u1311:
  2865   001CF2  EF8D  F00E         	goto	l2151
  2866   001CF6                     u1310:
  2867   001CF6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2868   001CF8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2869   001CFA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2870   001CFC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2871   001CFE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2872   001D00  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2873   001D02  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2874   001D04  6C01               	negf	___aomod@dividend^0,c
  2875   001D06  0E00               	movlw	0
  2876   001D08  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2877   001D0A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2878   001D0C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2879   001D0E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2880   001D10  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2881   001D12  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2882   001D14  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2883   001D16  0E01               	movlw	1
  2884   001D18  6E12               	movwf	___aomod@sign^0,c
  2885   001D1A                     l2151:
  2886   001D1A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2887   001D1C  EF94  F00E         	goto	u1320
  2888   001D20  EF92  F00E         	goto	u1321
  2889   001D24                     u1321:
  2890   001D24  EFA4  F00E         	goto	l2155
  2891   001D28                     u1320:
  2892   001D28  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2893   001D2A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2894   001D2C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2895   001D2E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2896   001D30  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2897   001D32  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2898   001D34  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2899   001D36  6C09               	negf	___aomod@divisor^0,c
  2900   001D38  0E00               	movlw	0
  2901   001D3A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2902   001D3C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2903   001D3E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2904   001D40  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2905   001D42  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2906   001D44  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2907   001D46  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2908   001D48                     l2155:
  2909   001D48  5009               	movf	___aomod@divisor^0,w,c
  2910   001D4A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2911   001D4C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2912   001D4E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2913   001D50  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2914   001D52  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2915   001D54  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2916   001D56  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2917   001D58  B4D8               	btfsc	status,2,c
  2918   001D5A  EFB1  F00E         	goto	u1331
  2919   001D5E  EFB3  F00E         	goto	u1330
  2920   001D62                     u1331:
  2921   001D62  EFFB  F00E         	goto	l2171
  2922   001D66                     u1330:
  2923   001D66  0E01               	movlw	1
  2924   001D68  6E11               	movwf	___aomod@counter^0,c
  2925   001D6A  EFC1  F00E         	goto	l2161
  2926   001D6E                     l2159:
  2927   001D6E  90D8               	bcf	status,0,c
  2928   001D70  3609               	rlcf	___aomod@divisor^0,f,c
  2929   001D72  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2930   001D74  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2931   001D76  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2932   001D78  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2933   001D7A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2934   001D7C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2935   001D7E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2936   001D80  2A11               	incf	___aomod@counter^0,f,c
  2937   001D82                     l2161:
  2938   001D82  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2939   001D84  EFC6  F00E         	goto	u1341
  2940   001D88  EFC8  F00E         	goto	u1340
  2941   001D8C                     u1341:
  2942   001D8C  EFB7  F00E         	goto	l2159
  2943   001D90                     u1340:
  2944   001D90                     l2163:
  2945   001D90  5009               	movf	___aomod@divisor^0,w,c
  2946   001D92  5C01               	subwf	___aomod@dividend^0,w,c
  2947   001D94  500A               	movf	(___aomod@divisor+1)^0,w,c
  2948   001D96  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2949   001D98  500B               	movf	(___aomod@divisor+2)^0,w,c
  2950   001D9A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2951   001D9C  500C               	movf	(___aomod@divisor+3)^0,w,c
  2952   001D9E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2953   001DA0  500D               	movf	(___aomod@divisor+4)^0,w,c
  2954   001DA2  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2955   001DA4  500E               	movf	(___aomod@divisor+5)^0,w,c
  2956   001DA6  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2957   001DA8  500F               	movf	(___aomod@divisor+6)^0,w,c
  2958   001DAA  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2959   001DAC  5010               	movf	(___aomod@divisor+7)^0,w,c
  2960   001DAE  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2961   001DB0  A0D8               	btfss	status,0,c
  2962   001DB2  EFDD  F00E         	goto	u1351
  2963   001DB6  EFDF  F00E         	goto	u1350
  2964   001DBA                     u1351:
  2965   001DBA  EFEF  F00E         	goto	l2167
  2966   001DBE                     u1350:
  2967   001DBE  5009               	movf	___aomod@divisor^0,w,c
  2968   001DC0  5E01               	subwf	___aomod@dividend^0,f,c
  2969   001DC2  500A               	movf	(___aomod@divisor+1)^0,w,c
  2970   001DC4  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2971   001DC6  500B               	movf	(___aomod@divisor+2)^0,w,c
  2972   001DC8  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2973   001DCA  500C               	movf	(___aomod@divisor+3)^0,w,c
  2974   001DCC  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2975   001DCE  500D               	movf	(___aomod@divisor+4)^0,w,c
  2976   001DD0  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2977   001DD2  500E               	movf	(___aomod@divisor+5)^0,w,c
  2978   001DD4  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2979   001DD6  500F               	movf	(___aomod@divisor+6)^0,w,c
  2980   001DD8  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2981   001DDA  5010               	movf	(___aomod@divisor+7)^0,w,c
  2982   001DDC  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2983   001DDE                     l2167:
  2984   001DDE  90D8               	bcf	status,0,c
  2985   001DE0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2986   001DE2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2987   001DE4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2988   001DE6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2989   001DE8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2990   001DEA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2991   001DEC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2992   001DEE  3209               	rrcf	___aomod@divisor^0,f,c
  2993   001DF0  2E11               	decfsz	___aomod@counter^0,f,c
  2994   001DF2  EFC8  F00E         	goto	l2163
  2995   001DF6                     l2171:
  2996   001DF6  5012               	movf	___aomod@sign^0,w,c
  2997   001DF8  B4D8               	btfsc	status,2,c
  2998   001DFA  EF01  F00F         	goto	u1361
  2999   001DFE  EF03  F00F         	goto	u1360
  3000   001E02                     u1361:
  3001   001E02  EF13  F00F         	goto	l2175
  3002   001E06                     u1360:
  3003   001E06  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3004   001E08  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3005   001E0A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3006   001E0C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3007   001E0E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3008   001E10  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3009   001E12  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3010   001E14  6C01               	negf	___aomod@dividend^0,c
  3011   001E16  0E00               	movlw	0
  3012   001E18  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3013   001E1A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3014   001E1C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3015   001E1E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3016   001E20  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3017   001E22  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3018   001E24  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3019   001E26                     l2175:
  3020   001E26  C001  F001         	movff	___aomod@dividend,?___aomod
  3021   001E2A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3022   001E2E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3023   001E32  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3024   001E36  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3025   001E3A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3026   001E3E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3027   001E42  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3028   001E46  0012               	return		;funcret
  3029   001E48                     __end_of___aomod:
  3030                           	callstack 0
  3031                           
  3032 ;; *************** function ___aodiv *****************
  3033 ;; Defined at:
  3034 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  dividend        8    0[COMRAM] long long 
  3037 ;;  divisor         8    8[COMRAM] long long 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  quotient        8   18[COMRAM] long long 
  3040 ;;  sign            1   17[COMRAM] unsigned char 
  3041 ;;  counter         1   16[COMRAM] unsigned char 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  8    0[COMRAM] long long 
  3044 ;; Registers used:
  3045 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3051 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;Total ram usage:       26 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_dtoa
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text12
  3065   0019E6                     __ptext12:
  3066                           	callstack 0
  3067   0019E6                     ___aodiv:
  3068                           	callstack 25
  3069   0019E6  0E00               	movlw	0
  3070   0019E8  6E12               	movwf	___aodiv@sign^0,c
  3071   0019EA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3072   0019EC  EFFC  F00C         	goto	u1240
  3073   0019F0  EFFA  F00C         	goto	u1241
  3074   0019F4                     u1241:
  3075   0019F4  EF0E  F00D         	goto	l2107
  3076   0019F8                     u1240:
  3077   0019F8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3078   0019FA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3079   0019FC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3080   0019FE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3081   001A00  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3082   001A02  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3083   001A04  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3084   001A06  6C09               	negf	___aodiv@divisor^0,c
  3085   001A08  0E00               	movlw	0
  3086   001A0A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3087   001A0C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3088   001A0E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3089   001A10  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3090   001A12  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3091   001A14  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3092   001A16  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3093   001A18  0E01               	movlw	1
  3094   001A1A  6E12               	movwf	___aodiv@sign^0,c
  3095   001A1C                     l2107:
  3096   001A1C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3097   001A1E  EF15  F00D         	goto	u1250
  3098   001A22  EF13  F00D         	goto	u1251
  3099   001A26                     u1251:
  3100   001A26  EF27  F00D         	goto	l2113
  3101   001A2A                     u1250:
  3102   001A2A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3103   001A2C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3104   001A2E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3105   001A30  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3106   001A32  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3107   001A34  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3108   001A36  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3109   001A38  6C01               	negf	___aodiv@dividend^0,c
  3110   001A3A  0E00               	movlw	0
  3111   001A3C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3112   001A3E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3113   001A40  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3114   001A42  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3115   001A44  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3116   001A46  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3117   001A48  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3118   001A4A  0E01               	movlw	1
  3119   001A4C  1A12               	xorwf	___aodiv@sign^0,f,c
  3120   001A4E                     l2113:
  3121   001A4E  EE20  F013         	lfsr	2,___aodiv@quotient
  3122   001A52  0E07               	movlw	7
  3123   001A54                     u1261:
  3124   001A54  6ADE               	clrf	postinc2,c
  3125   001A56  06E8               	decf	wreg,f,c
  3126   001A58  E2FD               	bc	u1261
  3127   001A5A  5009               	movf	___aodiv@divisor^0,w,c
  3128   001A5C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3129   001A5E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3130   001A60  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3131   001A62  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3132   001A64  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3133   001A66  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3134   001A68  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3135   001A6A  B4D8               	btfsc	status,2,c
  3136   001A6C  EF3A  F00D         	goto	u1271
  3137   001A70  EF3C  F00D         	goto	u1270
  3138   001A74                     u1271:
  3139   001A74  EF8E  F00D         	goto	l2135
  3140   001A78                     u1270:
  3141   001A78  0E01               	movlw	1
  3142   001A7A  6E11               	movwf	___aodiv@counter^0,c
  3143   001A7C  EF4A  F00D         	goto	l2121
  3144   001A80                     l2119:
  3145   001A80  90D8               	bcf	status,0,c
  3146   001A82  3609               	rlcf	___aodiv@divisor^0,f,c
  3147   001A84  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3148   001A86  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3149   001A88  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3150   001A8A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3151   001A8C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3152   001A8E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3153   001A90  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3154   001A92  2A11               	incf	___aodiv@counter^0,f,c
  3155   001A94                     l2121:
  3156   001A94  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3157   001A96  EF4F  F00D         	goto	u1281
  3158   001A9A  EF51  F00D         	goto	u1280
  3159   001A9E                     u1281:
  3160   001A9E  EF40  F00D         	goto	l2119
  3161   001AA2                     u1280:
  3162   001AA2                     l2123:
  3163   001AA2  90D8               	bcf	status,0,c
  3164   001AA4  3613               	rlcf	___aodiv@quotient^0,f,c
  3165   001AA6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3166   001AA8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3167   001AAA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3168   001AAC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3169   001AAE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3170   001AB0  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3171   001AB2  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3172   001AB4  5009               	movf	___aodiv@divisor^0,w,c
  3173   001AB6  5C01               	subwf	___aodiv@dividend^0,w,c
  3174   001AB8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3175   001ABA  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3176   001ABC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3177   001ABE  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3178   001AC0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3179   001AC2  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3180   001AC4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3181   001AC6  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3182   001AC8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3183   001ACA  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3184   001ACC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3185   001ACE  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3186   001AD0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3187   001AD2  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3188   001AD4  A0D8               	btfss	status,0,c
  3189   001AD6  EF6F  F00D         	goto	u1291
  3190   001ADA  EF71  F00D         	goto	u1290
  3191   001ADE                     u1291:
  3192   001ADE  EF82  F00D         	goto	l2131
  3193   001AE2                     u1290:
  3194   001AE2  5009               	movf	___aodiv@divisor^0,w,c
  3195   001AE4  5E01               	subwf	___aodiv@dividend^0,f,c
  3196   001AE6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3197   001AE8  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3198   001AEA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3199   001AEC  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3200   001AEE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3201   001AF0  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3202   001AF2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3203   001AF4  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3204   001AF6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3205   001AF8  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3206   001AFA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3207   001AFC  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3208   001AFE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3209   001B00  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3210   001B02  8013               	bsf	___aodiv@quotient^0,0,c
  3211   001B04                     l2131:
  3212   001B04  90D8               	bcf	status,0,c
  3213   001B06  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3214   001B08  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3215   001B0A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3216   001B0C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3217   001B0E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3218   001B10  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3219   001B12  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3220   001B14  3209               	rrcf	___aodiv@divisor^0,f,c
  3221   001B16  2E11               	decfsz	___aodiv@counter^0,f,c
  3222   001B18  EF51  F00D         	goto	l2123
  3223   001B1C                     l2135:
  3224   001B1C  5012               	movf	___aodiv@sign^0,w,c
  3225   001B1E  B4D8               	btfsc	status,2,c
  3226   001B20  EF94  F00D         	goto	u1301
  3227   001B24  EF96  F00D         	goto	u1300
  3228   001B28                     u1301:
  3229   001B28  EFA6  F00D         	goto	l2139
  3230   001B2C                     u1300:
  3231   001B2C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3232   001B2E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3233   001B30  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3234   001B32  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3235   001B34  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3236   001B36  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3237   001B38  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3238   001B3A  6C13               	negf	___aodiv@quotient^0,c
  3239   001B3C  0E00               	movlw	0
  3240   001B3E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3241   001B40  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3242   001B42  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3243   001B44  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3244   001B46  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3245   001B48  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3246   001B4A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3247   001B4C                     l2139:
  3248   001B4C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3249   001B50  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3250   001B54  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3251   001B58  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3252   001B5C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3253   001B60  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3254   001B64  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3255   001B68  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3256   001B6C  0012               	return		;funcret
  3257   001B6E                     __end_of___aodiv:
  3258                           	callstack 0
  3259                           
  3260 ;; *************** function _memset *****************
  3261 ;; Defined at:
  3262 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memset.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  dest            2    0[COMRAM] PTR void 
  3265 ;;		 -> main@result_text(11), 
  3266 ;;  c               2    2[COMRAM] int 
  3267 ;;  n               2    4[COMRAM] unsigned int 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;  s               2   10[COMRAM] PTR unsigned char 
  3270 ;;		 -> main@result_text(11), 
  3271 ;;  k               2    8[COMRAM] unsigned int 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  2    0[COMRAM] PTR void 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3281 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;Total ram usage:       12 bytes
  3286 ;; Hardware stack levels used: 1
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_lcd_convert_int_to_string
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text13
  3295   001B6E                     __ptext13:
  3296                           	callstack 0
  3297   001B6E                     _memset:
  3298                           	callstack 29
  3299   001B6E  C001  F00B         	movff	memset@dest,memset@s
  3300   001B72  C002  F00C         	movff	memset@dest+1,memset@s+1
  3301   001B76  5005               	movf	memset@n^0,w,c
  3302   001B78  1006               	iorwf	(memset@n+1)^0,w,c
  3303   001B7A  A4D8               	btfss	status,2,c
  3304   001B7C  EFC2  F00D         	goto	u1841
  3305   001B80  EFC4  F00D         	goto	u1840
  3306   001B84                     u1841:
  3307   001B84  EFC6  F00D         	goto	l2569
  3308   001B88                     u1840:
  3309   001B88  EF71  F00E         	goto	l974
  3310   001B8C                     l2569:
  3311   001B8C  C00B  FFD9         	movff	memset@s,fsr2l
  3312   001B90  C00C  FFDA         	movff	memset@s+1,fsr2h
  3313   001B94  C003  FFDF         	movff	memset@c,indf2
  3314   001B98  5005               	movf	memset@n^0,w,c
  3315   001B9A  240B               	addwf	memset@s^0,w,c
  3316   001B9C  6E07               	movwf	??_memset^0,c
  3317   001B9E  5006               	movf	(memset@n+1)^0,w,c
  3318   001BA0  200C               	addwfc	(memset@s+1)^0,w,c
  3319   001BA2  6E08               	movwf	(??_memset+1)^0,c
  3320   001BA4  0EFF               	movlw	255
  3321   001BA6  2407               	addwf	??_memset^0,w,c
  3322   001BA8  6ED9               	movwf	fsr2l,c
  3323   001BAA  0EFF               	movlw	255
  3324   001BAC  2008               	addwfc	(??_memset+1)^0,w,c
  3325   001BAE  6EDA               	movwf	fsr2h,c
  3326   001BB0  C003  FFDF         	movff	memset@c,indf2
  3327   001BB4  5006               	movf	(memset@n+1)^0,w,c
  3328   001BB6  E107               	bnz	u1851
  3329   001BB8  0E03               	movlw	3
  3330   001BBA  5C05               	subwf	memset@n^0,w,c
  3331   001BBC  B0D8               	btfsc	status,0,c
  3332   001BBE  EFE3  F00D         	goto	u1851
  3333   001BC2  EFE5  F00D         	goto	u1850
  3334   001BC6                     u1851:
  3335   001BC6  EFE7  F00D         	goto	l2575
  3336   001BCA                     u1850:
  3337   001BCA  EF71  F00E         	goto	l974
  3338   001BCE                     l2575:
  3339   001BCE  EE20 F001          	lfsr	2,1
  3340   001BD2  500B               	movf	memset@s^0,w,c
  3341   001BD4  26D9               	addwf	fsr2l,f,c
  3342   001BD6  500C               	movf	(memset@s+1)^0,w,c
  3343   001BD8  22DA               	addwfc	fsr2h,f,c
  3344   001BDA  C003  FFDF         	movff	memset@c,indf2
  3345   001BDE  EE20 F002          	lfsr	2,2
  3346   001BE2  500B               	movf	memset@s^0,w,c
  3347   001BE4  26D9               	addwf	fsr2l,f,c
  3348   001BE6  500C               	movf	(memset@s+1)^0,w,c
  3349   001BE8  22DA               	addwfc	fsr2h,f,c
  3350   001BEA  C003  FFDF         	movff	memset@c,indf2
  3351   001BEE  5005               	movf	memset@n^0,w,c
  3352   001BF0  240B               	addwf	memset@s^0,w,c
  3353   001BF2  6E07               	movwf	??_memset^0,c
  3354   001BF4  5006               	movf	(memset@n+1)^0,w,c
  3355   001BF6  200C               	addwfc	(memset@s+1)^0,w,c
  3356   001BF8  6E08               	movwf	(??_memset+1)^0,c
  3357   001BFA  0EFE               	movlw	254
  3358   001BFC  2407               	addwf	??_memset^0,w,c
  3359   001BFE  6ED9               	movwf	fsr2l,c
  3360   001C00  0EFF               	movlw	255
  3361   001C02  2008               	addwfc	(??_memset+1)^0,w,c
  3362   001C04  6EDA               	movwf	fsr2h,c
  3363   001C06  C003  FFDF         	movff	memset@c,indf2
  3364   001C0A  5005               	movf	memset@n^0,w,c
  3365   001C0C  240B               	addwf	memset@s^0,w,c
  3366   001C0E  6E07               	movwf	??_memset^0,c
  3367   001C10  5006               	movf	(memset@n+1)^0,w,c
  3368   001C12  200C               	addwfc	(memset@s+1)^0,w,c
  3369   001C14  6E08               	movwf	(??_memset+1)^0,c
  3370   001C16  0EFD               	movlw	253
  3371   001C18  2407               	addwf	??_memset^0,w,c
  3372   001C1A  6ED9               	movwf	fsr2l,c
  3373   001C1C  0EFF               	movlw	255
  3374   001C1E  2008               	addwfc	(??_memset+1)^0,w,c
  3375   001C20  6EDA               	movwf	fsr2h,c
  3376   001C22  C003  FFDF         	movff	memset@c,indf2
  3377   001C26  5006               	movf	(memset@n+1)^0,w,c
  3378   001C28  E107               	bnz	u1861
  3379   001C2A  0E07               	movlw	7
  3380   001C2C  5C05               	subwf	memset@n^0,w,c
  3381   001C2E  B0D8               	btfsc	status,0,c
  3382   001C30  EF1C  F00E         	goto	u1861
  3383   001C34  EF1E  F00E         	goto	u1860
  3384   001C38                     u1861:
  3385   001C38  EF20  F00E         	goto	l2581
  3386   001C3C                     u1860:
  3387   001C3C  EF71  F00E         	goto	l974
  3388   001C40                     l2581:
  3389   001C40  EE20 F003          	lfsr	2,3
  3390   001C44  500B               	movf	memset@s^0,w,c
  3391   001C46  26D9               	addwf	fsr2l,f,c
  3392   001C48  500C               	movf	(memset@s+1)^0,w,c
  3393   001C4A  22DA               	addwfc	fsr2h,f,c
  3394   001C4C  C003  FFDF         	movff	memset@c,indf2
  3395   001C50  5005               	movf	memset@n^0,w,c
  3396   001C52  240B               	addwf	memset@s^0,w,c
  3397   001C54  6E07               	movwf	??_memset^0,c
  3398   001C56  5006               	movf	(memset@n+1)^0,w,c
  3399   001C58  200C               	addwfc	(memset@s+1)^0,w,c
  3400   001C5A  6E08               	movwf	(??_memset+1)^0,c
  3401   001C5C  0EFC               	movlw	252
  3402   001C5E  2407               	addwf	??_memset^0,w,c
  3403   001C60  6ED9               	movwf	fsr2l,c
  3404   001C62  0EFF               	movlw	255
  3405   001C64  2008               	addwfc	(??_memset+1)^0,w,c
  3406   001C66  6EDA               	movwf	fsr2h,c
  3407   001C68  C003  FFDF         	movff	memset@c,indf2
  3408   001C6C  5006               	movf	(memset@n+1)^0,w,c
  3409   001C6E  E107               	bnz	u1871
  3410   001C70  0E09               	movlw	9
  3411   001C72  5C05               	subwf	memset@n^0,w,c
  3412   001C74  B0D8               	btfsc	status,0,c
  3413   001C76  EF3F  F00E         	goto	u1871
  3414   001C7A  EF41  F00E         	goto	u1870
  3415   001C7E                     u1871:
  3416   001C7E  EF43  F00E         	goto	l2587
  3417   001C82                     u1870:
  3418   001C82  EF71  F00E         	goto	l974
  3419   001C86                     l2587:
  3420   001C86  C00B  F007         	movff	memset@s,??_memset
  3421   001C8A  C00C  F008         	movff	memset@s+1,??_memset+1
  3422   001C8E  1E07               	comf	??_memset^0,f,c
  3423   001C90  1E08               	comf	(??_memset+1)^0,f,c
  3424   001C92  4A07               	infsnz	??_memset^0,f,c
  3425   001C94  2A08               	incf	(??_memset+1)^0,f,c
  3426   001C96  0E03               	movlw	3
  3427   001C98  1407               	andwf	??_memset^0,w,c
  3428   001C9A  6E09               	movwf	memset@k^0,c
  3429   001C9C  6A0A               	clrf	(memset@k+1)^0,c
  3430   001C9E  5009               	movf	memset@k^0,w,c
  3431   001CA0  260B               	addwf	memset@s^0,f,c
  3432   001CA2  500A               	movf	(memset@k+1)^0,w,c
  3433   001CA4  220C               	addwfc	(memset@s+1)^0,f,c
  3434   001CA6  5009               	movf	memset@k^0,w,c
  3435   001CA8  5E05               	subwf	memset@n^0,f,c
  3436   001CAA  500A               	movf	(memset@k+1)^0,w,c
  3437   001CAC  5A06               	subwfb	(memset@n+1)^0,f,c
  3438   001CAE  0EFC               	movlw	252
  3439   001CB0  1605               	andwf	memset@n^0,f,c
  3440   001CB2  0EFF               	movlw	255
  3441   001CB4  1606               	andwf	(memset@n+1)^0,f,c
  3442   001CB6  EF68  F00E         	goto	l2595
  3443   001CBA                     l2589:
  3444   001CBA  C00B  FFD9         	movff	memset@s,fsr2l
  3445   001CBE  C00C  FFDA         	movff	memset@s+1,fsr2h
  3446   001CC2  C003  FFDF         	movff	memset@c,indf2
  3447   001CC6  0605               	decf	memset@n^0,f,c
  3448   001CC8  A0D8               	btfss	status,0,c
  3449   001CCA  0606               	decf	(memset@n+1)^0,f,c
  3450   001CCC  4A0B               	infsnz	memset@s^0,f,c
  3451   001CCE  2A0C               	incf	(memset@s+1)^0,f,c
  3452   001CD0                     l2595:
  3453   001CD0  5005               	movf	memset@n^0,w,c
  3454   001CD2  1006               	iorwf	(memset@n+1)^0,w,c
  3455   001CD4  A4D8               	btfss	status,2,c
  3456   001CD6  EF6F  F00E         	goto	u1881
  3457   001CDA  EF71  F00E         	goto	u1880
  3458   001CDE                     u1881:
  3459   001CDE  EF5D  F00E         	goto	l2589
  3460   001CE2                     u1880:
  3461   001CE2                     l974:
  3462   001CE2  0012               	return		;funcret
  3463   001CE4                     __end_of_memset:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _lcd_8bit_send_string_pos *****************
  3467 ;; Defined at:
  3468 ;;		line 138 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  lcd             2   29[COMRAM] PTR const struct .
  3471 ;;		 -> lcd(10), 
  3472 ;;  row             1   31[COMRAM] unsigned char 
  3473 ;;  colomn          1   32[COMRAM] unsigned char 
  3474 ;;  string          2   33[COMRAM] PTR unsigned char 
  3475 ;;		 -> main@result_text(11), 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  ret             1   35[COMRAM] unsigned char 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      unsigned char 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3487 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;Total ram usage:        7 bytes
  3492 ;; Hardware stack levels used: 1
  3493 ;; Hardware stack levels required when called: 4
  3494 ;; This function calls:
  3495 ;;		_lcd_8bit_send_string
  3496 ;;		_lcd_8bit_set_cursor
  3497 ;; This function is called by:
  3498 ;;		_main
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text14
  3503   002BEE                     __ptext14:
  3504                           	callstack 0
  3505   002BEE                     _lcd_8bit_send_string_pos:
  3506                           	callstack 26
  3507   002BEE                     
  3508                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 139:     Std_ReturnType ret = (Std_ReturnType)0x00;
  3509   002BEE  0E00               	movlw	0
  3510   002BF0  6E24               	movwf	lcd_8bit_send_string_pos@ret^0,c
  3511   002BF2                     
  3512                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 140:     if(((void*)0) != lcd){
  3513   002BF2  501E               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
  3514   002BF4  101F               	iorwf	(lcd_8bit_send_string_pos@lcd+1)^0,w,c
  3515   002BF6  B4D8               	btfsc	status,2,c
  3516   002BF8  EF00  F016         	goto	u2011
  3517   002BFC  EF02  F016         	goto	u2010
  3518   002C00                     u2011:
  3519   002C00  EF17  F016         	goto	l47
  3520   002C04                     u2010:
  3521   002C04  C01E  F017         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
  3522   002C08  C01F  F018         	movff	lcd_8bit_send_string_pos@lcd+1,lcd_8bit_set_cursor@lcd+1
  3523   002C0C  C020  F019         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
  3524   002C10  C021  F01A         	movff	lcd_8bit_send_string_pos@colomn,lcd_8bit_set_cursor@colomn
  3525   002C14  ECA5  F012         	call	_lcd_8bit_set_cursor	;wreg free
  3526   002C18                     
  3527                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 143:         ret = lcd_8bit_send_string(lcd, string)
      +                          ;
  3528   002C18  C01E  F017         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_string@lcd
  3529   002C1C  C01F  F018         	movff	lcd_8bit_send_string_pos@lcd+1,lcd_8bit_send_string@lcd+1
  3530   002C20  C022  F019         	movff	lcd_8bit_send_string_pos@string,lcd_8bit_send_string@string
  3531   002C24  C023  F01A         	movff	lcd_8bit_send_string_pos@string+1,lcd_8bit_send_string@string+1
  3532   002C28  ECDD  F014         	call	_lcd_8bit_send_string	;wreg free
  3533   002C2C  6E24               	movwf	lcd_8bit_send_string_pos@ret^0,c
  3534   002C2E                     l47:
  3535                           
  3536                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 145:     return ret;
  3537   002C2E  5024               	movf	lcd_8bit_send_string_pos@ret^0,w,c
  3538   002C30  0012               	return		;funcret
  3539   002C32                     __end_of_lcd_8bit_send_string_pos:
  3540                           	callstack 0
  3541                           
  3542 ;; *************** function _lcd_8bit_send_string *****************
  3543 ;; Defined at:
  3544 ;;		line 117 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  lcd             2   22[COMRAM] PTR const struct .
  3547 ;;		 -> lcd(10), 
  3548 ;;  string          2   24[COMRAM] PTR unsigned char 
  3549 ;;		 -> main@result_text(11), 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  ret             1   26[COMRAM] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      unsigned char 
  3554 ;; Registers used:
  3555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;Total ram usage:        5 bytes
  3566 ;; Hardware stack levels used: 1
  3567 ;; Hardware stack levels required when called: 3
  3568 ;; This function calls:
  3569 ;;		_lcd_8bit_send_char
  3570 ;; This function is called by:
  3571 ;;		_lcd_8bit_send_string_pos
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text15
  3576   0029BA                     __ptext15:
  3577                           	callstack 0
  3578   0029BA                     _lcd_8bit_send_string:
  3579                           	callstack 26
  3580   0029BA                     
  3581                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 118:     Std_ReturnType ret = (Std_ReturnType)0x00;
  3582   0029BA  0E00               	movlw	0
  3583   0029BC  6E1B               	movwf	lcd_8bit_send_string@ret^0,c
  3584   0029BE                     
  3585                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 119:     if(((void*)0) != lcd && ((void*)0) != strin
      +                          g){
  3586   0029BE  5017               	movf	lcd_8bit_send_string@lcd^0,w,c
  3587   0029C0  1018               	iorwf	(lcd_8bit_send_string@lcd+1)^0,w,c
  3588   0029C2  B4D8               	btfsc	status,2,c
  3589   0029C4  EFE6  F014         	goto	u1811
  3590   0029C8  EFE8  F014         	goto	u1810
  3591   0029CC                     u1811:
  3592   0029CC  EF0D  F015         	goto	l2561
  3593   0029D0                     u1810:
  3594   0029D0  5019               	movf	lcd_8bit_send_string@string^0,w,c
  3595   0029D2  101A               	iorwf	(lcd_8bit_send_string@string+1)^0,w,c
  3596   0029D4  B4D8               	btfsc	status,2,c
  3597   0029D6  EFEF  F014         	goto	u1821
  3598   0029DA  EFF1  F014         	goto	u1820
  3599   0029DE                     u1821:
  3600   0029DE  EF0D  F015         	goto	l2561
  3601   0029E2                     u1820:
  3602   0029E2                     
  3603                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 120:         ret = (Std_ReturnType)0x01;
  3604   0029E2  0E01               	movlw	1
  3605   0029E4  6E1B               	movwf	lcd_8bit_send_string@ret^0,c
  3606   0029E6                     l2557:
  3607                           
  3608                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 122:             lcd_8bit_send_char(lcd, *string);
  3609   0029E6  C017  F00E         	movff	lcd_8bit_send_string@lcd,lcd_8bit_send_char@lcd
  3610   0029EA  C018  F00F         	movff	lcd_8bit_send_string@lcd+1,lcd_8bit_send_char@lcd+1
  3611   0029EE  C019  FFD9         	movff	lcd_8bit_send_string@string,fsr2l
  3612   0029F2  C01A  FFDA         	movff	lcd_8bit_send_string@string+1,fsr2h
  3613   0029F6  50DF               	movf	indf2,w,c
  3614   0029F8  6E10               	movwf	lcd_8bit_send_char@data^0,c
  3615   0029FA  EC3E  F013         	call	_lcd_8bit_send_char	;wreg free
  3616   0029FE                     
  3617                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 123:         } while(*(++string));
  3618   0029FE  4A19               	infsnz	lcd_8bit_send_string@string^0,f,c
  3619   002A00  2A1A               	incf	(lcd_8bit_send_string@string+1)^0,f,c
  3620   002A02  C019  FFD9         	movff	lcd_8bit_send_string@string,fsr2l
  3621   002A06  C01A  FFDA         	movff	lcd_8bit_send_string@string+1,fsr2h
  3622   002A0A  50DF               	movf	indf2,w,c
  3623   002A0C  A4D8               	btfss	status,2,c
  3624   002A0E  EF0B  F015         	goto	u1831
  3625   002A12  EF0D  F015         	goto	u1830
  3626   002A16                     u1831:
  3627   002A16  EFF3  F014         	goto	l2557
  3628   002A1A                     u1830:
  3629   002A1A                     l2561:
  3630                           
  3631                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 125:     return ret;
  3632   002A1A  501B               	movf	lcd_8bit_send_string@ret^0,w,c
  3633   002A1C  0012               	return		;funcret
  3634   002A1E                     __end_of_lcd_8bit_send_string:
  3635                           	callstack 0
  3636                           
  3637 ;; *************** function _lcd_8bit_send_char_pos *****************
  3638 ;; Defined at:
  3639 ;;		line 99 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  lcd             2   29[COMRAM] PTR const struct .
  3642 ;;		 -> lcd(10), 
  3643 ;;  row             1   31[COMRAM] unsigned char 
  3644 ;;  colomn          1   32[COMRAM] unsigned char 
  3645 ;;  data            1   33[COMRAM] unsigned char 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;  ret             1   34[COMRAM] unsigned char 
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      unsigned char 
  3650 ;; Registers used:
  3651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3657 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;Total ram usage:        6 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; Hardware stack levels required when called: 4
  3664 ;; This function calls:
  3665 ;;		_lcd_8bit_send_char
  3666 ;;		_lcd_8bit_set_cursor
  3667 ;; This function is called by:
  3668 ;;		_main
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text16
  3673   002C72                     __ptext16:
  3674                           	callstack 0
  3675   002C72                     _lcd_8bit_send_char_pos:
  3676                           	callstack 26
  3677   002C72                     
  3678                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 100:     Std_ReturnType ret = (Std_ReturnType)0x00;
  3679   002C72  0E00               	movlw	0
  3680   002C74  6E23               	movwf	lcd_8bit_send_char_pos@ret^0,c
  3681   002C76                     
  3682                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 101:     if(((void*)0) != lcd){
  3683   002C76  501E               	movf	lcd_8bit_send_char_pos@lcd^0,w,c
  3684   002C78  101F               	iorwf	(lcd_8bit_send_char_pos@lcd+1)^0,w,c
  3685   002C7A  B4D8               	btfsc	status,2,c
  3686   002C7C  EF42  F016         	goto	u2001
  3687   002C80  EF44  F016         	goto	u2000
  3688   002C84                     u2001:
  3689   002C84  EF57  F016         	goto	l37
  3690   002C88                     u2000:
  3691   002C88  C01E  F017         	movff	lcd_8bit_send_char_pos@lcd,lcd_8bit_set_cursor@lcd
  3692   002C8C  C01F  F018         	movff	lcd_8bit_send_char_pos@lcd+1,lcd_8bit_set_cursor@lcd+1
  3693   002C90  C020  F019         	movff	lcd_8bit_send_char_pos@row,lcd_8bit_set_cursor@row
  3694   002C94  C021  F01A         	movff	lcd_8bit_send_char_pos@colomn,lcd_8bit_set_cursor@colomn
  3695   002C98  ECA5  F012         	call	_lcd_8bit_set_cursor	;wreg free
  3696   002C9C                     
  3697                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 104:         ret = lcd_8bit_send_char(lcd, data);
  3698   002C9C  C01E  F00E         	movff	lcd_8bit_send_char_pos@lcd,lcd_8bit_send_char@lcd
  3699   002CA0  C01F  F00F         	movff	lcd_8bit_send_char_pos@lcd+1,lcd_8bit_send_char@lcd+1
  3700   002CA4  C022  F010         	movff	lcd_8bit_send_char_pos@data,lcd_8bit_send_char@data
  3701   002CA8  EC3E  F013         	call	_lcd_8bit_send_char	;wreg free
  3702   002CAC  6E23               	movwf	lcd_8bit_send_char_pos@ret^0,c
  3703   002CAE                     l37:
  3704                           
  3705                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 106:     return ret;
  3706   002CAE  5023               	movf	lcd_8bit_send_char_pos@ret^0,w,c
  3707   002CB0  0012               	return		;funcret
  3708   002CB2                     __end_of_lcd_8bit_send_char_pos:
  3709                           	callstack 0
  3710                           
  3711 ;; *************** function _lcd_8bit_set_cursor *****************
  3712 ;; Defined at:
  3713 ;;		line 175 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  lcd             2   22[COMRAM] PTR const struct .
  3716 ;;		 -> lcd(10), 
  3717 ;;  row             1   24[COMRAM] unsigned char 
  3718 ;;  colomn          1   25[COMRAM] unsigned char 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  ret             1   28[COMRAM] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      unsigned char 
  3723 ;; Registers used:
  3724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;Total ram usage:        7 bytes
  3735 ;; Hardware stack levels used: 1
  3736 ;; Hardware stack levels required when called: 3
  3737 ;; This function calls:
  3738 ;;		_lcd_8bit_send_command
  3739 ;; This function is called by:
  3740 ;;		_lcd_8bit_send_char_pos
  3741 ;;		_lcd_8bit_send_string_pos
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text17
  3746   00254A                     __ptext17:
  3747                           	callstack 0
  3748   00254A                     _lcd_8bit_set_cursor:
  3749                           	callstack 26
  3750   00254A                     
  3751                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 176:     Std_ReturnType ret = (Std_ReturnType)0x00;
  3752   00254A  0E00               	movlw	0
  3753   00254C  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  3754   00254E                     
  3755                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 177:     if(((void*)0) != lcd && row <= 2 && colomn 
      +                          <= 20){
  3756   00254E  5017               	movf	lcd_8bit_set_cursor@lcd^0,w,c
  3757   002550  1018               	iorwf	(lcd_8bit_set_cursor@lcd+1)^0,w,c
  3758   002552  B4D8               	btfsc	status,2,c
  3759   002554  EFAE  F012         	goto	u1781
  3760   002558  EFB0  F012         	goto	u1780
  3761   00255C                     u1781:
  3762   00255C  EFF0  F012         	goto	l2541
  3763   002560                     u1780:
  3764   002560  0E03               	movlw	3
  3765   002562  6019               	cpfslt	lcd_8bit_set_cursor@row^0,c
  3766   002564  EFB6  F012         	goto	u1791
  3767   002568  EFB8  F012         	goto	u1790
  3768   00256C                     u1791:
  3769   00256C  EFF0  F012         	goto	l2541
  3770   002570                     u1790:
  3771   002570  0E15               	movlw	21
  3772   002572  601A               	cpfslt	lcd_8bit_set_cursor@colomn^0,c
  3773   002574  EFBE  F012         	goto	u1801
  3774   002578  EFC0  F012         	goto	u1800
  3775   00257C                     u1801:
  3776   00257C  EFF0  F012         	goto	l2541
  3777   002580                     u1800:
  3778   002580                     
  3779                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 178:         colomn--;
  3780   002580  061A               	decf	lcd_8bit_set_cursor@colomn^0,f,c
  3781                           
  3782                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 179:         switch(row){
  3783   002582  EFDB  F012         	goto	l2539
  3784   002586                     l2533:
  3785   002586  C017  F00E         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  3786   00258A  C018  F00F         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  3787   00258E  501A               	movf	lcd_8bit_set_cursor@colomn^0,w,c
  3788   002590  0F80               	addlw	128
  3789   002592  6E10               	movwf	lcd_8bit_send_command@command^0,c
  3790   002594  EC82  F013         	call	_lcd_8bit_send_command	;wreg free
  3791   002598  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  3792   00259A  EFF0  F012         	goto	l2541
  3793   00259E                     l2535:
  3794   00259E  C017  F00E         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  3795   0025A2  C018  F00F         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
  3796   0025A6  501A               	movf	lcd_8bit_set_cursor@colomn^0,w,c
  3797   0025A8  0FC0               	addlw	192
  3798   0025AA  6E10               	movwf	lcd_8bit_send_command@command^0,c
  3799   0025AC  EC82  F013         	call	_lcd_8bit_send_command	;wreg free
  3800   0025B0  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  3801   0025B2  EFF0  F012         	goto	l2541
  3802   0025B6                     l2539:
  3803   0025B6  5019               	movf	lcd_8bit_set_cursor@row^0,w,c
  3804   0025B8  6E1B               	movwf	??_lcd_8bit_set_cursor^0,c
  3805   0025BA  6A1C               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  3806                           
  3807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3808                           ; Switch size 1, requested type "simple"
  3809                           ; Number of cases is 1, Range of values is 0 to 0
  3810                           ; switch strategies available:
  3811                           ; Name         Instructions Cycles
  3812                           ; simple_byte            4     3 (average)
  3813                           ;	Chosen strategy is simple_byte
  3814   0025BC  501C               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  3815   0025BE  0A00               	xorlw	0	; case 0
  3816   0025C0  B4D8               	btfsc	status,2,c
  3817   0025C2  EFE5  F012         	goto	l3071
  3818   0025C6  EFF0  F012         	goto	l2541
  3819   0025CA                     l3071:
  3820                           
  3821                           ; Switch size 1, requested type "simple"
  3822                           ; Number of cases is 2, Range of values is 1 to 2
  3823                           ; switch strategies available:
  3824                           ; Name         Instructions Cycles
  3825                           ; simple_byte            7     4 (average)
  3826                           ;	Chosen strategy is simple_byte
  3827   0025CA  501B               	movf	??_lcd_8bit_set_cursor^0,w,c
  3828   0025CC  0A01               	xorlw	1	; case 1
  3829   0025CE  B4D8               	btfsc	status,2,c
  3830   0025D0  EFC3  F012         	goto	l2533
  3831   0025D4  0A03               	xorlw	3	; case 2
  3832   0025D6  B4D8               	btfsc	status,2,c
  3833   0025D8  EFCF  F012         	goto	l2535
  3834   0025DC  EFF0  F012         	goto	l2541
  3835   0025E0                     l2541:
  3836                           
  3837                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 185:     return ret;
  3838   0025E0  501D               	movf	lcd_8bit_set_cursor@ret^0,w,c
  3839   0025E2  0012               	return		;funcret
  3840   0025E4                     __end_of_lcd_8bit_set_cursor:
  3841                           	callstack 0
  3842                           
  3843 ;; *************** function _lcd_8bit_send_char *****************
  3844 ;; Defined at:
  3845 ;;		line 76 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  lcd             2   13[COMRAM] PTR const struct .
  3848 ;;		 -> lcd(10), 
  3849 ;;  data            1   15[COMRAM] unsigned char 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  line_data_pi    1   21[COMRAM] unsigned char 
  3852 ;;  ret             1   20[COMRAM] unsigned char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      unsigned char 
  3855 ;; Registers used:
  3856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3862 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;Total ram usage:        9 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; Hardware stack levels required when called: 2
  3869 ;; This function calls:
  3870 ;;		_gpio_pin_write_logic
  3871 ;;		_send_8bit_enable_signal
  3872 ;; This function is called by:
  3873 ;;		_lcd_8bit_send_char_pos
  3874 ;;		_lcd_8bit_send_string
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text18
  3879   00267C                     __ptext18:
  3880                           	callstack 0
  3881   00267C                     _lcd_8bit_send_char:
  3882                           	callstack 26
  3883   00267C                     
  3884                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 77:     Std_ReturnType ret = (Std_ReturnType)0x00;
  3885   00267C  0E00               	movlw	0
  3886   00267E  6E15               	movwf	lcd_8bit_send_char@ret^0,c
  3887   002680                     
  3888                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 78:     if(((void*)0) != lcd){
  3889   002680  500E               	movf	lcd_8bit_send_char@lcd^0,w,c
  3890   002682  100F               	iorwf	(lcd_8bit_send_char@lcd+1)^0,w,c
  3891   002684  B4D8               	btfsc	status,2,c
  3892   002686  EF47  F013         	goto	u1671
  3893   00268A  EF49  F013         	goto	u1670
  3894   00268E                     u1671:
  3895   00268E  EF80  F013         	goto	l2461
  3896   002692                     u1670:
  3897   002692  C00E  F001         	movff	lcd_8bit_send_char@lcd,gpio_pin_write_logic@_pin_config
  3898   002696  C00F  F002         	movff	lcd_8bit_send_char@lcd+1,gpio_pin_write_logic@_pin_config+1
  3899   00269A  0E01               	movlw	1
  3900   00269C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3901   00269E  ECC6  F00F         	call	_gpio_pin_write_logic	;wreg free
  3902   0026A2                     
  3903                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 81:         for(uint8 line_data_pin = 0 ; line_data_
      +                          pin < 8 ; line_data_pin++){
  3904   0026A2  0E00               	movlw	0
  3905   0026A4  6E16               	movwf	lcd_8bit_send_char@line_data_pin^0,c
  3906   0026A6                     l2453:
  3907   0026A6  5016               	movf	lcd_8bit_send_char@line_data_pin^0,w,c
  3908   0026A8  240E               	addwf	lcd_8bit_send_char@lcd^0,w,c
  3909   0026AA  6E11               	movwf	??_lcd_8bit_send_char^0,c
  3910   0026AC  0E00               	movlw	0
  3911   0026AE  200F               	addwfc	(lcd_8bit_send_char@lcd+1)^0,w,c
  3912   0026B0  6E12               	movwf	(??_lcd_8bit_send_char+1)^0,c
  3913   0026B2  0E02               	movlw	2
  3914   0026B4  2411               	addwf	??_lcd_8bit_send_char^0,w,c
  3915   0026B6  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  3916   0026B8  0E00               	movlw	0
  3917   0026BA  2012               	addwfc	(??_lcd_8bit_send_char+1)^0,w,c
  3918   0026BC  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  3919   0026BE  C016  F013         	movff	lcd_8bit_send_char@line_data_pin,??_lcd_8bit_send_char+2
  3920   0026C2  C010  F014         	movff	lcd_8bit_send_char@data,??_lcd_8bit_send_char+3
  3921   0026C6  2A13               	incf	(??_lcd_8bit_send_char+2)^0,f,c
  3922   0026C8  EF68  F013         	goto	u1684
  3923   0026CC                     u1685:
  3924   0026CC  90D8               	bcf	status,0,c
  3925   0026CE  3214               	rrcf	(??_lcd_8bit_send_char+3)^0,f,c
  3926   0026D0                     u1684:
  3927   0026D0  2E13               	decfsz	(??_lcd_8bit_send_char+2)^0,f,c
  3928   0026D2  EF66  F013         	goto	u1685
  3929   0026D6  5014               	movf	(??_lcd_8bit_send_char+3)^0,w,c
  3930   0026D8  0B01               	andlw	1
  3931   0026DA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  3932   0026DC  ECC6  F00F         	call	_gpio_pin_write_logic	;wreg free
  3933   0026E0                     
  3934                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 83:         }
  3935   0026E0  2A16               	incf	lcd_8bit_send_char@line_data_pin^0,f,c
  3936   0026E2  0E07               	movlw	7
  3937   0026E4  6416               	cpfsgt	lcd_8bit_send_char@line_data_pin^0,c
  3938   0026E6  EF77  F013         	goto	u1691
  3939   0026EA  EF79  F013         	goto	u1690
  3940   0026EE                     u1691:
  3941   0026EE  EF53  F013         	goto	l2453
  3942   0026F2                     u1690:
  3943   0026F2                     
  3944                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 84:         ret = send_8bit_enable_signal(lcd);
  3945   0026F2  C00E  F00B         	movff	lcd_8bit_send_char@lcd,send_8bit_enable_signal@lcd
  3946   0026F6  C00F  F00C         	movff	lcd_8bit_send_char@lcd+1,send_8bit_enable_signal@lcd+1
  3947   0026FA  EC8D  F015         	call	_send_8bit_enable_signal	;wreg free
  3948   0026FE  6E15               	movwf	lcd_8bit_send_char@ret^0,c
  3949   002700                     l2461:
  3950                           
  3951                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 86:     return ret;
  3952   002700  5015               	movf	lcd_8bit_send_char@ret^0,w,c
  3953   002702  0012               	return		;funcret
  3954   002704                     __end_of_lcd_8bit_send_char:
  3955                           	callstack 0
  3956                           
  3957 ;; *************** function _keypad_read_value *****************
  3958 ;; Defined at:
  3959 ;;		line 87 in file "calculator.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  new_value       1   22[COMRAM] unsigned char 
  3964 ;;  current_valu    1   21[COMRAM] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      unsigned char 
  3967 ;; Registers used:
  3968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;Total ram usage:        3 bytes
  3979 ;; Hardware stack levels used: 1
  3980 ;; Hardware stack levels required when called: 2
  3981 ;; This function calls:
  3982 ;;		_keypad_get_value
  3983 ;; This function is called by:
  3984 ;;		_main
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text19
  3989   002952                     __ptext19:
  3990                           	callstack 0
  3991   002952                     _keypad_read_value:
  3992                           	callstack 28
  3993   002952                     
  3994                           ;calculator.c: 89:     uint8 current_value;;calculator.c: 91:     ret = keypad_get_value
      +                          (&keypad, &current_value);
  3995   002952  0ED8               	movlw	low _keypad
  3996   002954  6E0B               	movwf	keypad_get_value@keypad^0,c
  3997   002956  0E00               	movlw	high _keypad
  3998   002958  6E0C               	movwf	(keypad_get_value@keypad+1)^0,c
  3999   00295A  0E16               	movlw	low keypad_read_value@current_value
  4000   00295C  6E0D               	movwf	keypad_get_value@value^0,c
  4001   00295E  0E00               	movlw	high keypad_read_value@current_value
  4002   002960  6E0E               	movwf	(keypad_get_value@value+1)^0,c
  4003   002962  EC72  F011         	call	_keypad_get_value	;wreg free
  4004   002966  6E7E               	movwf	_ret^0,c
  4005   002968                     
  4006                           ;calculator.c: 92:     _delay((unsigned long)((150)*(4000000/4000.0)));
  4007   002968  0EC3               	movlw	195
  4008   00296A  6E15               	movwf	??_keypad_read_value^0,c
  4009   00296C  0ECD               	movlw	205
  4010   00296E                     u2297:
  4011   00296E  2EE8               	decfsz	wreg,f,c
  4012   002970  D7FE               	bra	u2297
  4013   002972  2E15               	decfsz	??_keypad_read_value^0,f,c
  4014   002974  D7FC               	bra	u2297
  4015   002976  F000               	nop	
  4016   002978                     
  4017                           ;calculator.c: 93:     if('\0' == current_value){
  4018   002978  5016               	movf	keypad_read_value@current_value^0,w,c
  4019   00297A  A4D8               	btfss	status,2,c
  4020   00297C  EFC2  F014         	goto	u2031
  4021   002980  EFC4  F014         	goto	u2030
  4022   002984                     u2031:
  4023   002984  EFC7  F014         	goto	l2733
  4024   002988                     u2030:
  4025   002988                     l2729:
  4026                           
  4027                           ;calculator.c: 94:         return 0;
  4028   002988  0E00               	movlw	0
  4029   00298A  EFDC  F014         	goto	l256
  4030   00298E                     l2733:
  4031                           
  4032                           ;calculator.c: 96:     uint8 new_value;;calculator.c: 97:     ret = keypad_get_value(&ke
      +                          ypad, &new_value);
  4033   00298E  0ED8               	movlw	low _keypad
  4034   002990  6E0B               	movwf	keypad_get_value@keypad^0,c
  4035   002992  0E00               	movlw	high _keypad
  4036   002994  6E0C               	movwf	(keypad_get_value@keypad+1)^0,c
  4037   002996  0E17               	movlw	low keypad_read_value@new_value
  4038   002998  6E0D               	movwf	keypad_get_value@value^0,c
  4039   00299A  0E00               	movlw	high keypad_read_value@new_value
  4040   00299C  6E0E               	movwf	(keypad_get_value@value+1)^0,c
  4041   00299E  EC72  F011         	call	_keypad_get_value	;wreg free
  4042   0029A2  6E7E               	movwf	_ret^0,c
  4043   0029A4                     
  4044                           ;calculator.c: 99:     if (current_value == new_value)
  4045   0029A4  5017               	movf	keypad_read_value@new_value^0,w,c
  4046   0029A6  1816               	xorwf	keypad_read_value@current_value^0,w,c
  4047   0029A8  A4D8               	btfss	status,2,c
  4048   0029AA  EFD9  F014         	goto	u2041
  4049   0029AE  EFDB  F014         	goto	u2040
  4050   0029B2                     u2041:
  4051   0029B2  EFC4  F014         	goto	l2729
  4052   0029B6                     u2040:
  4053   0029B6                     
  4054                           ;calculator.c: 100:         return new_value;
  4055   0029B6  5017               	movf	keypad_read_value@new_value^0,w,c
  4056   0029B8                     l256:
  4057   0029B8  0012               	return		;funcret
  4058   0029BA                     __end_of_keypad_read_value:
  4059                           	callstack 0
  4060                           
  4061 ;; *************** function _keypad_get_value *****************
  4062 ;; Defined at:
  4063 ;;		line 46 in file "ECU_Layer/Keypad/ecu_keypad.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  keypad          2   10[COMRAM] PTR const struct .
  4066 ;;		 -> keypad(8), 
  4067 ;;  value           2   12[COMRAM] PTR unsigned char 
  4068 ;;		 -> keypad_read_value@new_value(1), keypad_read_value@current_value(1), 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  col             1   18[COMRAM] unsigned char 
  4071 ;;  rows            1   19[COMRAM] unsigned char 
  4072 ;;  logic           1   17[COMRAM] enum E2965
  4073 ;;  ret             1   16[COMRAM] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      unsigned char 
  4076 ;; Registers used:
  4077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;Total ram usage:       10 bytes
  4088 ;; Hardware stack levels used: 1
  4089 ;; Hardware stack levels required when called: 1
  4090 ;; This function calls:
  4091 ;;		_gpio_pin_read_logic
  4092 ;;		_gpio_pin_write_logic
  4093 ;; This function is called by:
  4094 ;;		_keypad_read_value
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text20
  4099   0022E4                     __ptext20:
  4100                           	callstack 0
  4101   0022E4                     _keypad_get_value:
  4102                           	callstack 28
  4103   0022E4                     
  4104                           ;ECU_Layer/Keypad/ecu_keypad.c: 47:     Std_ReturnType ret = (Std_ReturnType)0x00;
  4105   0022E4  0E00               	movlw	0
  4106   0022E6  6E11               	movwf	keypad_get_value@ret^0,c
  4107   0022E8                     
  4108                           ;ECU_Layer/Keypad/ecu_keypad.c: 48:     if(((void*)0) != keypad && ((void*)0) != value){
  4109   0022E8  500B               	movf	keypad_get_value@keypad^0,w,c
  4110   0022EA  100C               	iorwf	(keypad_get_value@keypad+1)^0,w,c
  4111   0022EC  B4D8               	btfsc	status,2,c
  4112   0022EE  EF7B  F011         	goto	u1891
  4113   0022F2  EF7D  F011         	goto	u1890
  4114   0022F6                     u1891:
  4115   0022F6  EFE2  F011         	goto	l2645
  4116   0022FA                     u1890:
  4117   0022FA  500D               	movf	keypad_get_value@value^0,w,c
  4118   0022FC  100E               	iorwf	(keypad_get_value@value+1)^0,w,c
  4119   0022FE  B4D8               	btfsc	status,2,c
  4120   002300  EF84  F011         	goto	u1901
  4121   002304  EF86  F011         	goto	u1900
  4122   002308                     u1901:
  4123   002308  EFE2  F011         	goto	l2645
  4124   00230C                     u1900:
  4125   00230C                     
  4126                           ;ECU_Layer/Keypad/ecu_keypad.c: 50:         logic_t logic;;ECU_Layer/Keypad/ecu_keypad.c
      +                          : 51:         for(uint8 rows = 0 ; rows < 4 ; rows++){
  4127   00230C  0E00               	movlw	0
  4128   00230E  6E14               	movwf	keypad_get_value@rows^0,c
  4129   002310                     l2621:
  4130   002310  5014               	movf	keypad_get_value@rows^0,w,c
  4131   002312  240B               	addwf	keypad_get_value@keypad^0,w,c
  4132   002314  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4133   002316  0E00               	movlw	0
  4134   002318  200C               	addwfc	(keypad_get_value@keypad+1)^0,w,c
  4135   00231A  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4136   00231C  0E01               	movlw	1
  4137   00231E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4138   002320  ECC6  F00F         	call	_gpio_pin_write_logic	;wreg free
  4139   002324                     
  4140                           ;ECU_Layer/Keypad/ecu_keypad.c: 53:             for(uint8 col = 0 ; col < 4 ; col++){
  4141   002324  0E00               	movlw	0
  4142   002326  6E13               	movwf	keypad_get_value@col^0,c
  4143   002328                     l2629:
  4144   002328  5013               	movf	keypad_get_value@col^0,w,c
  4145   00232A  240B               	addwf	keypad_get_value@keypad^0,w,c
  4146   00232C  6E0F               	movwf	??_keypad_get_value^0,c
  4147   00232E  0E00               	movlw	0
  4148   002330  200C               	addwfc	(keypad_get_value@keypad+1)^0,w,c
  4149   002332  6E10               	movwf	(??_keypad_get_value+1)^0,c
  4150   002334  0E04               	movlw	4
  4151   002336  240F               	addwf	??_keypad_get_value^0,w,c
  4152   002338  6E01               	movwf	gpio_pin_read_logic@_pin_config^0,c
  4153   00233A  0E00               	movlw	0
  4154   00233C  2010               	addwfc	(??_keypad_get_value+1)^0,w,c
  4155   00233E  6E02               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
  4156   002340  0E12               	movlw	low keypad_get_value@logic
  4157   002342  6E03               	movwf	gpio_pin_read_logic@logic^0,c
  4158   002344  0E00               	movlw	high keypad_get_value@logic
  4159   002346  6E04               	movwf	(gpio_pin_read_logic@logic+1)^0,c
  4160   002348  EC49  F012         	call	_gpio_pin_read_logic	;wreg free
  4161   00234C                     
  4162                           ;ECU_Layer/Keypad/ecu_keypad.c: 55:                 if(GPIO_HIGH == logic){
  4163   00234C  0412               	decf	keypad_get_value@logic^0,w,c
  4164   00234E  A4D8               	btfss	status,2,c
  4165   002350  EFAC  F011         	goto	u1911
  4166   002354  EFAE  F011         	goto	u1910
  4167   002358                     u1911:
  4168   002358  EFC5  F011         	goto	l2635
  4169   00235C                     u1910:
  4170   00235C                     
  4171                           ;ECU_Layer/Keypad/ecu_keypad.c: 56:                     *value = keypad_matrix[rows][col
      +                          ];
  4172   00235C  5014               	movf	keypad_get_value@rows^0,w,c
  4173   00235E  0D04               	mullw	4
  4174   002360  0E01               	movlw	low _keypad_matrix
  4175   002362  24F3               	addwf	243,w,c
  4176   002364  6E0F               	movwf	??_keypad_get_value^0,c
  4177   002366  0E10               	movlw	high _keypad_matrix
  4178   002368  20F4               	addwfc	prodh,w,c
  4179   00236A  6E10               	movwf	(??_keypad_get_value+1)^0,c
  4180   00236C  5013               	movf	keypad_get_value@col^0,w,c
  4181   00236E  260F               	addwf	??_keypad_get_value^0,f,c
  4182   002370  0E00               	movlw	0
  4183   002372  2210               	addwfc	(??_keypad_get_value+1)^0,f,c
  4184   002374  C00F  FFF6         	movff	??_keypad_get_value,tblptrl
  4185   002378  C010  FFF7         	movff	??_keypad_get_value+1,tblptrh
  4186   00237C                     	if	0	;tblptru may be non-zero
  4187   00237C                     	endif
  4188   00237C                     	if	0	;tblptru may be non-zero
  4189   00237C                     	endif
  4190   00237C  C00D  FFD9         	movff	keypad_get_value@value,fsr2l
  4191   002380  C00E  FFDA         	movff	keypad_get_value@value+1,fsr2h
  4192   002384  0008               	tblrd		*
  4193   002386  CFF5 FFDF          	movff	tablat,indf2
  4194   00238A                     l2635:
  4195                           
  4196                           ;ECU_Layer/Keypad/ecu_keypad.c: 58:             }
  4197   00238A  2A13               	incf	keypad_get_value@col^0,f,c
  4198   00238C  0E03               	movlw	3
  4199   00238E  6413               	cpfsgt	keypad_get_value@col^0,c
  4200   002390  EFCC  F011         	goto	u1921
  4201   002394  EFCE  F011         	goto	u1920
  4202   002398                     u1921:
  4203   002398  EF94  F011         	goto	l2629
  4204   00239C                     u1920:
  4205   00239C                     
  4206                           ;ECU_Layer/Keypad/ecu_keypad.c: 59:             ret = gpio_pin_write_logic(&(keypad->key
      +                          pad_rows_pins[rows]), GPIO_LOW);
  4207   00239C  5014               	movf	keypad_get_value@rows^0,w,c
  4208   00239E  240B               	addwf	keypad_get_value@keypad^0,w,c
  4209   0023A0  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  4210   0023A2  0E00               	movlw	0
  4211   0023A4  200C               	addwfc	(keypad_get_value@keypad+1)^0,w,c
  4212   0023A6  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  4213   0023A8  0E00               	movlw	0
  4214   0023AA  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  4215   0023AC  ECC6  F00F         	call	_gpio_pin_write_logic	;wreg free
  4216   0023B0  6E11               	movwf	keypad_get_value@ret^0,c
  4217   0023B2                     
  4218                           ;ECU_Layer/Keypad/ecu_keypad.c: 60:         }
  4219   0023B2  2A14               	incf	keypad_get_value@rows^0,f,c
  4220   0023B4  0E03               	movlw	3
  4221   0023B6  6414               	cpfsgt	keypad_get_value@rows^0,c
  4222   0023B8  EFE0  F011         	goto	u1931
  4223   0023BC  EFE2  F011         	goto	u1930
  4224   0023C0                     u1931:
  4225   0023C0  EF88  F011         	goto	l2621
  4226   0023C4                     u1930:
  4227   0023C4                     l2645:
  4228                           
  4229                           ;ECU_Layer/Keypad/ecu_keypad.c: 62:     return ret;
  4230   0023C4  5011               	movf	keypad_get_value@ret^0,w,c
  4231   0023C6  0012               	return		;funcret
  4232   0023C8                     __end_of_keypad_get_value:
  4233                           	callstack 0
  4234                           
  4235 ;; *************** function _gpio_pin_read_logic *****************
  4236 ;; Defined at:
  4237 ;;		line 75 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  4240 ;;		 -> keypad.keypad_coloumns_pins(4), keypad(8), 
  4241 ;;  logic           2    2[COMRAM] PTR enum E2965
  4242 ;;		 -> keypad_get_value@logic(1), 
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;  ret             1    9[COMRAM] unsigned char 
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      unsigned char 
  4247 ;; Registers used:
  4248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;Total ram usage:       10 bytes
  4259 ;; Hardware stack levels used: 1
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_keypad_get_value
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text21
  4268   002492                     __ptext21:
  4269                           	callstack 0
  4270   002492                     _gpio_pin_read_logic:
  4271                           	callstack 28
  4272   002492                     
  4273                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     Std_ReturnType ret = (Std_ReturnType)0x01;
  4274   002492  0E01               	movlw	1
  4275   002494  6E0A               	movwf	gpio_pin_read_logic@ret^0,c
  4276   002496                     
  4277                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     if(_pin_config == ((void*)0) || logic == ((void*)0)
      +                           || _pin_config->pin > 8 -1){
  4278   002496  5001               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  4279   002498  1002               	iorwf	(gpio_pin_read_logic@_pin_config+1)^0,w,c
  4280   00249A  B4D8               	btfsc	status,2,c
  4281   00249C  EF52  F012         	goto	u1731
  4282   0024A0  EF54  F012         	goto	u1730
  4283   0024A4                     u1731:
  4284   0024A4  EF6E  F012         	goto	l2505
  4285   0024A8                     u1730:
  4286   0024A8  5003               	movf	gpio_pin_read_logic@logic^0,w,c
  4287   0024AA  1004               	iorwf	(gpio_pin_read_logic@logic+1)^0,w,c
  4288   0024AC  B4D8               	btfsc	status,2,c
  4289   0024AE  EF5B  F012         	goto	u1741
  4290   0024B2  EF5D  F012         	goto	u1740
  4291   0024B6                     u1741:
  4292   0024B6  EF6E  F012         	goto	l2505
  4293   0024BA                     u1740:
  4294   0024BA  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  4295   0024BE  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  4296   0024C2  30DF               	rrcf	223,w,c
  4297   0024C4  32E8               	rrcf	wreg,f,c
  4298   0024C6  32E8               	rrcf	wreg,f,c
  4299   0024C8  0B07               	andlw	7
  4300   0024CA  6E05               	movwf	??_gpio_pin_read_logic^0,c
  4301   0024CC  0E07               	movlw	7
  4302   0024CE  6405               	cpfsgt	??_gpio_pin_read_logic^0,c
  4303   0024D0  EF6C  F012         	goto	u1751
  4304   0024D4  EF6E  F012         	goto	u1750
  4305   0024D8                     u1751:
  4306   0024D8  EF72  F012         	goto	l2507
  4307   0024DC                     u1750:
  4308   0024DC                     l2505:
  4309                           
  4310                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:         ret = (Std_ReturnType)0x00;
  4311   0024DC  0E00               	movlw	0
  4312   0024DE  6E0A               	movwf	gpio_pin_read_logic@ret^0,c
  4313                           
  4314                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     }
  4315   0024E0  EFA3  F012         	goto	l2509
  4316   0024E4                     l2507:
  4317                           
  4318                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:         *logic = ((*port_registers[_pin_config->port] >
      +                          > _pin_config->pin) & (uint8) 1);
  4319   0024E4  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  4320   0024E8  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  4321   0024EC  30DF               	rrcf	223,w,c
  4322   0024EE  32E8               	rrcf	wreg,f,c
  4323   0024F0  32E8               	rrcf	wreg,f,c
  4324   0024F2  0B07               	andlw	7
  4325   0024F4  6E05               	movwf	??_gpio_pin_read_logic^0,c
  4326   0024F6  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  4327   0024FA  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  4328   0024FE  50DF               	movf	223,w,c
  4329   002500  0B07               	andlw	7
  4330   002502  6E06               	movwf	(??_gpio_pin_read_logic+1)^0,c
  4331   002504  5006               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  4332   002506  0D02               	mullw	2
  4333   002508  0E32               	movlw	low _port_registers
  4334   00250A  24F3               	addwf	243,w,c
  4335   00250C  6ED9               	movwf	fsr2l,c
  4336   00250E  0E01               	movlw	high _port_registers
  4337   002510  20F4               	addwfc	prodh,w,c
  4338   002512  6EDA               	movwf	fsr2h,c
  4339   002514  CFDE F007          	movff	postinc2,??_gpio_pin_read_logic+2
  4340   002518  CFDD F008          	movff	postdec2,??_gpio_pin_read_logic+3
  4341   00251C  C007  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  4342   002520  C008  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  4343   002524  50DF               	movf	indf2,w,c
  4344   002526  6E09               	movwf	(??_gpio_pin_read_logic+4)^0,c
  4345   002528  2A05               	incf	??_gpio_pin_read_logic^0,f,c
  4346   00252A  EF99  F012         	goto	u1764
  4347   00252E                     u1765:
  4348   00252E  90D8               	bcf	status,0,c
  4349   002530  3209               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  4350   002532                     u1764:
  4351   002532  2E05               	decfsz	??_gpio_pin_read_logic^0,f,c
  4352   002534  EF97  F012         	goto	u1765
  4353   002538  5009               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  4354   00253A  0B01               	andlw	1
  4355   00253C  C003  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
  4356   002540  C004  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
  4357   002544  6EDF               	movwf	indf2,c
  4358   002546                     l2509:
  4359                           
  4360                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:     return ret;
  4361   002546  500A               	movf	gpio_pin_read_logic@ret^0,w,c
  4362   002548  0012               	return		;funcret
  4363   00254A                     __end_of_gpio_pin_read_logic:
  4364                           	callstack 0
  4365                           
  4366 ;; *************** function _atol *****************
  4367 ;; Defined at:
  4368 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atol.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  s               2   12[COMRAM] PTR const unsigned char 
  4371 ;;		 -> main@second_num_text(9), main@first_num_text(9), 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  n               4   23[COMRAM] long 
  4374 ;;  neg             2   21[COMRAM] int 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  4   12[COMRAM] long 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4384 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;Total ram usage:       15 bytes
  4389 ;; Hardware stack levels used: 1
  4390 ;; Hardware stack levels required when called: 1
  4391 ;; This function calls:
  4392 ;;		___lmul
  4393 ;;		_isdigit
  4394 ;;		_isspace
  4395 ;; This function is called by:
  4396 ;;		_main
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text22
  4401   001854                     __ptext22:
  4402                           	callstack 0
  4403   001854                     _atol:
  4404                           	callstack 29
  4405   001854  0E00               	movlw	0
  4406   001856  6E18               	movwf	atol@n^0,c
  4407   001858  0E00               	movlw	0
  4408   00185A  6E19               	movwf	(atol@n+1)^0,c
  4409   00185C  0E00               	movlw	0
  4410   00185E  6E1A               	movwf	(atol@n+2)^0,c
  4411   001860  0E00               	movlw	0
  4412   001862  6E1B               	movwf	(atol@n+3)^0,c
  4413   001864  0E00               	movlw	0
  4414   001866  6E17               	movwf	(atol@neg+1)^0,c
  4415   001868  0E00               	movlw	0
  4416   00186A  6E16               	movwf	atol@neg^0,c
  4417   00186C  EF3A  F00C         	goto	l2751
  4418   001870                     l2747:
  4419   001870  4A0D               	infsnz	atol@s^0,f,c
  4420   001872  2A0E               	incf	(atol@s+1)^0,f,c
  4421   001874                     l2751:
  4422   001874  C00D  FFD9         	movff	atol@s,fsr2l
  4423   001878  C00E  FFDA         	movff	atol@s+1,fsr2h
  4424   00187C  0E20               	movlw	32
  4425   00187E  18DE               	xorwf	postinc2,w,c
  4426   001880  B4D8               	btfsc	status,2,c
  4427   001882  EF45  F00C         	goto	u2051
  4428   001886  EF47  F00C         	goto	u2050
  4429   00188A                     u2051:
  4430   00188A  EF38  F00C         	goto	l2747
  4431   00188E                     u2050:
  4432   00188E  C00D  FFD9         	movff	atol@s,fsr2l
  4433   001892  C00E  FFDA         	movff	atol@s+1,fsr2h
  4434   001896  50DF               	movf	indf2,w,c
  4435   001898  6E11               	movwf	??_atol^0,c
  4436   00189A  0EF7               	movlw	247
  4437   00189C  2411               	addwf	??_atol^0,w,c
  4438   00189E  6E12               	movwf	(??_atol+1)^0,c
  4439   0018A0  6A13               	clrf	(??_atol+2)^0,c
  4440   0018A2  0EFF               	movlw	255
  4441   0018A4  2213               	addwfc	(??_atol+2)^0,f,c
  4442   0018A6  5013               	movf	(??_atol+2)^0,w,c
  4443   0018A8  E109               	bnz	u2060
  4444   0018AA  0E05               	movlw	5
  4445   0018AC  5C12               	subwf	(??_atol+1)^0,w,c
  4446   0018AE  A0D8               	btfss	status,0,c
  4447   0018B0  EF5C  F00C         	goto	u2061
  4448   0018B4  EF5E  F00C         	goto	u2060
  4449   0018B8                     u2061:
  4450   0018B8  EF38  F00C         	goto	l2747
  4451   0018BC                     u2060:
  4452   0018BC  EF68  F00C         	goto	l2759
  4453   0018C0                     l2755:
  4454   0018C0  0E00               	movlw	0
  4455   0018C2  6E17               	movwf	(atol@neg+1)^0,c
  4456   0018C4  0E01               	movlw	1
  4457   0018C6  6E16               	movwf	atol@neg^0,c
  4458   0018C8                     l2757:
  4459   0018C8  4A0D               	infsnz	atol@s^0,f,c
  4460   0018CA  2A0E               	incf	(atol@s+1)^0,f,c
  4461   0018CC  EFAF  F00C         	goto	l2767
  4462   0018D0                     l2759:
  4463   0018D0  C00D  FFD9         	movff	atol@s,fsr2l
  4464   0018D4  C00E  FFDA         	movff	atol@s+1,fsr2h
  4465   0018D8  50DF               	movf	indf2,w,c
  4466   0018DA  6E11               	movwf	??_atol^0,c
  4467   0018DC  6A12               	clrf	(??_atol+1)^0,c
  4468                           
  4469                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4470                           ; Switch size 1, requested type "simple"
  4471                           ; Number of cases is 1, Range of values is 0 to 0
  4472                           ; switch strategies available:
  4473                           ; Name         Instructions Cycles
  4474                           ; simple_byte            4     3 (average)
  4475                           ;	Chosen strategy is simple_byte
  4476   0018DE  5012               	movf	(??_atol+1)^0,w,c
  4477   0018E0  0A00               	xorlw	0	; case 0
  4478   0018E2  B4D8               	btfsc	status,2,c
  4479   0018E4  EF76  F00C         	goto	l3073
  4480   0018E8  EFAF  F00C         	goto	l2767
  4481   0018EC                     l3073:
  4482                           
  4483                           ; Switch size 1, requested type "simple"
  4484                           ; Number of cases is 2, Range of values is 43 to 45
  4485                           ; switch strategies available:
  4486                           ; Name         Instructions Cycles
  4487                           ; simple_byte            7     4 (average)
  4488                           ;	Chosen strategy is simple_byte
  4489   0018EC  5011               	movf	??_atol^0,w,c
  4490   0018EE  0A2B               	xorlw	43	; case 43
  4491   0018F0  B4D8               	btfsc	status,2,c
  4492   0018F2  EF64  F00C         	goto	l2757
  4493   0018F6  0A06               	xorlw	6	; case 45
  4494   0018F8  B4D8               	btfsc	status,2,c
  4495   0018FA  EF60  F00C         	goto	l2755
  4496   0018FE  EFAF  F00C         	goto	l2767
  4497   001902                     l2761:
  4498   001902  C00D  FFD9         	movff	atol@s,fsr2l
  4499   001906  C00E  FFDA         	movff	atol@s+1,fsr2h
  4500   00190A  50DF               	movf	indf2,w,c
  4501   00190C  6E11               	movwf	??_atol^0,c
  4502   00190E  0ED0               	movlw	208
  4503   001910  2411               	addwf	??_atol^0,w,c
  4504   001912  6E12               	movwf	(??_atol+1)^0,c
  4505   001914  6A13               	clrf	(??_atol+2)^0,c
  4506   001916  0EFF               	movlw	255
  4507   001918  2213               	addwfc	(??_atol+2)^0,f,c
  4508   00191A  6A14               	clrf	(??_atol+3)^0,c
  4509   00191C  6A15               	clrf	(??_atol+4)^0,c
  4510   00191E  C018  F001         	movff	atol@n,___lmul@multiplier
  4511   001922  C019  F002         	movff	atol@n+1,___lmul@multiplier+1
  4512   001926  C01A  F003         	movff	atol@n+2,___lmul@multiplier+2
  4513   00192A  C01B  F004         	movff	atol@n+3,___lmul@multiplier+3
  4514   00192E  0E0A               	movlw	10
  4515   001930  6E05               	movwf	___lmul@multiplicand^0,c
  4516   001932  0E00               	movlw	0
  4517   001934  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4518   001936  0E00               	movlw	0
  4519   001938  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4520   00193A  0E00               	movlw	0
  4521   00193C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4522   00193E  EC74  F014         	call	___lmul	;wreg free
  4523   001942  5012               	movf	(??_atol+1)^0,w,c
  4524   001944  5C01               	subwf	?___lmul^0,w,c
  4525   001946  6E18               	movwf	atol@n^0,c
  4526   001948  5013               	movf	(??_atol+2)^0,w,c
  4527   00194A  5802               	subwfb	(?___lmul+1)^0,w,c
  4528   00194C  6E19               	movwf	(atol@n+1)^0,c
  4529   00194E  5014               	movf	(??_atol+3)^0,w,c
  4530   001950  5803               	subwfb	(?___lmul+2)^0,w,c
  4531   001952  6E1A               	movwf	(atol@n+2)^0,c
  4532   001954  5015               	movf	(??_atol+4)^0,w,c
  4533   001956  5804               	subwfb	(?___lmul+3)^0,w,c
  4534   001958  6E1B               	movwf	(atol@n+3)^0,c
  4535   00195A  EF64  F00C         	goto	l2757
  4536   00195E                     l2767:
  4537   00195E  C00D  FFD9         	movff	atol@s,fsr2l
  4538   001962  C00E  FFDA         	movff	atol@s+1,fsr2h
  4539   001966  50DF               	movf	indf2,w,c
  4540   001968  6E11               	movwf	??_atol^0,c
  4541   00196A  0ED0               	movlw	208
  4542   00196C  2411               	addwf	??_atol^0,w,c
  4543   00196E  6E12               	movwf	(??_atol+1)^0,c
  4544   001970  6A13               	clrf	(??_atol+2)^0,c
  4545   001972  0EFF               	movlw	255
  4546   001974  2213               	addwfc	(??_atol+2)^0,f,c
  4547   001976  5013               	movf	(??_atol+2)^0,w,c
  4548   001978  E109               	bnz	u2070
  4549   00197A  0E0A               	movlw	10
  4550   00197C  5C12               	subwf	(??_atol+1)^0,w,c
  4551   00197E  A0D8               	btfss	status,0,c
  4552   001980  EFC4  F00C         	goto	u2071
  4553   001984  EFC6  F00C         	goto	u2070
  4554   001988                     u2071:
  4555   001988  EF81  F00C         	goto	l2761
  4556   00198C                     u2070:
  4557   00198C  5016               	movf	atol@neg^0,w,c
  4558   00198E  1017               	iorwf	(atol@neg+1)^0,w,c
  4559   001990  A4D8               	btfss	status,2,c
  4560   001992  EFCD  F00C         	goto	u2081
  4561   001996  EFCF  F00C         	goto	u2080
  4562   00199A                     u2081:
  4563   00199A  EFEA  F00C         	goto	l953
  4564   00199E                     u2080:
  4565   00199E  C018  F011         	movff	atol@n,??_atol
  4566   0019A2  C019  F012         	movff	atol@n+1,??_atol+1
  4567   0019A6  C01A  F013         	movff	atol@n+2,??_atol+2
  4568   0019AA  C01B  F014         	movff	atol@n+3,??_atol+3
  4569   0019AE  1E11               	comf	??_atol^0,f,c
  4570   0019B0  1E12               	comf	(??_atol+1)^0,f,c
  4571   0019B2  1E13               	comf	(??_atol+2)^0,f,c
  4572   0019B4  1E14               	comf	(??_atol+3)^0,f,c
  4573   0019B6  2A11               	incf	??_atol^0,f,c
  4574   0019B8  0E00               	movlw	0
  4575   0019BA  2212               	addwfc	(??_atol+1)^0,f,c
  4576   0019BC  2213               	addwfc	(??_atol+2)^0,f,c
  4577   0019BE  2214               	addwfc	(??_atol+3)^0,f,c
  4578   0019C0  C011  F00D         	movff	??_atol,?_atol
  4579   0019C4  C012  F00E         	movff	??_atol+1,?_atol+1
  4580   0019C8  C013  F00F         	movff	??_atol+2,?_atol+2
  4581   0019CC  C014  F010         	movff	??_atol+3,?_atol+3
  4582   0019D0  EFF2  F00C         	goto	l956
  4583   0019D4                     l953:
  4584   0019D4  C018  F00D         	movff	atol@n,?_atol
  4585   0019D8  C019  F00E         	movff	atol@n+1,?_atol+1
  4586   0019DC  C01A  F00F         	movff	atol@n+2,?_atol+2
  4587   0019E0  C01B  F010         	movff	atol@n+3,?_atol+3
  4588   0019E4                     l956:
  4589   0019E4  0012               	return		;funcret
  4590   0019E6                     __end_of_atol:
  4591                           	callstack 0
  4592                           
  4593 ;; *************** function _isspace *****************
  4594 ;; Defined at:
  4595 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  c               2    0[COMRAM] int 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  2    0[COMRAM] int 
  4602 ;; Registers used:
  4603 ;;		wreg, status,2, status,0
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;Total ram usage:        5 bytes
  4614 ;; Hardware stack levels used: 1
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_atol
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text23
  4623   002B64                     __ptext23:
  4624                           	callstack 0
  4625   002B64                     _isspace:
  4626                           	callstack 29
  4627   002B64  0E01               	movlw	1
  4628   002B66  6E05               	movwf	_isspace$862^0,c
  4629   002B68  0E20               	movlw	32
  4630   002B6A  1801               	xorwf	isspace@c^0,w,c
  4631   002B6C  1002               	iorwf	(isspace@c+1)^0,w,c
  4632   002B6E  B4D8               	btfsc	status,2,c
  4633   002B70  EFBC  F015         	goto	u1961
  4634   002B74  EFBE  F015         	goto	u1960
  4635   002B78                     u1961:
  4636   002B78  EFD1  F015         	goto	l2675
  4637   002B7C                     u1960:
  4638   002B7C  0EF7               	movlw	247
  4639   002B7E  2401               	addwf	isspace@c^0,w,c
  4640   002B80  6E03               	movwf	??_isspace^0,c
  4641   002B82  0EFF               	movlw	255
  4642   002B84  2002               	addwfc	(isspace@c+1)^0,w,c
  4643   002B86  6E04               	movwf	(??_isspace+1)^0,c
  4644   002B88  5004               	movf	(??_isspace+1)^0,w,c
  4645   002B8A  E109               	bnz	u1970
  4646   002B8C  0E05               	movlw	5
  4647   002B8E  5C03               	subwf	??_isspace^0,w,c
  4648   002B90  A0D8               	btfss	status,0,c
  4649   002B92  EFCD  F015         	goto	u1971
  4650   002B96  EFCF  F015         	goto	u1970
  4651   002B9A                     u1971:
  4652   002B9A  EFD1  F015         	goto	l2675
  4653   002B9E                     u1970:
  4654   002B9E  0E00               	movlw	0
  4655   002BA0  6E05               	movwf	_isspace$862^0,c
  4656   002BA2                     l2675:
  4657   002BA2  C005  F001         	movff	_isspace$862,?_isspace
  4658   002BA6  6A02               	clrf	(?_isspace+1)^0,c
  4659   002BA8  0012               	return		;funcret
  4660   002BAA                     __end_of_isspace:
  4661                           	callstack 0
  4662                           
  4663 ;; *************** function _isdigit *****************
  4664 ;; Defined at:
  4665 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  c               2    0[COMRAM] int 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  2    0[COMRAM] int 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2, status,0
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;Total ram usage:        4 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_atol
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text24
  4693   002CB2                     __ptext24:
  4694                           	callstack 0
  4695   002CB2                     _isdigit:
  4696                           	callstack 29
  4697   002CB2  0ED0               	movlw	208
  4698   002CB4  2401               	addwf	isdigit@c^0,w,c
  4699   002CB6  6E03               	movwf	??_isdigit^0,c
  4700   002CB8  0EFF               	movlw	255
  4701   002CBA  2002               	addwfc	(isdigit@c+1)^0,w,c
  4702   002CBC  6E04               	movwf	(??_isdigit+1)^0,c
  4703   002CBE  5004               	movf	(??_isdigit+1)^0,w,c
  4704   002CC0  E10A               	bnz	u1980
  4705   002CC2  0E0A               	movlw	10
  4706   002CC4  5C03               	subwf	??_isdigit^0,w,c
  4707   002CC6  A0D8               	btfss	status,0,c
  4708   002CC8  EF68  F016         	goto	u1981
  4709   002CCC  EF6B  F016         	goto	u1980
  4710   002CD0                     u1981:
  4711   002CD0  0E01               	movlw	1
  4712   002CD2  EF6C  F016         	goto	u1990
  4713   002CD6                     u1980:
  4714   002CD6  0E00               	movlw	0
  4715   002CD8                     u1990:
  4716   002CD8  6E01               	movwf	?_isdigit^0,c
  4717   002CDA  6A02               	clrf	(?_isdigit+1)^0,c
  4718   002CDC  0012               	return		;funcret
  4719   002CDE                     __end_of_isdigit:
  4720                           	callstack 0
  4721                           
  4722 ;; *************** function ___lmul *****************
  4723 ;; Defined at:
  4724 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  multiplier      4    0[COMRAM] unsigned long 
  4727 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  product         4    8[COMRAM] unsigned long 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  4    0[COMRAM] unsigned long 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4739 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4740 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4742 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;Total ram usage:       12 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_main
  4749 ;;		_atol
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text25
  4754   0028E8                     __ptext25:
  4755                           	callstack 0
  4756   0028E8                     ___lmul:
  4757                           	callstack 29
  4758   0028E8  0E00               	movlw	0
  4759   0028EA  6E09               	movwf	___lmul@product^0,c
  4760   0028EC  0E00               	movlw	0
  4761   0028EE  6E0A               	movwf	(___lmul@product+1)^0,c
  4762   0028F0  0E00               	movlw	0
  4763   0028F2  6E0B               	movwf	(___lmul@product+2)^0,c
  4764   0028F4  0E00               	movlw	0
  4765   0028F6  6E0C               	movwf	(___lmul@product+3)^0,c
  4766   0028F8                     l2659:
  4767   0028F8  A001               	btfss	___lmul@multiplier^0,0,c
  4768   0028FA  EF81  F014         	goto	u1941
  4769   0028FE  EF83  F014         	goto	u1940
  4770   002902                     u1941:
  4771   002902  EF8B  F014         	goto	l2663
  4772   002906                     u1940:
  4773   002906  5005               	movf	___lmul@multiplicand^0,w,c
  4774   002908  2609               	addwf	___lmul@product^0,f,c
  4775   00290A  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4776   00290C  220A               	addwfc	(___lmul@product+1)^0,f,c
  4777   00290E  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4778   002910  220B               	addwfc	(___lmul@product+2)^0,f,c
  4779   002912  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4780   002914  220C               	addwfc	(___lmul@product+3)^0,f,c
  4781   002916                     l2663:
  4782   002916  90D8               	bcf	status,0,c
  4783   002918  3605               	rlcf	___lmul@multiplicand^0,f,c
  4784   00291A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4785   00291C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4786   00291E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4787   002920  90D8               	bcf	status,0,c
  4788   002922  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4789   002924  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4790   002926  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4791   002928  3201               	rrcf	___lmul@multiplier^0,f,c
  4792   00292A  5001               	movf	___lmul@multiplier^0,w,c
  4793   00292C  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4794   00292E  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4795   002930  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4796   002932  A4D8               	btfss	status,2,c
  4797   002934  EF9E  F014         	goto	u1951
  4798   002938  EFA0  F014         	goto	u1950
  4799   00293C                     u1951:
  4800   00293C  EF7C  F014         	goto	l2659
  4801   002940                     u1950:
  4802   002940  C009  F001         	movff	___lmul@product,?___lmul
  4803   002944  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4804   002948  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4805   00294C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4806   002950  0012               	return		;funcret
  4807   002952                     __end_of___lmul:
  4808                           	callstack 0
  4809                           
  4810 ;; *************** function _application_intialize *****************
  4811 ;; Defined at:
  4812 ;;		line 82 in file "calculator.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;Total ram usage:        0 bytes
  4831 ;; Hardware stack levels used: 1
  4832 ;; Hardware stack levels required when called: 5
  4833 ;; This function calls:
  4834 ;;		_ecu_layer_intialize
  4835 ;; This function is called by:
  4836 ;;		_main
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text26
  4841   002D2C                     __ptext26:
  4842                           	callstack 0
  4843   002D2C                     _application_intialize:
  4844                           	callstack 25
  4845   002D2C                     
  4846                           ;calculator.c: 83:     ret = ecu_layer_intialize();
  4847   002D2C  EC82  F016         	call	_ecu_layer_intialize	;wreg free
  4848   002D30  6E7E               	movwf	_ret^0,c
  4849   002D32  0012               	return		;funcret
  4850   002D34                     __end_of_application_intialize:
  4851                           	callstack 0
  4852                           
  4853 ;; *************** function _ecu_layer_intialize *****************
  4854 ;; Defined at:
  4855 ;;		line 91 in file "ECU_Layer/ecu_layer_initialize.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;		None
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  ret             1   28[COMRAM] unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      unsigned char 
  4862 ;; Registers used:
  4863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;Total ram usage:        1 bytes
  4874 ;; Hardware stack levels used: 1
  4875 ;; Hardware stack levels required when called: 4
  4876 ;; This function calls:
  4877 ;;		_keypad_intialize
  4878 ;;		_lcd_8bit_intialize
  4879 ;; This function is called by:
  4880 ;;		_application_intialize
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text27
  4885   002D04                     __ptext27:
  4886                           	callstack 0
  4887   002D04                     _ecu_layer_intialize:
  4888                           	callstack 25
  4889   002D04  0ED8               	movlw	low _keypad
  4890   002D06  6E0F               	movwf	keypad_intialize@keypad^0,c
  4891   002D08  0E00               	movlw	high _keypad
  4892   002D0A  6E10               	movwf	(keypad_intialize@keypad+1)^0,c
  4893   002D0C  ECF2  F012         	call	_keypad_intialize	;wreg free
  4894   002D10                     
  4895                           ;ECU_Layer/ecu_layer_initialize.c: 96:     ret = lcd_8bit_intialize(&lcd);
  4896   002D10  0ECE               	movlw	low _lcd
  4897   002D12  6E17               	movwf	lcd_8bit_intialize@lcd^0,c
  4898   002D14  0E00               	movlw	high _lcd
  4899   002D16  6E18               	movwf	(lcd_8bit_intialize@lcd+1)^0,c
  4900   002D18  EC5C  F010         	call	_lcd_8bit_intialize	;wreg free
  4901   002D1C  6E1D               	movwf	ecu_layer_intialize@ret^0,c
  4902                           
  4903                           ;ECU_Layer/ecu_layer_initialize.c: 98:     return ret;
  4904   002D1E  501D               	movf	ecu_layer_intialize@ret^0,w,c
  4905   002D20  0012               	return		;funcret
  4906   002D22                     __end_of_ecu_layer_intialize:
  4907                           	callstack 0
  4908                           
  4909 ;; *************** function _lcd_8bit_intialize *****************
  4910 ;; Defined at:
  4911 ;;		line 20 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  lcd             2   22[COMRAM] PTR const struct .
  4914 ;;		 -> lcd(10), 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  pin             1   26[COMRAM] unsigned char 
  4917 ;;  ret             1   27[COMRAM] unsigned char 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      unsigned char 
  4920 ;; Registers used:
  4921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4930 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;Total ram usage:        6 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 3
  4934 ;; This function calls:
  4935 ;;		_gpio_pin_intialize
  4936 ;;		_lcd_8bit_send_command
  4937 ;; This function is called by:
  4938 ;;		_ecu_layer_intialize
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text28
  4943   0020B8                     __ptext28:
  4944                           	callstack 0
  4945   0020B8                     _lcd_8bit_intialize:
  4946                           	callstack 25
  4947   0020B8                     
  4948                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 21:     Std_ReturnType ret = (Std_ReturnType)0x00;
  4949   0020B8  0E00               	movlw	0
  4950   0020BA  6E1C               	movwf	lcd_8bit_intialize@ret^0,c
  4951   0020BC                     
  4952                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 22:     if(((void*)0) != lcd){
  4953   0020BC  5017               	movf	lcd_8bit_intialize@lcd^0,w,c
  4954   0020BE  1018               	iorwf	(lcd_8bit_intialize@lcd+1)^0,w,c
  4955   0020C0  B4D8               	btfsc	status,2,c
  4956   0020C2  EF65  F010         	goto	u1651
  4957   0020C6  EF67  F010         	goto	u1650
  4958   0020CA                     u1651:
  4959   0020CA  EFEA  F010         	goto	l2435
  4960   0020CE                     u1650:
  4961   0020CE  C017  F00B         	movff	lcd_8bit_intialize@lcd,gpio_pin_intialize@_pin_config
  4962   0020D2  C018  F00C         	movff	lcd_8bit_intialize@lcd+1,gpio_pin_intialize@_pin_config+1
  4963   0020D6  EC3E  F014         	call	_gpio_pin_intialize	;wreg free
  4964   0020DA  0E01               	movlw	1
  4965   0020DC  2417               	addwf	lcd_8bit_intialize@lcd^0,w,c
  4966   0020DE  6E0B               	movwf	gpio_pin_intialize@_pin_config^0,c
  4967   0020E0  0E00               	movlw	0
  4968   0020E2  2018               	addwfc	(lcd_8bit_intialize@lcd+1)^0,w,c
  4969   0020E4  6E0C               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4970   0020E6  EC3E  F014         	call	_gpio_pin_intialize	;wreg free
  4971                           
  4972                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 27:         for(uint8 pin = 0 ; pin < 8 ; pin++){
  4973   0020EA  0E00               	movlw	0
  4974   0020EC  6E1B               	movwf	lcd_8bit_intialize@pin^0,c
  4975   0020EE                     l2407:
  4976   0020EE  501B               	movf	lcd_8bit_intialize@pin^0,w,c
  4977   0020F0  2417               	addwf	lcd_8bit_intialize@lcd^0,w,c
  4978   0020F2  6E19               	movwf	??_lcd_8bit_intialize^0,c
  4979   0020F4  0E00               	movlw	0
  4980   0020F6  2018               	addwfc	(lcd_8bit_intialize@lcd+1)^0,w,c
  4981   0020F8  6E1A               	movwf	(??_lcd_8bit_intialize+1)^0,c
  4982   0020FA  0E02               	movlw	2
  4983   0020FC  2419               	addwf	??_lcd_8bit_intialize^0,w,c
  4984   0020FE  6E0B               	movwf	gpio_pin_intialize@_pin_config^0,c
  4985   002100  0E00               	movlw	0
  4986   002102  201A               	addwfc	(??_lcd_8bit_intialize+1)^0,w,c
  4987   002104  6E0C               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  4988   002106  EC3E  F014         	call	_gpio_pin_intialize	;wreg free
  4989   00210A                     
  4990                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 29:         }
  4991   00210A  2A1B               	incf	lcd_8bit_intialize@pin^0,f,c
  4992   00210C  0E07               	movlw	7
  4993   00210E  641B               	cpfsgt	lcd_8bit_intialize@pin^0,c
  4994   002110  EF8C  F010         	goto	u1661
  4995   002114  EF8E  F010         	goto	u1660
  4996   002118                     u1661:
  4997   002118  EF77  F010         	goto	l2407
  4998   00211C                     u1660:
  4999   00211C                     
  5000                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 30:         _delay((unsigned long)((20)*(4000000/400
      +                          0.0)));
  5001   00211C  0E1A               	movlw	26
  5002   00211E  6E19               	movwf	??_lcd_8bit_intialize^0,c
  5003   002120  0EF8               	movlw	248
  5004   002122                     u2307:
  5005   002122  2EE8               	decfsz	wreg,f,c
  5006   002124  D7FE               	bra	u2307
  5007   002126  2E19               	decfsz	??_lcd_8bit_intialize^0,f,c
  5008   002128  D7FC               	bra	u2307
  5009   00212A  D000               	nop2	
  5010   00212C  C017  F00E         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  5011   002130  C018  F00F         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  5012   002134  0E38               	movlw	56
  5013   002136  6E10               	movwf	lcd_8bit_send_command@command^0,c
  5014   002138  EC82  F013         	call	_lcd_8bit_send_command	;wreg free
  5015   00213C                     
  5016                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 32:         _delay((unsigned long)((5)*(4000000/4000
      +                          .0)));
  5017   00213C  0E07               	movlw	7
  5018   00213E  6E19               	movwf	??_lcd_8bit_intialize^0,c
  5019   002140  0E7D               	movlw	125
  5020   002142                     u2317:
  5021   002142  2EE8               	decfsz	wreg,f,c
  5022   002144  D7FE               	bra	u2317
  5023   002146  2E19               	decfsz	??_lcd_8bit_intialize^0,f,c
  5024   002148  D7FC               	bra	u2317
  5025   00214A  F000               	nop	
  5026   00214C  C017  F00E         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  5027   002150  C018  F00F         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  5028   002154  0E38               	movlw	56
  5029   002156  6E10               	movwf	lcd_8bit_send_command@command^0,c
  5030   002158  EC82  F013         	call	_lcd_8bit_send_command	;wreg free
  5031   00215C                     
  5032                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 34:         _delay((unsigned long)((150)*(4000000/40
      +                          00000.0)));
  5033   00215C  0E32               	movlw	50
  5034   00215E                     u2327:
  5035   00215E  2EE8               	decfsz	wreg,f,c
  5036   002160  D7FE               	bra	u2327
  5037   002162  C017  F00E         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  5038   002166  C018  F00F         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  5039   00216A  0E38               	movlw	56
  5040   00216C  6E10               	movwf	lcd_8bit_send_command@command^0,c
  5041   00216E  EC82  F013         	call	_lcd_8bit_send_command	;wreg free
  5042   002172  C017  F00E         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  5043   002176  C018  F00F         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  5044   00217A  0E01               	movlw	1
  5045   00217C  6E10               	movwf	lcd_8bit_send_command@command^0,c
  5046   00217E  EC82  F013         	call	_lcd_8bit_send_command	;wreg free
  5047   002182  C017  F00E         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  5048   002186  C018  F00F         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  5049   00218A  0E02               	movlw	2
  5050   00218C  6E10               	movwf	lcd_8bit_send_command@command^0,c
  5051   00218E  EC82  F013         	call	_lcd_8bit_send_command	;wreg free
  5052   002192  C017  F00E         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  5053   002196  C018  F00F         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  5054   00219A  0E06               	movlw	6
  5055   00219C  6E10               	movwf	lcd_8bit_send_command@command^0,c
  5056   00219E  EC82  F013         	call	_lcd_8bit_send_command	;wreg free
  5057   0021A2  C017  F00E         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  5058   0021A6  C018  F00F         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  5059   0021AA  0E0C               	movlw	12
  5060   0021AC  6E10               	movwf	lcd_8bit_send_command@command^0,c
  5061   0021AE  EC82  F013         	call	_lcd_8bit_send_command	;wreg free
  5062   0021B2  C017  F00E         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  5063   0021B6  C018  F00F         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  5064   0021BA  0E38               	movlw	56
  5065   0021BC  6E10               	movwf	lcd_8bit_send_command@command^0,c
  5066   0021BE  EC82  F013         	call	_lcd_8bit_send_command	;wreg free
  5067   0021C2                     
  5068                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 42:         ret = lcd_8bit_send_command(lcd, 0x80);
  5069   0021C2  C017  F00E         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  5070   0021C6  C018  F00F         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  5071   0021CA  0E80               	movlw	128
  5072   0021CC  6E10               	movwf	lcd_8bit_send_command@command^0,c
  5073   0021CE  EC82  F013         	call	_lcd_8bit_send_command	;wreg free
  5074   0021D2  6E1C               	movwf	lcd_8bit_intialize@ret^0,c
  5075   0021D4                     l2435:
  5076                           
  5077                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 44:     return ret;
  5078   0021D4  501C               	movf	lcd_8bit_intialize@ret^0,w,c
  5079   0021D6  0012               	return		;funcret
  5080   0021D8                     __end_of_lcd_8bit_intialize:
  5081                           	callstack 0
  5082                           
  5083 ;; *************** function _lcd_8bit_send_command *****************
  5084 ;; Defined at:
  5085 ;;		line 55 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  lcd             2   13[COMRAM] PTR const struct .
  5088 ;;		 -> lcd(10), 
  5089 ;;  command         1   15[COMRAM] unsigned char 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  line_data_pi    1   21[COMRAM] unsigned char 
  5092 ;;  ret             1   20[COMRAM] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      unsigned char 
  5095 ;; Registers used:
  5096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5102 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;Total ram usage:        9 bytes
  5107 ;; Hardware stack levels used: 1
  5108 ;; Hardware stack levels required when called: 2
  5109 ;; This function calls:
  5110 ;;		_gpio_pin_write_logic
  5111 ;;		_send_8bit_enable_signal
  5112 ;; This function is called by:
  5113 ;;		_lcd_8bit_intialize
  5114 ;;		_lcd_8bit_set_cursor
  5115 ;;		_main
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text29
  5120   002704                     __ptext29:
  5121                           	callstack 0
  5122   002704                     _lcd_8bit_send_command:
  5123                           	callstack 26
  5124   002704                     
  5125                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 56:     Std_ReturnType ret = (Std_ReturnType)0x00;
  5126   002704  0E00               	movlw	0
  5127   002706  6E15               	movwf	lcd_8bit_send_command@ret^0,c
  5128   002708                     
  5129                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 57:     if(((void*)0) != lcd){
  5130   002708  500E               	movf	lcd_8bit_send_command@lcd^0,w,c
  5131   00270A  100F               	iorwf	(lcd_8bit_send_command@lcd+1)^0,w,c
  5132   00270C  B4D8               	btfsc	status,2,c
  5133   00270E  EF8B  F013         	goto	u1591
  5134   002712  EF8D  F013         	goto	u1590
  5135   002716                     u1591:
  5136   002716  EFC4  F013         	goto	l2323
  5137   00271A                     u1590:
  5138   00271A  C00E  F001         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config
  5139   00271E  C00F  F002         	movff	lcd_8bit_send_command@lcd+1,gpio_pin_write_logic@_pin_config+1
  5140   002722  0E00               	movlw	0
  5141   002724  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  5142   002726  ECC6  F00F         	call	_gpio_pin_write_logic	;wreg free
  5143   00272A                     
  5144                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 60:         for(uint8 line_data_pin = 0 ; line_data_
      +                          pin < 8 ; line_data_pin++){
  5145   00272A  0E00               	movlw	0
  5146   00272C  6E16               	movwf	lcd_8bit_send_command@line_data_pin^0,c
  5147   00272E                     l2315:
  5148   00272E  5016               	movf	lcd_8bit_send_command@line_data_pin^0,w,c
  5149   002730  240E               	addwf	lcd_8bit_send_command@lcd^0,w,c
  5150   002732  6E11               	movwf	??_lcd_8bit_send_command^0,c
  5151   002734  0E00               	movlw	0
  5152   002736  200F               	addwfc	(lcd_8bit_send_command@lcd+1)^0,w,c
  5153   002738  6E12               	movwf	(??_lcd_8bit_send_command+1)^0,c
  5154   00273A  0E02               	movlw	2
  5155   00273C  2411               	addwf	??_lcd_8bit_send_command^0,w,c
  5156   00273E  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5157   002740  0E00               	movlw	0
  5158   002742  2012               	addwfc	(??_lcd_8bit_send_command+1)^0,w,c
  5159   002744  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  5160   002746  C016  F013         	movff	lcd_8bit_send_command@line_data_pin,??_lcd_8bit_send_command+2
  5161   00274A  C010  F014         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+3
  5162   00274E  2A13               	incf	(??_lcd_8bit_send_command+2)^0,f,c
  5163   002750  EFAC  F013         	goto	u1604
  5164   002754                     u1605:
  5165   002754  90D8               	bcf	status,0,c
  5166   002756  3214               	rrcf	(??_lcd_8bit_send_command+3)^0,f,c
  5167   002758                     u1604:
  5168   002758  2E13               	decfsz	(??_lcd_8bit_send_command+2)^0,f,c
  5169   00275A  EFAA  F013         	goto	u1605
  5170   00275E  5014               	movf	(??_lcd_8bit_send_command+3)^0,w,c
  5171   002760  0B01               	andlw	1
  5172   002762  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  5173   002764  ECC6  F00F         	call	_gpio_pin_write_logic	;wreg free
  5174   002768                     
  5175                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 62:         }
  5176   002768  2A16               	incf	lcd_8bit_send_command@line_data_pin^0,f,c
  5177   00276A  0E07               	movlw	7
  5178   00276C  6416               	cpfsgt	lcd_8bit_send_command@line_data_pin^0,c
  5179   00276E  EFBB  F013         	goto	u1611
  5180   002772  EFBD  F013         	goto	u1610
  5181   002776                     u1611:
  5182   002776  EF97  F013         	goto	l2315
  5183   00277A                     u1610:
  5184   00277A                     
  5185                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 63:         ret = send_8bit_enable_signal(lcd);
  5186   00277A  C00E  F00B         	movff	lcd_8bit_send_command@lcd,send_8bit_enable_signal@lcd
  5187   00277E  C00F  F00C         	movff	lcd_8bit_send_command@lcd+1,send_8bit_enable_signal@lcd+1
  5188   002782  EC8D  F015         	call	_send_8bit_enable_signal	;wreg free
  5189   002786  6E15               	movwf	lcd_8bit_send_command@ret^0,c
  5190   002788                     l2323:
  5191                           
  5192                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 65:     return ret;
  5193   002788  5015               	movf	lcd_8bit_send_command@ret^0,w,c
  5194   00278A  0012               	return		;funcret
  5195   00278C                     __end_of_lcd_8bit_send_command:
  5196                           	callstack 0
  5197                           
  5198 ;; *************** function _send_8bit_enable_signal *****************
  5199 ;; Defined at:
  5200 ;;		line 155 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  lcd             2   10[COMRAM] PTR const struct .
  5203 ;;		 -> lcd(10), 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  ret             1   12[COMRAM] unsigned char 
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      unsigned char 
  5208 ;; Registers used:
  5209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;Total ram usage:        3 bytes
  5220 ;; Hardware stack levels used: 1
  5221 ;; Hardware stack levels required when called: 1
  5222 ;; This function calls:
  5223 ;;		_gpio_pin_write_logic
  5224 ;; This function is called by:
  5225 ;;		_lcd_8bit_send_command
  5226 ;;		_lcd_8bit_send_char
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text30
  5231   002B1A                     __ptext30:
  5232                           	callstack 0
  5233   002B1A                     _send_8bit_enable_signal:
  5234                           	callstack 26
  5235   002B1A                     
  5236                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 156:     Std_ReturnType ret = (Std_ReturnType)0x00;
  5237   002B1A  0E00               	movlw	0
  5238   002B1C  6E0D               	movwf	send_8bit_enable_signal@ret^0,c
  5239   002B1E                     
  5240                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 157:     if(((void*)0) != lcd){
  5241   002B1E  500B               	movf	send_8bit_enable_signal@lcd^0,w,c
  5242   002B20  100C               	iorwf	(send_8bit_enable_signal@lcd+1)^0,w,c
  5243   002B22  B4D8               	btfsc	status,2,c
  5244   002B24  EF96  F015         	goto	u1401
  5245   002B28  EF98  F015         	goto	u1400
  5246   002B2C                     u1401:
  5247   002B2C  EFB0  F015         	goto	l51
  5248   002B30                     u1400:
  5249   002B30  0E01               	movlw	1
  5250   002B32  240B               	addwf	send_8bit_enable_signal@lcd^0,w,c
  5251   002B34  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5252   002B36  0E00               	movlw	0
  5253   002B38  200C               	addwfc	(send_8bit_enable_signal@lcd+1)^0,w,c
  5254   002B3A  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  5255   002B3C  0E01               	movlw	1
  5256   002B3E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  5257   002B40  ECC6  F00F         	call	_gpio_pin_write_logic	;wreg free
  5258   002B44                     
  5259                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 160:         _delay((unsigned long)((5)*(4000000/400
      +                          0000.0)));
  5260   002B44  D000               	nop2		;2 cycle nop
  5261   002B46  D000               	nop2		;2 cycle nop
  5262   002B48  F000               	nop	
  5263   002B4A                     
  5264                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 161:         ret = gpio_pin_write_logic(&(lcd->lcd_e
      +                          nable), GPIO_LOW);
  5265   002B4A  0E01               	movlw	1
  5266   002B4C  240B               	addwf	send_8bit_enable_signal@lcd^0,w,c
  5267   002B4E  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  5268   002B50  0E00               	movlw	0
  5269   002B52  200C               	addwfc	(send_8bit_enable_signal@lcd+1)^0,w,c
  5270   002B54  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  5271   002B56  0E00               	movlw	0
  5272   002B58  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  5273   002B5A  ECC6  F00F         	call	_gpio_pin_write_logic	;wreg free
  5274   002B5E  6E0D               	movwf	send_8bit_enable_signal@ret^0,c
  5275   002B60                     l51:
  5276                           
  5277                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 163:     return ret;
  5278   002B60  500D               	movf	send_8bit_enable_signal@ret^0,w,c
  5279   002B62  0012               	return		;funcret
  5280   002B64                     __end_of_send_8bit_enable_signal:
  5281                           	callstack 0
  5282                           
  5283 ;; *************** function _keypad_intialize *****************
  5284 ;; Defined at:
  5285 ;;		line 24 in file "ECU_Layer/Keypad/ecu_keypad.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  keypad          2   14[COMRAM] PTR const struct .
  5288 ;;		 -> keypad(8), 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  col_counter     2   21[COMRAM] int 
  5291 ;;  rows_counter    2   19[COMRAM] int 
  5292 ;;  ret             1   18[COMRAM] unsigned char 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  1    wreg      unsigned char 
  5295 ;; Registers used:
  5296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;Total ram usage:        9 bytes
  5307 ;; Hardware stack levels used: 1
  5308 ;; Hardware stack levels required when called: 2
  5309 ;; This function calls:
  5310 ;;		_gpio_pin_direction_intialize
  5311 ;;		_gpio_pin_intialize
  5312 ;; This function is called by:
  5313 ;;		_ecu_layer_intialize
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text31
  5318   0025E4                     __ptext31:
  5319                           	callstack 0
  5320   0025E4                     _keypad_intialize:
  5321                           	callstack 26
  5322   0025E4                     
  5323                           ;ECU_Layer/Keypad/ecu_keypad.c: 25:     Std_ReturnType ret = (Std_ReturnType)0x00;
  5324   0025E4  0E00               	movlw	0
  5325   0025E6  6E13               	movwf	keypad_intialize@ret^0,c
  5326   0025E8                     
  5327                           ;ECU_Layer/Keypad/ecu_keypad.c: 26:     if(((void*)0) != keypad){
  5328   0025E8  500F               	movf	keypad_intialize@keypad^0,w,c
  5329   0025EA  1010               	iorwf	(keypad_intialize@keypad+1)^0,w,c
  5330   0025EC  B4D8               	btfsc	status,2,c
  5331   0025EE  EFFB  F012         	goto	u1701
  5332   0025F2  EFFD  F012         	goto	u1700
  5333   0025F6                     u1701:
  5334   0025F6  EF3C  F013         	goto	l2493
  5335   0025FA                     u1700:
  5336   0025FA                     
  5337                           ;ECU_Layer/Keypad/ecu_keypad.c: 28:         for(int rows_counter = 0 ; rows_counter < 4 
      +                          ; rows_counter++){
  5338   0025FA  0E00               	movlw	0
  5339   0025FC  6E15               	movwf	(keypad_intialize@rows_counter+1)^0,c
  5340   0025FE  0E00               	movlw	0
  5341   002600  6E14               	movwf	keypad_intialize@rows_counter^0,c
  5342   002602                     l2475:
  5343   002602  5014               	movf	keypad_intialize@rows_counter^0,w,c
  5344   002604  240F               	addwf	keypad_intialize@keypad^0,w,c
  5345   002606  6E0B               	movwf	gpio_pin_intialize@_pin_config^0,c
  5346   002608  5015               	movf	(keypad_intialize@rows_counter+1)^0,w,c
  5347   00260A  2010               	addwfc	(keypad_intialize@keypad+1)^0,w,c
  5348   00260C  6E0C               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
  5349   00260E  EC3E  F014         	call	_gpio_pin_intialize	;wreg free
  5350   002612                     
  5351                           ;ECU_Layer/Keypad/ecu_keypad.c: 30:         }
  5352   002612  4A14               	infsnz	keypad_intialize@rows_counter^0,f,c
  5353   002614  2A15               	incf	(keypad_intialize@rows_counter+1)^0,f,c
  5354   002616  BE15               	btfsc	(keypad_intialize@rows_counter+1)^0,7,c
  5355   002618  EF17  F013         	goto	u1711
  5356   00261C  5015               	movf	(keypad_intialize@rows_counter+1)^0,w,c
  5357   00261E  E109               	bnz	u1710
  5358   002620  0E04               	movlw	4
  5359   002622  5C14               	subwf	keypad_intialize@rows_counter^0,w,c
  5360   002624  A0D8               	btfss	status,0,c
  5361   002626  EF17  F013         	goto	u1711
  5362   00262A  EF19  F013         	goto	u1710
  5363   00262E                     u1711:
  5364   00262E  EF01  F013         	goto	l2475
  5365   002632                     u1710:
  5366   002632                     
  5367                           ;ECU_Layer/Keypad/ecu_keypad.c: 31:         for(int col_counter = 0 ; col_counter < 4 ; 
      +                          col_counter++){
  5368   002632  0E00               	movlw	0
  5369   002634  6E17               	movwf	(keypad_intialize@col_counter+1)^0,c
  5370   002636  0E00               	movlw	0
  5371   002638  6E16               	movwf	keypad_intialize@col_counter^0,c
  5372   00263A                     l2487:
  5373                           
  5374                           ;ECU_Layer/Keypad/ecu_keypad.c: 32:             ret = gpio_pin_direction_intialize(&(key
      +                          pad->keypad_coloumns_pins[col_counter]));
  5375   00263A  5016               	movf	keypad_intialize@col_counter^0,w,c
  5376   00263C  240F               	addwf	keypad_intialize@keypad^0,w,c
  5377   00263E  6E11               	movwf	??_keypad_intialize^0,c
  5378   002640  5017               	movf	(keypad_intialize@col_counter+1)^0,w,c
  5379   002642  2010               	addwfc	(keypad_intialize@keypad+1)^0,w,c
  5380   002644  6E12               	movwf	(??_keypad_intialize+1)^0,c
  5381   002646  0E04               	movlw	4
  5382   002648  2411               	addwf	??_keypad_intialize^0,w,c
  5383   00264A  6E01               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
  5384   00264C  0E00               	movlw	0
  5385   00264E  2012               	addwfc	(??_keypad_intialize+1)^0,w,c
  5386   002650  6E02               	movwf	(gpio_pin_direction_intialize@_pin_config+1)^0,c
  5387   002652  EC24  F00F         	call	_gpio_pin_direction_intialize	;wreg free
  5388   002656  6E13               	movwf	keypad_intialize@ret^0,c
  5389   002658                     
  5390                           ;ECU_Layer/Keypad/ecu_keypad.c: 33:         }
  5391   002658  4A16               	infsnz	keypad_intialize@col_counter^0,f,c
  5392   00265A  2A17               	incf	(keypad_intialize@col_counter+1)^0,f,c
  5393   00265C  BE17               	btfsc	(keypad_intialize@col_counter+1)^0,7,c
  5394   00265E  EF3A  F013         	goto	u1721
  5395   002662  5017               	movf	(keypad_intialize@col_counter+1)^0,w,c
  5396   002664  E109               	bnz	u1720
  5397   002666  0E04               	movlw	4
  5398   002668  5C16               	subwf	keypad_intialize@col_counter^0,w,c
  5399   00266A  A0D8               	btfss	status,0,c
  5400   00266C  EF3A  F013         	goto	u1721
  5401   002670  EF3C  F013         	goto	u1720
  5402   002674                     u1721:
  5403   002674  EF1D  F013         	goto	l2487
  5404   002678                     u1720:
  5405   002678                     l2493:
  5406                           
  5407                           ;ECU_Layer/Keypad/ecu_keypad.c: 35:     return ret;
  5408   002678  5013               	movf	keypad_intialize@ret^0,w,c
  5409   00267A  0012               	return		;funcret
  5410   00267C                     __end_of_keypad_intialize:
  5411                           	callstack 0
  5412                           
  5413 ;; *************** function _gpio_pin_intialize *****************
  5414 ;; Defined at:
  5415 ;;		line 93 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  _pin_config     2   10[COMRAM] PTR const struct .
  5418 ;;		 -> lcd.data_lines(8), lcd(10), keypad.keypad_rows_pins(4), keypad(8), 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  ret             1   13[COMRAM] unsigned char 
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  1    wreg      unsigned char 
  5423 ;; Registers used:
  5424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5432 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;Total ram usage:        4 bytes
  5435 ;; Hardware stack levels used: 1
  5436 ;; Hardware stack levels required when called: 1
  5437 ;; This function calls:
  5438 ;;		_gpio_pin_direction_intialize
  5439 ;;		_gpio_pin_write_logic
  5440 ;; This function is called by:
  5441 ;;		_lcd_8bit_intialize
  5442 ;;		_keypad_intialize
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text32
  5447   00287C                     __ptext32:
  5448                           	callstack 0
  5449   00287C                     _gpio_pin_intialize:
  5450                           	callstack 26
  5451   00287C                     
  5452                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:     if(_pin_config == ((void*)0) || _pin_config->pin > 
      +                          8 -1){
  5453   00287C  500B               	movf	gpio_pin_intialize@_pin_config^0,w,c
  5454   00287E  100C               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
  5455   002880  B4D8               	btfsc	status,2,c
  5456   002882  EF45  F014         	goto	u1571
  5457   002886  EF47  F014         	goto	u1570
  5458   00288A                     u1571:
  5459   00288A  EF58  F014         	goto	l2293
  5460   00288E                     u1570:
  5461   00288E  C00B  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  5462   002892  C00C  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  5463   002896  30DF               	rrcf	223,w,c
  5464   002898  32E8               	rrcf	wreg,f,c
  5465   00289A  32E8               	rrcf	wreg,f,c
  5466   00289C  0B07               	andlw	7
  5467   00289E  6E0D               	movwf	??_gpio_pin_intialize^0,c
  5468   0028A0  0E07               	movlw	7
  5469   0028A2  640D               	cpfsgt	??_gpio_pin_intialize^0,c
  5470   0028A4  EF56  F014         	goto	u1581
  5471   0028A8  EF58  F014         	goto	u1580
  5472   0028AC                     u1581:
  5473   0028AC  EF5C  F014         	goto	l2295
  5474   0028B0                     u1580:
  5475   0028B0                     l2293:
  5476                           
  5477                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:         ret = (Std_ReturnType)0x00;
  5478   0028B0  0E00               	movlw	0
  5479   0028B2  6E0E               	movwf	gpio_pin_intialize@ret^0,c
  5480                           
  5481                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:     }
  5482   0028B4  EF72  F014         	goto	l2297
  5483   0028B8                     l2295:
  5484                           
  5485                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:         ret = gpio_pin_direction_intialize(_pin_config)
      +                          ;
  5486   0028B8  C00B  F001         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
  5487   0028BC  C00C  F002         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
  5488   0028C0  EC24  F00F         	call	_gpio_pin_direction_intialize	;wreg free
  5489   0028C4  6E0E               	movwf	gpio_pin_intialize@ret^0,c
  5490                           
  5491                           ;MCAL_Layer/GPIO/hal_gpio.c: 100:         ret = gpio_pin_write_logic(_pin_config,_pin_co
      +                          nfig->logic);
  5492   0028C6  C00B  F001         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  5493   0028CA  C00C  F002         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  5494   0028CE  C00B  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
  5495   0028D2  C00C  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
  5496   0028D6  0E00               	movlw	0
  5497   0028D8  BEDF               	btfsc	indf2,7,c
  5498   0028DA  0E01               	movlw	1
  5499   0028DC  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  5500   0028DE  ECC6  F00F         	call	_gpio_pin_write_logic	;wreg free
  5501   0028E2  6E0E               	movwf	gpio_pin_intialize@ret^0,c
  5502   0028E4                     l2297:
  5503                           
  5504                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:     return ret;
  5505   0028E4  500E               	movf	gpio_pin_intialize@ret^0,w,c
  5506   0028E6  0012               	return		;funcret
  5507   0028E8                     __end_of_gpio_pin_intialize:
  5508                           	callstack 0
  5509                           
  5510 ;; *************** function _gpio_pin_write_logic *****************
  5511 ;; Defined at:
  5512 ;;		line 48 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  5515 ;;		 -> lcd.data_lines(8), lcd(10), keypad.keypad_rows_pins(4), keypad(8), 
  5516 ;;  logic           1    2[COMRAM] enum E2965
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;  ret             1    9[COMRAM] unsigned char 
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      unsigned char 
  5521 ;; Registers used:
  5522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5528 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5530 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5531 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5532 ;;Total ram usage:       10 bytes
  5533 ;; Hardware stack levels used: 1
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_lcd_8bit_send_command
  5538 ;;		_lcd_8bit_send_char
  5539 ;;		_send_8bit_enable_signal
  5540 ;;		_keypad_get_value
  5541 ;;		_gpio_pin_intialize
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text33
  5546   001F8C                     __ptext33:
  5547                           	callstack 0
  5548   001F8C                     _gpio_pin_write_logic:
  5549                           	callstack 26
  5550   001F8C                     
  5551                           ;MCAL_Layer/GPIO/hal_gpio.c: 49:     Std_ReturnType ret = (Std_ReturnType)0x01;
  5552   001F8C  0E01               	movlw	1
  5553   001F8E  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  5554   001F90                     
  5555                           ;MCAL_Layer/GPIO/hal_gpio.c: 50:     if(_pin_config == ((void*)0) || _pin_config->pin > 
      +                          8 -1){
  5556   001F90  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  5557   001F92  1002               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  5558   001F94  B4D8               	btfsc	status,2,c
  5559   001F96  EFCF  F00F         	goto	u1201
  5560   001F9A  EFD1  F00F         	goto	u1200
  5561   001F9E                     u1201:
  5562   001F9E  EFE2  F00F         	goto	l2081
  5563   001FA2                     u1200:
  5564   001FA2  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5565   001FA6  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5566   001FAA  30DF               	rrcf	223,w,c
  5567   001FAC  32E8               	rrcf	wreg,f,c
  5568   001FAE  32E8               	rrcf	wreg,f,c
  5569   001FB0  0B07               	andlw	7
  5570   001FB2  6E04               	movwf	??_gpio_pin_write_logic^0,c
  5571   001FB4  0E07               	movlw	7
  5572   001FB6  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
  5573   001FB8  EFE0  F00F         	goto	u1211
  5574   001FBC  EFE2  F00F         	goto	u1210
  5575   001FC0                     u1211:
  5576   001FC0  EF45  F010         	goto	l2089
  5577   001FC4                     u1210:
  5578   001FC4                     l2081:
  5579                           
  5580                           ;MCAL_Layer/GPIO/hal_gpio.c: 51:         ret = (Std_ReturnType)0x00;
  5581   001FC4  0E00               	movlw	0
  5582   001FC6  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
  5583                           
  5584                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:     }
  5585   001FC8  EF5A  F010         	goto	l2091
  5586   001FCC                     l2083:
  5587                           
  5588                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8) 1 << _pin_config->pin));
  5589   001FCC  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5590   001FD0  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5591   001FD4  30DF               	rrcf	223,w,c
  5592   001FD6  32E8               	rrcf	wreg,f,c
  5593   001FD8  32E8               	rrcf	wreg,f,c
  5594   001FDA  0B07               	andlw	7
  5595   001FDC  6E04               	movwf	??_gpio_pin_write_logic^0,c
  5596   001FDE  0E01               	movlw	1
  5597   001FE0  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5598   001FE2  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  5599   001FE4  EFF6  F00F         	goto	u1224
  5600   001FE8                     u1225:
  5601   001FE8  90D8               	bcf	status,0,c
  5602   001FEA  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5603   001FEC                     u1224:
  5604   001FEC  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  5605   001FEE  EFF4  F00F         	goto	u1225
  5606   001FF2  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5607   001FF4  0AFF               	xorlw	255
  5608   001FF6  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5609   001FF8  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5610   001FFC  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5611   002000  50DF               	movf	223,w,c
  5612   002002  0B07               	andlw	7
  5613   002004  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
  5614   002006  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  5615   002008  0D02               	mullw	2
  5616   00200A  0EBA               	movlw	low _lat_registers
  5617   00200C  24F3               	addwf	243,w,c
  5618   00200E  6ED9               	movwf	fsr2l,c
  5619   002010  0E00               	movlw	high _lat_registers
  5620   002012  20F4               	addwfc	prodh,w,c
  5621   002014  6EDA               	movwf	fsr2h,c
  5622   002016  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
  5623   00201A  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
  5624   00201E  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  5625   002022  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  5626   002026  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5627   002028  16DF               	andwf	indf2,f,c
  5628                           
  5629                           ;MCAL_Layer/GPIO/hal_gpio.c: 57:                 break;
  5630   00202A  EF5A  F010         	goto	l2091
  5631   00202E                     l2085:
  5632                           
  5633                           ;MCAL_Layer/GPIO/hal_gpio.c: 59:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8) 1 << _pin_config->pin));
  5634   00202E  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5635   002032  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5636   002036  30DF               	rrcf	223,w,c
  5637   002038  32E8               	rrcf	wreg,f,c
  5638   00203A  32E8               	rrcf	wreg,f,c
  5639   00203C  0B07               	andlw	7
  5640   00203E  6E04               	movwf	??_gpio_pin_write_logic^0,c
  5641   002040  0E01               	movlw	1
  5642   002042  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5643   002044  2A04               	incf	??_gpio_pin_write_logic^0,f,c
  5644   002046  EF27  F010         	goto	u1234
  5645   00204A                     u1235:
  5646   00204A  90D8               	bcf	status,0,c
  5647   00204C  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5648   00204E                     u1234:
  5649   00204E  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
  5650   002050  EF25  F010         	goto	u1235
  5651   002054  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  5652   002058  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  5653   00205C  50DF               	movf	223,w,c
  5654   00205E  0B07               	andlw	7
  5655   002060  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5656   002062  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5657   002064  0D02               	mullw	2
  5658   002066  0EBA               	movlw	low _lat_registers
  5659   002068  24F3               	addwf	243,w,c
  5660   00206A  6ED9               	movwf	fsr2l,c
  5661   00206C  0E00               	movlw	high _lat_registers
  5662   00206E  20F4               	addwfc	prodh,w,c
  5663   002070  6EDA               	movwf	fsr2h,c
  5664   002072  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
  5665   002076  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
  5666   00207A  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  5667   00207E  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  5668   002082  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5669   002084  12DF               	iorwf	indf2,f,c
  5670                           
  5671                           ;MCAL_Layer/GPIO/hal_gpio.c: 60:                 break;
  5672   002086  EF5A  F010         	goto	l2091
  5673   00208A                     l2089:
  5674   00208A  5003               	movf	gpio_pin_write_logic@logic^0,w,c
  5675   00208C  6E04               	movwf	??_gpio_pin_write_logic^0,c
  5676   00208E  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
  5677                           
  5678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5679                           ; Switch size 1, requested type "simple"
  5680                           ; Number of cases is 1, Range of values is 0 to 0
  5681                           ; switch strategies available:
  5682                           ; Name         Instructions Cycles
  5683                           ; simple_byte            4     3 (average)
  5684                           ;	Chosen strategy is simple_byte
  5685   002090  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5686   002092  0A00               	xorlw	0	; case 0
  5687   002094  B4D8               	btfsc	status,2,c
  5688   002096  EF4F  F010         	goto	l3075
  5689   00209A  EFE2  F00F         	goto	l2081
  5690   00209E                     l3075:
  5691                           
  5692                           ; Switch size 1, requested type "simple"
  5693                           ; Number of cases is 2, Range of values is 0 to 1
  5694                           ; switch strategies available:
  5695                           ; Name         Instructions Cycles
  5696                           ; simple_byte            7     4 (average)
  5697                           ;	Chosen strategy is simple_byte
  5698   00209E  5004               	movf	??_gpio_pin_write_logic^0,w,c
  5699   0020A0  0A00               	xorlw	0	; case 0
  5700   0020A2  B4D8               	btfsc	status,2,c
  5701   0020A4  EFE6  F00F         	goto	l2083
  5702   0020A8  0A01               	xorlw	1	; case 1
  5703   0020AA  B4D8               	btfsc	status,2,c
  5704   0020AC  EF17  F010         	goto	l2085
  5705   0020B0  EFE2  F00F         	goto	l2081
  5706   0020B4                     l2091:
  5707                           
  5708                           ;MCAL_Layer/GPIO/hal_gpio.c: 64:     return ret;
  5709   0020B4  500A               	movf	gpio_pin_write_logic@ret^0,w,c
  5710   0020B6  0012               	return		;funcret
  5711   0020B8                     __end_of_gpio_pin_write_logic:
  5712                           	callstack 0
  5713                           
  5714 ;; *************** function _gpio_pin_direction_intialize *****************
  5715 ;; Defined at:
  5716 ;;		line 21 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  5719 ;;		 -> lcd.data_lines(8), lcd(10), keypad.keypad_coloumns_pins(4), keypad.keypad_rows_pins(4), 
  5720 ;;		 -> keypad(8), 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  ret             1    8[COMRAM] unsigned char 
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  1    wreg      unsigned char 
  5725 ;; Registers used:
  5726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5735 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;Total ram usage:        9 bytes
  5737 ;; Hardware stack levels used: 1
  5738 ;; This function calls:
  5739 ;;		Nothing
  5740 ;; This function is called by:
  5741 ;;		_keypad_intialize
  5742 ;;		_gpio_pin_intialize
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text34
  5747   001E48                     __ptext34:
  5748                           	callstack 0
  5749   001E48                     _gpio_pin_direction_intialize:
  5750                           	callstack 26
  5751   001E48                     
  5752                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:     Std_ReturnType ret = (Std_ReturnType)0x01;
  5753   001E48  0E01               	movlw	1
  5754   001E4A  6E09               	movwf	gpio_pin_direction_intialize@ret^0,c
  5755   001E4C                     
  5756                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     if(_pin_config == ((void*)0) || _pin_config->pin > 
      +                          8 -1){
  5757   001E4C  5001               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  5758   001E4E  1002               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
  5759   001E50  B4D8               	btfsc	status,2,c
  5760   001E52  EF2D  F00F         	goto	u1411
  5761   001E56  EF2F  F00F         	goto	u1410
  5762   001E5A                     u1411:
  5763   001E5A  EF40  F00F         	goto	l2217
  5764   001E5E                     u1410:
  5765   001E5E  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5766   001E62  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5767   001E66  30DF               	rrcf	223,w,c
  5768   001E68  32E8               	rrcf	wreg,f,c
  5769   001E6A  32E8               	rrcf	wreg,f,c
  5770   001E6C  0B07               	andlw	7
  5771   001E6E  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  5772   001E70  0E07               	movlw	7
  5773   001E72  6403               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  5774   001E74  EF3E  F00F         	goto	u1421
  5775   001E78  EF40  F00F         	goto	u1420
  5776   001E7C                     u1421:
  5777   001E7C  EFA3  F00F         	goto	l2225
  5778   001E80                     u1420:
  5779   001E80                     l2217:
  5780                           
  5781                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:         ret = (Std_ReturnType)0x00;
  5782   001E80  0E00               	movlw	0
  5783   001E82  6E09               	movwf	gpio_pin_direction_intialize@ret^0,c
  5784                           
  5785                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     }
  5786   001E84  EFC4  F00F         	goto	l2227
  5787   001E88                     l2219:
  5788                           
  5789                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  5790   001E88  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5791   001E8C  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5792   001E90  30DF               	rrcf	223,w,c
  5793   001E92  32E8               	rrcf	wreg,f,c
  5794   001E94  32E8               	rrcf	wreg,f,c
  5795   001E96  0B07               	andlw	7
  5796   001E98  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  5797   001E9A  0E01               	movlw	1
  5798   001E9C  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5799   001E9E  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  5800   001EA0  EF54  F00F         	goto	u1434
  5801   001EA4                     u1435:
  5802   001EA4  90D8               	bcf	status,0,c
  5803   001EA6  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5804   001EA8                     u1434:
  5805   001EA8  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5806   001EAA  EF52  F00F         	goto	u1435
  5807   001EAE  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5808   001EB0  0AFF               	xorlw	255
  5809   001EB2  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5810   001EB4  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5811   001EB8  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5812   001EBC  50DF               	movf	223,w,c
  5813   001EBE  0B07               	andlw	7
  5814   001EC0  6E06               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  5815   001EC2  5006               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  5816   001EC4  0D02               	mullw	2
  5817   001EC6  0EC4               	movlw	low _tris_registers
  5818   001EC8  24F3               	addwf	243,w,c
  5819   001ECA  6ED9               	movwf	fsr2l,c
  5820   001ECC  0E00               	movlw	high _tris_registers
  5821   001ECE  20F4               	addwfc	prodh,w,c
  5822   001ED0  6EDA               	movwf	fsr2h,c
  5823   001ED2  CFDE F007          	movff	postinc2,??_gpio_pin_direction_intialize+4
  5824   001ED6  CFDD F008          	movff	postdec2,??_gpio_pin_direction_intialize+5
  5825   001EDA  C007  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  5826   001EDE  C008  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  5827   001EE2  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5828   001EE4  16DF               	andwf	indf2,f,c
  5829                           
  5830                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:                 break;
  5831   001EE6  EFC4  F00F         	goto	l2227
  5832   001EEA                     l2221:
  5833                           
  5834                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  5835   001EEA  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5836   001EEE  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5837   001EF2  30DF               	rrcf	223,w,c
  5838   001EF4  32E8               	rrcf	wreg,f,c
  5839   001EF6  32E8               	rrcf	wreg,f,c
  5840   001EF8  0B07               	andlw	7
  5841   001EFA  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  5842   001EFC  0E01               	movlw	1
  5843   001EFE  6E04               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  5844   001F00  2A03               	incf	??_gpio_pin_direction_intialize^0,f,c
  5845   001F02  EF85  F00F         	goto	u1444
  5846   001F06                     u1445:
  5847   001F06  90D8               	bcf	status,0,c
  5848   001F08  3604               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  5849   001F0A                     u1444:
  5850   001F0A  2E03               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  5851   001F0C  EF83  F00F         	goto	u1445
  5852   001F10  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5853   001F14  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5854   001F18  50DF               	movf	223,w,c
  5855   001F1A  0B07               	andlw	7
  5856   001F1C  6E05               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  5857   001F1E  5005               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  5858   001F20  0D02               	mullw	2
  5859   001F22  0EC4               	movlw	low _tris_registers
  5860   001F24  24F3               	addwf	243,w,c
  5861   001F26  6ED9               	movwf	fsr2l,c
  5862   001F28  0E00               	movlw	high _tris_registers
  5863   001F2A  20F4               	addwfc	prodh,w,c
  5864   001F2C  6EDA               	movwf	fsr2h,c
  5865   001F2E  CFDE F006          	movff	postinc2,??_gpio_pin_direction_intialize+3
  5866   001F32  CFDD F007          	movff	postdec2,??_gpio_pin_direction_intialize+4
  5867   001F36  C006  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  5868   001F3A  C007  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  5869   001F3E  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5870   001F40  12DF               	iorwf	indf2,f,c
  5871                           
  5872                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 break;
  5873   001F42  EFC4  F00F         	goto	l2227
  5874   001F46                     l2225:
  5875   001F46  C001  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  5876   001F4A  C002  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  5877   001F4E  BCDF               	btfsc	indf2,6,c
  5878   001F50  EFAC  F00F         	goto	u1451
  5879   001F54  EFAF  F00F         	goto	u1450
  5880   001F58                     u1451:
  5881   001F58  0E01               	movlw	1
  5882   001F5A  EFB0  F00F         	goto	u1460
  5883   001F5E                     u1450:
  5884   001F5E  0E00               	movlw	0
  5885   001F60                     u1460:
  5886   001F60  6E03               	movwf	??_gpio_pin_direction_intialize^0,c
  5887   001F62  6A04               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  5888                           
  5889                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5890                           ; Switch size 1, requested type "simple"
  5891                           ; Number of cases is 1, Range of values is 0 to 0
  5892                           ; switch strategies available:
  5893                           ; Name         Instructions Cycles
  5894                           ; simple_byte            4     3 (average)
  5895                           ;	Chosen strategy is simple_byte
  5896   001F64  5004               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  5897   001F66  0A00               	xorlw	0	; case 0
  5898   001F68  B4D8               	btfsc	status,2,c
  5899   001F6A  EFB9  F00F         	goto	l3077
  5900   001F6E  EF40  F00F         	goto	l2217
  5901   001F72                     l3077:
  5902                           
  5903                           ; Switch size 1, requested type "simple"
  5904                           ; Number of cases is 2, Range of values is 0 to 1
  5905                           ; switch strategies available:
  5906                           ; Name         Instructions Cycles
  5907                           ; simple_byte            7     4 (average)
  5908                           ;	Chosen strategy is simple_byte
  5909   001F72  5003               	movf	??_gpio_pin_direction_intialize^0,w,c
  5910   001F74  0A00               	xorlw	0	; case 0
  5911   001F76  B4D8               	btfsc	status,2,c
  5912   001F78  EF44  F00F         	goto	l2219
  5913   001F7C  0A01               	xorlw	1	; case 1
  5914   001F7E  B4D8               	btfsc	status,2,c
  5915   001F80  EF75  F00F         	goto	l2221
  5916   001F84  EF40  F00F         	goto	l2217
  5917   001F88                     l2227:
  5918                           
  5919                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:     return ret;
  5920   001F88  5009               	movf	gpio_pin_direction_intialize@ret^0,w,c
  5921   001F8A  0012               	return		;funcret
  5922   001F8C                     __end_of_gpio_pin_direction_intialize:
  5923                           	callstack 0
  5924                           
  5925 ;; *************** function ___aldiv *****************
  5926 ;; Defined at:
  5927 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  dividend        4    0[COMRAM] long 
  5930 ;;  divisor         4    4[COMRAM] long 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  quotient        4   10[COMRAM] long 
  5933 ;;  sign            1    9[COMRAM] unsigned char 
  5934 ;;  counter         1    8[COMRAM] unsigned char 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  4    0[COMRAM] long 
  5937 ;; Registers used:
  5938 ;;		wreg, status,2, status,0
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5944 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;Total ram usage:       14 bytes
  5949 ;; Hardware stack levels used: 1
  5950 ;; This function calls:
  5951 ;;		Nothing
  5952 ;; This function is called by:
  5953 ;;		_main
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           	psect	text35
  5958   0021D8                     __ptext35:
  5959                           	callstack 0
  5960   0021D8                     ___aldiv:
  5961                           	callstack 30
  5962   0021D8  0E00               	movlw	0
  5963   0021DA  6E0A               	movwf	___aldiv@sign^0,c
  5964   0021DC  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  5965   0021DE  EFF5  F010         	goto	u2090
  5966   0021E2  EFF3  F010         	goto	u2091
  5967   0021E6                     u2091:
  5968   0021E6  EFFF  F010         	goto	l2785
  5969   0021EA                     u2090:
  5970   0021EA  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  5971   0021EC  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  5972   0021EE  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  5973   0021F0  6C05               	negf	___aldiv@divisor^0,c
  5974   0021F2  0E00               	movlw	0
  5975   0021F4  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  5976   0021F6  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  5977   0021F8  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  5978   0021FA  0E01               	movlw	1
  5979   0021FC  6E0A               	movwf	___aldiv@sign^0,c
  5980   0021FE                     l2785:
  5981   0021FE  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  5982   002200  EF06  F011         	goto	u2100
  5983   002204  EF04  F011         	goto	u2101
  5984   002208                     u2101:
  5985   002208  EF10  F011         	goto	l2791
  5986   00220C                     u2100:
  5987   00220C  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  5988   00220E  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  5989   002210  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  5990   002212  6C01               	negf	___aldiv@dividend^0,c
  5991   002214  0E00               	movlw	0
  5992   002216  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  5993   002218  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  5994   00221A  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  5995   00221C  0E01               	movlw	1
  5996   00221E  1A0A               	xorwf	___aldiv@sign^0,f,c
  5997   002220                     l2791:
  5998   002220  0E00               	movlw	0
  5999   002222  6E0B               	movwf	___aldiv@quotient^0,c
  6000   002224  0E00               	movlw	0
  6001   002226  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  6002   002228  0E00               	movlw	0
  6003   00222A  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  6004   00222C  0E00               	movlw	0
  6005   00222E  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  6006   002230  5005               	movf	___aldiv@divisor^0,w,c
  6007   002232  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  6008   002234  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  6009   002236  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  6010   002238  B4D8               	btfsc	status,2,c
  6011   00223A  EF21  F011         	goto	u2111
  6012   00223E  EF23  F011         	goto	u2110
  6013   002242                     u2111:
  6014   002242  EF59  F011         	goto	l2813
  6015   002246                     u2110:
  6016   002246  0E01               	movlw	1
  6017   002248  6E09               	movwf	___aldiv@counter^0,c
  6018   00224A  EF2D  F011         	goto	l2799
  6019   00224E                     l2797:
  6020   00224E  90D8               	bcf	status,0,c
  6021   002250  3605               	rlcf	___aldiv@divisor^0,f,c
  6022   002252  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  6023   002254  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  6024   002256  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  6025   002258  2A09               	incf	___aldiv@counter^0,f,c
  6026   00225A                     l2799:
  6027   00225A  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  6028   00225C  EF32  F011         	goto	u2121
  6029   002260  EF34  F011         	goto	u2120
  6030   002264                     u2121:
  6031   002264  EF27  F011         	goto	l2797
  6032   002268                     u2120:
  6033   002268                     l2801:
  6034   002268  90D8               	bcf	status,0,c
  6035   00226A  360B               	rlcf	___aldiv@quotient^0,f,c
  6036   00226C  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  6037   00226E  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  6038   002270  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  6039   002272  5005               	movf	___aldiv@divisor^0,w,c
  6040   002274  5C01               	subwf	___aldiv@dividend^0,w,c
  6041   002276  5006               	movf	(___aldiv@divisor+1)^0,w,c
  6042   002278  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  6043   00227A  5007               	movf	(___aldiv@divisor+2)^0,w,c
  6044   00227C  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  6045   00227E  5008               	movf	(___aldiv@divisor+3)^0,w,c
  6046   002280  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  6047   002282  A0D8               	btfss	status,0,c
  6048   002284  EF46  F011         	goto	u2131
  6049   002288  EF48  F011         	goto	u2130
  6050   00228C                     u2131:
  6051   00228C  EF51  F011         	goto	l2809
  6052   002290                     u2130:
  6053   002290  5005               	movf	___aldiv@divisor^0,w,c
  6054   002292  5E01               	subwf	___aldiv@dividend^0,f,c
  6055   002294  5006               	movf	(___aldiv@divisor+1)^0,w,c
  6056   002296  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  6057   002298  5007               	movf	(___aldiv@divisor+2)^0,w,c
  6058   00229A  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  6059   00229C  5008               	movf	(___aldiv@divisor+3)^0,w,c
  6060   00229E  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  6061   0022A0  800B               	bsf	___aldiv@quotient^0,0,c
  6062   0022A2                     l2809:
  6063   0022A2  90D8               	bcf	status,0,c
  6064   0022A4  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  6065   0022A6  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  6066   0022A8  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  6067   0022AA  3205               	rrcf	___aldiv@divisor^0,f,c
  6068   0022AC  2E09               	decfsz	___aldiv@counter^0,f,c
  6069   0022AE  EF34  F011         	goto	l2801
  6070   0022B2                     l2813:
  6071   0022B2  500A               	movf	___aldiv@sign^0,w,c
  6072   0022B4  B4D8               	btfsc	status,2,c
  6073   0022B6  EF5F  F011         	goto	u2141
  6074   0022BA  EF61  F011         	goto	u2140
  6075   0022BE                     u2141:
  6076   0022BE  EF69  F011         	goto	l2817
  6077   0022C2                     u2140:
  6078   0022C2  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  6079   0022C4  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  6080   0022C6  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  6081   0022C8  6C0B               	negf	___aldiv@quotient^0,c
  6082   0022CA  0E00               	movlw	0
  6083   0022CC  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  6084   0022CE  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  6085   0022D0  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  6086   0022D2                     l2817:
  6087   0022D2  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  6088   0022D6  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  6089   0022DA  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  6090   0022DE  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  6091   0022E2  0012               	return		;funcret
  6092   0022E4                     __end_of___aldiv:
  6093                           	callstack 0
  6094                           
  6095                           	psect	rparam
  6096   000000                     
  6097                           	psect	idloc
  6098                           
  6099                           ;Config register IDLOC0 @ 0x200000
  6100                           ;	unspecified, using default values
  6101   200000                     	org	2097152
  6102   200000  FF                 	db	255
  6103                           
  6104                           ;Config register IDLOC1 @ 0x200001
  6105                           ;	unspecified, using default values
  6106   200001                     	org	2097153
  6107   200001  FF                 	db	255
  6108                           
  6109                           ;Config register IDLOC2 @ 0x200002
  6110                           ;	unspecified, using default values
  6111   200002                     	org	2097154
  6112   200002  FF                 	db	255
  6113                           
  6114                           ;Config register IDLOC3 @ 0x200003
  6115                           ;	unspecified, using default values
  6116   200003                     	org	2097155
  6117   200003  FF                 	db	255
  6118                           
  6119                           ;Config register IDLOC4 @ 0x200004
  6120                           ;	unspecified, using default values
  6121   200004                     	org	2097156
  6122   200004  FF                 	db	255
  6123                           
  6124                           ;Config register IDLOC5 @ 0x200005
  6125                           ;	unspecified, using default values
  6126   200005                     	org	2097157
  6127   200005  FF                 	db	255
  6128                           
  6129                           ;Config register IDLOC6 @ 0x200006
  6130                           ;	unspecified, using default values
  6131   200006                     	org	2097158
  6132   200006  FF                 	db	255
  6133                           
  6134                           ;Config register IDLOC7 @ 0x200007
  6135                           ;	unspecified, using default values
  6136   200007                     	org	2097159
  6137   200007  FF                 	db	255
  6138                           
  6139                           	psect	config
  6140                           
  6141                           ; Padding undefined space
  6142   300000                     	org	3145728
  6143   300000  FF                 	db	255
  6144                           
  6145                           ;Config register CONFIG1H @ 0x300001
  6146                           ;	unspecified, using default values
  6147                           ;	Oscillator Selection bits
  6148                           ;	OSC = 0x7, unprogrammed default
  6149                           ;	Fail-Safe Clock Monitor Enable bit
  6150                           ;	FCMEN = 0x0, unprogrammed default
  6151                           ;	Internal/External Oscillator Switchover bit
  6152                           ;	IESO = 0x0, unprogrammed default
  6153   300001                     	org	3145729
  6154   300001  07                 	db	7
  6155                           
  6156                           ;Config register CONFIG2L @ 0x300002
  6157                           ;	unspecified, using default values
  6158                           ;	Power-up Timer Enable bit
  6159                           ;	PWRT = 0x1, unprogrammed default
  6160                           ;	Brown-out Reset Enable bits
  6161                           ;	BOREN = 0x3, unprogrammed default
  6162                           ;	Brown Out Reset Voltage bits
  6163                           ;	BORV = 0x3, unprogrammed default
  6164   300002                     	org	3145730
  6165   300002  1F                 	db	31
  6166                           
  6167                           ;Config register CONFIG2H @ 0x300003
  6168                           ;	unspecified, using default values
  6169                           ;	Watchdog Timer Enable bit
  6170                           ;	WDT = 0x1, unprogrammed default
  6171                           ;	Watchdog Timer Postscale Select bits
  6172                           ;	WDTPS = 0xF, unprogrammed default
  6173   300003                     	org	3145731
  6174   300003  1F                 	db	31
  6175                           
  6176                           ; Padding undefined space
  6177   300004                     	org	3145732
  6178   300004  FF                 	db	255
  6179                           
  6180                           ;Config register CONFIG3H @ 0x300005
  6181                           ;	unspecified, using default values
  6182                           ;	CCP2 MUX bit
  6183                           ;	CCP2MX = 0x1, unprogrammed default
  6184                           ;	PORTB A/D Enable bit
  6185                           ;	PBADEN = 0x1, unprogrammed default
  6186                           ;	Low-Power Timer1 Oscillator Enable bit
  6187                           ;	LPT1OSC = 0x0, unprogrammed default
  6188                           ;	MCLR Pin Enable bit
  6189                           ;	MCLRE = 0x1, unprogrammed default
  6190   300005                     	org	3145733
  6191   300005  83                 	db	131
  6192                           
  6193                           ;Config register CONFIG4L @ 0x300006
  6194                           ;	unspecified, using default values
  6195                           ;	Stack Full/Underflow Reset Enable bit
  6196                           ;	STVREN = 0x1, unprogrammed default
  6197                           ;	Single-Supply ICSP Enable bit
  6198                           ;	LVP = 0x1, unprogrammed default
  6199                           ;	Extended Instruction Set Enable bit
  6200                           ;	XINST = 0x0, unprogrammed default
  6201                           ;	Background Debugger Enable bit
  6202                           ;	DEBUG = 0x1, unprogrammed default
  6203   300006                     	org	3145734
  6204   300006  85                 	db	133
  6205                           
  6206                           ; Padding undefined space
  6207   300007                     	org	3145735
  6208   300007  FF                 	db	255
  6209                           
  6210                           ;Config register CONFIG5L @ 0x300008
  6211                           ;	unspecified, using default values
  6212                           ;	Code Protection bit
  6213                           ;	CP0 = 0x1, unprogrammed default
  6214                           ;	Code Protection bit
  6215                           ;	CP1 = 0x1, unprogrammed default
  6216                           ;	Code Protection bit
  6217                           ;	CP2 = 0x1, unprogrammed default
  6218                           ;	Code Protection bit
  6219                           ;	CP3 = 0x1, unprogrammed default
  6220   300008                     	org	3145736
  6221   300008  0F                 	db	15
  6222                           
  6223                           ;Config register CONFIG5H @ 0x300009
  6224                           ;	unspecified, using default values
  6225                           ;	Boot Block Code Protection bit
  6226                           ;	CPB = 0x1, unprogrammed default
  6227                           ;	Data EEPROM Code Protection bit
  6228                           ;	CPD = 0x1, unprogrammed default
  6229   300009                     	org	3145737
  6230   300009  C0                 	db	192
  6231                           
  6232                           ;Config register CONFIG6L @ 0x30000A
  6233                           ;	unspecified, using default values
  6234                           ;	Write Protection bit
  6235                           ;	WRT0 = 0x1, unprogrammed default
  6236                           ;	Write Protection bit
  6237                           ;	WRT1 = 0x1, unprogrammed default
  6238                           ;	Write Protection bit
  6239                           ;	WRT2 = 0x1, unprogrammed default
  6240                           ;	Write Protection bit
  6241                           ;	WRT3 = 0x1, unprogrammed default
  6242   30000A                     	org	3145738
  6243   30000A  0F                 	db	15
  6244                           
  6245                           ;Config register CONFIG6H @ 0x30000B
  6246                           ;	unspecified, using default values
  6247                           ;	Configuration Register Write Protection bit
  6248                           ;	WRTC = 0x1, unprogrammed default
  6249                           ;	Boot Block Write Protection bit
  6250                           ;	WRTB = 0x1, unprogrammed default
  6251                           ;	Data EEPROM Write Protection bit
  6252                           ;	WRTD = 0x1, unprogrammed default
  6253   30000B                     	org	3145739
  6254   30000B  E0                 	db	224
  6255                           
  6256                           ;Config register CONFIG7L @ 0x30000C
  6257                           ;	unspecified, using default values
  6258                           ;	Table Read Protection bit
  6259                           ;	EBTR0 = 0x1, unprogrammed default
  6260                           ;	Table Read Protection bit
  6261                           ;	EBTR1 = 0x1, unprogrammed default
  6262                           ;	Table Read Protection bit
  6263                           ;	EBTR2 = 0x1, unprogrammed default
  6264                           ;	Table Read Protection bit
  6265                           ;	EBTR3 = 0x1, unprogrammed default
  6266   30000C                     	org	3145740
  6267   30000C  0F                 	db	15
  6268                           
  6269                           ;Config register CONFIG7H @ 0x30000D
  6270                           ;	unspecified, using default values
  6271                           ;	Boot Block Table Read Protection bit
  6272                           ;	EBTRB = 0x1, unprogrammed default
  6273   30000D                     	org	3145741
  6274   30000D  40                 	db	64
  6275                           tosu	equ	0xFFF
  6276                           tosh	equ	0xFFE
  6277                           tosl	equ	0xFFD
  6278                           stkptr	equ	0xFFC
  6279                           pclatu	equ	0xFFB
  6280                           pclath	equ	0xFFA
  6281                           pcl	equ	0xFF9
  6282                           tblptru	equ	0xFF8
  6283                           tblptrh	equ	0xFF7
  6284                           tblptrl	equ	0xFF6
  6285                           tablat	equ	0xFF5
  6286                           prodh	equ	0xFF4
  6287                           prodl	equ	0xFF3
  6288                           indf0	equ	0xFEF
  6289                           postinc0	equ	0xFEE
  6290                           postdec0	equ	0xFED
  6291                           preinc0	equ	0xFEC
  6292                           plusw0	equ	0xFEB
  6293                           fsr0h	equ	0xFEA
  6294                           fsr0l	equ	0xFE9
  6295                           wreg	equ	0xFE8
  6296                           indf1	equ	0xFE7
  6297                           postinc1	equ	0xFE6
  6298                           postdec1	equ	0xFE5
  6299                           preinc1	equ	0xFE4
  6300                           plusw1	equ	0xFE3
  6301                           fsr1h	equ	0xFE2
  6302                           fsr1l	equ	0xFE1
  6303                           bsr	equ	0xFE0
  6304                           indf2	equ	0xFDF
  6305                           postinc2	equ	0xFDE
  6306                           postdec2	equ	0xFDD
  6307                           preinc2	equ	0xFDC
  6308                           plusw2	equ	0xFDB
  6309                           fsr2h	equ	0xFDA
  6310                           fsr2l	equ	0xFD9
  6311                           status	equ	0xFD8

Data Sizes:
    Strings     4
    Constant    16
    Data        49
    BSS         77
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    124     126
    BANK0           128     58     123
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S926$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> main@result_text(BANK0[11]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S873$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S873$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 11
		 -> main@result_text(BANK0[11]), 

    memset@s	PTR unsigned char  size(2) Largest target is 11
		 -> main@result_text(BANK0[11]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 9
		 -> main@second_num_text(BANK0[9]), main@first_num_text(BANK0[9]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd.data_lines(BANK0[8]), lcd(BANK0[10]), keypad.keypad_rows_pins(BANK0[4]), keypad(BANK0[8]), 

    gpio_pin_read_logic@logic	PTR enum E2965 size(2) Largest target is 1
		 -> keypad_get_value@logic(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad.keypad_coloumns_pins(BANK0[4]), keypad(BANK0[8]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd.data_lines(BANK0[8]), lcd(BANK0[10]), keypad.keypad_rows_pins(BANK0[4]), keypad(BANK0[8]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd.data_lines(BANK0[8]), lcd(BANK0[10]), keypad.keypad_coloumns_pins(BANK0[4]), keypad.keypad_rows_pins(BANK0[4]), 
		 -> keypad(BANK0[8]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    keypad_get_value@value	PTR unsigned char  size(2) Largest target is 1
		 -> keypad_read_value@new_value(COMRAM[1]), keypad_read_value@current_value(COMRAM[1]), 

    keypad_get_value@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad(BANK0[8]), 

    keypad_intialize@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad(BANK0[8]), 

    sp__memset	PTR void  size(2) Largest target is 11
		 -> main@result_text(BANK0[11]), 

    lcd_convert_int_to_string@str	PTR unsigned char  size(2) Largest target is 11
		 -> main@result_text(BANK0[11]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 

    send_8bit_enable_signal@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 

    lcd_8bit_send_string_pos@string	PTR unsigned char  size(2) Largest target is 11
		 -> main@result_text(BANK0[11]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 

    lcd_8bit_send_string@string	PTR unsigned char  size(2) Largest target is 11
		 -> main@result_text(BANK0[11]), 

    lcd_8bit_send_string@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 

    lcd_8bit_send_char_pos@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 

    lcd_8bit_send_char@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 

    lcd_8bit_intialize@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_lcd_convert_int_to_string
    _lcd_convert_int_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_send_string->_lcd_8bit_send_char
    _lcd_8bit_send_char_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char->_send_8bit_enable_signal
    _keypad_read_value->_keypad_get_value
    _keypad_get_value->_gpio_pin_read_logic
    _keypad_get_value->_gpio_pin_write_logic
    _atol->___lmul
    _application_intialize->_ecu_layer_intialize
    _ecu_layer_intialize->_lcd_8bit_intialize
    _lcd_8bit_intialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_send_8bit_enable_signal
    _send_8bit_enable_signal->_gpio_pin_write_logic
    _keypad_intialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    _main->_lcd_convert_int_to_string

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0   50752
                                            123 COMRAM     1     1      0
                                              6 BANK0     52    52      0
                            ___aldiv
                             ___lmul
              _application_intialize
                               _atol
                  _keypad_read_value
             _lcd_8bit_send_char_pos
              _lcd_8bit_send_command
           _lcd_8bit_send_string_pos
          _lcd_convert_int_to_string
 ---------------------------------------------------------------------------------
 (1) _lcd_convert_int_to_string                            7     1      6    6876
                                            122 COMRAM     1     1      0
                                              0 BANK0      6     0      6
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8    5665
                                            101 COMRAM    21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5312
                                             93 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           35    29      6    4962
                                             62 COMRAM    31    25      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6     947
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             7     1      6   10664
                                             29 COMRAM     7     1      6
               _lcd_8bit_send_string
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 5     1      4    4155
                                             22 COMRAM     5     1      4
                 _lcd_8bit_send_char
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_char_pos                               6     1      5   10986
                                             29 COMRAM     6     1      5
                 _lcd_8bit_send_char
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  7     3      4    6047
                                             22 COMRAM     7     3      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char                                   9     6      3    3869
                                             13 COMRAM     9     6      3
               _gpio_pin_write_logic
            _send_8bit_enable_signal
 ---------------------------------------------------------------------------------
 (1) _keypad_read_value                                    3     3      0    2702
                                             20 COMRAM     3     3      0
                   _keypad_get_value
 ---------------------------------------------------------------------------------
 (2) _keypad_get_value                                    10     6      4    2566
                                             10 COMRAM    10     6      4
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_read_logic                                 10     6      4     308
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _atol                                                15    11      4    1291
                                             12 COMRAM    15    11      4
                             ___lmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (2) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              4     2      2     161
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     522
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0   11151
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0   11151
                                             28 COMRAM     1     1      0
                   _keypad_intialize
                 _lcd_8bit_intialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_intialize                                   6     4      2    8173
                                             22 COMRAM     6     4      2
                 _gpio_pin_intialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                9     6      3    5389
                                             13 COMRAM     9     6      3
               _gpio_pin_write_logic
            _send_8bit_enable_signal
 ---------------------------------------------------------------------------------
 (4) _send_8bit_enable_signal                              3     1      2    1791
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _keypad_intialize                                     9     7      2    2953
                                             14 COMRAM     9     7      2
       _gpio_pin_direction_intialize
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   4     2      2    2318
                                             10 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    1547
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         9     7      2     331
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
   ___lmul
   _application_intialize
     _ecu_layer_intialize
       _keypad_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
       _lcd_8bit_intialize
         _gpio_pin_intialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _send_8bit_enable_signal
             _gpio_pin_write_logic
   _atol
     ___lmul
     _isdigit
     _isspace
   _keypad_read_value
     _keypad_get_value
       _gpio_pin_read_logic
       _gpio_pin_write_logic
   _lcd_8bit_send_char_pos
     _lcd_8bit_send_char
       _gpio_pin_write_logic
       _send_8bit_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command
   _lcd_8bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char
     _lcd_8bit_set_cursor
   _lcd_convert_int_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     3A      7B       5       96.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7C      7E       1       99.2%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     135      39        0.0%
DATA                 0      0     135       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jul 25 15:39:55 2023

             __end_of_lcd_8bit_send_char 2704                                       l22 21D6  
                                     l34 2702                                       l51 2B60  
                                     l52 2B62                                       l28 278A  
                                     l44 2A1C                                       l61 25E2  
                                     l37 2CAE                                       l38 2CB0  
                                     l47 2C2E                                       l48 2C30  
                                     l65 2A7C                                       l83 267A  
                                     l92 23C6                      _lcd_output_char_col 00F9  
                                    l103 2D20                                      l151 1F8A  
                                    l170 2548                                      l218 137C  
                                    l163 20B6                                      l252 2D32  
                                    l271 2940                                      l272 2950  
                                    l256 29B8                                      l177 28E6  
                                    l339 22E2                                      l374 1B6C  
                                    l387 1E46                                      l953 19D4  
                                    l956 19E4                                      l974 1CE2  
                                    l959 2CDC                                      l967 2BA8  
                                    l987 2ACA                                      _abs 2C32  
                                    _lcd 00CE                                      _pad 278C  
                                    _ret 007E                                      prod 000FF3  
              ?_lcd_8bit_send_string_pos 001E                                      wreg 000FE8  
            __end_of_lcd_8bit_set_cursor 25E4                                     l1020 1418  
                                   l1013 2804                                     l1021 145E  
                                   l1032 1600                                     l1009 27AE  
                                   l1018 1410             __end_of_lcd_8bit_send_string 2A1E  
                                   ?_abs 0013                                     l2101 19EA  
                                   l1062 2C70                                     l2111 1A4A  
                                   l2103 19F8                                     l1055 2B18  
                                   l2201 2B30                                     l2121 1A94  
                                   l2113 1A4E                                     l2105 1A18  
                                   l1049 1852                                     l1074 2490  
                                   l1082 2BEC                                     l2211 1E48  
                                   l2203 2B30                                     l2131 1B04  
                                   l2123 1AA2                                     l2115 1A5A  
                                   l2107 1A1C                                     l1059 2C68  
                                   l2221 1EEA                                     l2213 1E4C  
                                   l2205 2B44                                     l2301 2704  
                                   l2133 1B16                                     l2125 1AB4  
                                   l2117 1A78                                     l2109 1A2A  
                                   l1085 2D34                                     l2061 2414  
                                   l2053 23C8                                     l2215 1E5E  
                                   l2207 2B4A                                     l2303 2708  
                                   l2127 1AE2                                     l2119 1A80  
                                   l2135 1B1C                                     l2151 1D1A  
                                   l2143 1CE4                                     l2063 244A  
                                   l2055 23DA                                     l2071 2BC8  
                                   l2225 1F46                                     l2217 1E80  
                                   l2081 1FC4                                     l2321 277A  
                                   l2305 271A                                     l2401 20DA  
                                   l2137 1B2C                                     l2129 1B02  
                                   l2161 1D82                                     l2153 1D28  
                                   l2145 1CE8                                     l2057 23EC  
                                   l2073 2BCC                                     l2241 13C8  
                                   l2219 1E88                                     l2227 1F88  
                                   l2083 1FCC                                     l2091 20B4  
                                   l2075 1F8C                                     l2315 272E  
                                   l2307 271A                                     l2323 2788  
                                   l2411 210C                                     l2139 1B4C  
                                   l2163 1D90                                     l2171 1DF6  
                                   l2155 1D48                                     l2147 1CF6  
                                   l2059 23F6                                     l2067 2BAA  
                                   l2251 1436                                     l2243 13E8  
                                   l2235 1384                                     l2331 1634  
                                   l2085 202E                                     l2077 1F90  
                                   l2317 2768                                     l2309 272A  
                                   l2421 2162                                     l2413 211C  
                                   l2501 24A8                                     l2173 1E06  
                                   l2165 1DBE                                     l2157 1D66  
                                   l2149 1D16                                     l2069 2BB6  
                                   l2181 279A                                     l2261 1470  
                                   l2253 1446                                     l2245 1404  
                                   l2237 13A4                                     l2341 1670  
                                   l2333 1642                                     l2079 1FA2  
                                   l2319 276A                                     l2431 21B2  
                                   l2423 2172                                     l2415 212C  
                                   l2407 20EE                                     l2503 24BA  
                                   l3071 25CA                                     l2175 1E26  
                                   l2167 1DDE                                     l2159 1D6E  
                                   l2191 27F0                                     l2183 27A6  
                                   l2263 1476                                     l2271 1568  
                                   l2255 1452                                     l2247 1420  
                                   l2239 13B8                                     l2351 16CE  
                                   l2343 1678                                     l2335 1646  
                                   l2327 1602                                     l2089 208A  
                                   l2433 21C2                                     l2425 2182  
                                   l2417 213C                                     l2409 210A  
                                   l3073 18EC                                     l2505 24DC  
                                   l2441 2680                                     l2169 1DF0  
                                   l2193 2C32                                     l2185 27BA  
                                   l2281 15D0                                     l2273 1582  
                                   l2265 14F8                                     l2257 145A  
                                   l2249 1430                                     l2361 17CC  
                                   l2353 16EE                                     l2337 1656  
                                   l2329 1626                                     l2513 2ACC  
                                   l2601 2A96                                     l3075 209E  
                                   l2291 288E                                     l2427 2192  
                                   l2419 215C                                     l2435 21D4  
                                   l2507 24E4                                     l2611 22E8  
                                   l2443 2692                                     l2531 2580  
                                   l2523 254A                                     l2099 19E6  
                                   l2195 2C4C                                     l2187 27CE  
                                   l2179 278C                                     l2283 15E0  
                                   l2275 15A0                                     l2267 14FE  
                                   l2259 1466                                     l2363 17E8  
                                   l2355 172C                                     l3067 1694  
                                   l2339 1668                                     l2347 1680  
                                   l2371 182A                                     l2515 2AD8  
                                   l2603 2A9E                                     l3077 1F72  
                                   l2293 28B0                                     l2197 2B1A  
                                   l2429 21A2                                     l2509 2546  
                                   l2621 2310                                     l2613 22FA  
                                   l2453 26A6                                     l2445 2692  
                                   l2461 2700                                     l2533 2586  
                                   l2541 25E0                                     l2525 254E  
                                   l2701 2C04                                     l2189 27D2  
                                   l2277 15BA                                     l2269 1504  
                                   l3069 17B6                                     l2349 16B2  
                                   l2517 2AF4                                     l2605 2ABA  
                                   l2295 28B8                                     l2287 287C  
                                   l2199 2B1E                                     l2631 234C  
                                   l2623 2324                                     l2615 230C  
                                   l2455 26E0                                     l2447 26A2  
                                   l2439 267C                                     l2535 259E  
                                   l2527 2560                                     l2551 29BE  
                                   l2703 2C18                                     l2279 15CA  
                                   l2367 1818                                     l2359 17A2  
                                   l2519 2B10                                     l2711 2A36  
                                   l2801 2268                                     l2297 28E4  
                                   l2289 287C                                     l2481 2632  
                                   l2465 25E4                                     l2393 20B8  
                                   l2721 2D2C                                     l2641 23B2  
                                   l2633 235C                                     l2609 22E4  
                                   l2457 26E2                                     l2529 2570  
                                   l2553 29D0                                     l2561 2A1A  
                                   l2713 2A3A                                     l2811 22AC  
                                   l2803 2272                                     l2491 265C  
                                   l2475 2602                                     l2467 25E8  
                                   l2395 20BC                                     l2651 2D04  
                                   l2643 23B4                                     l2635 238A  
                                   l2723 2952                                     l2459 26F2  
                                   l2539 25B6                                     l2555 29E2  
                                   l2571 1B98                                     l2715 2A56  
                                   l2707 2A1E                                     l2805 2290  
                                   l2813 22B2                                     l2477 2612  
                                   l2469 25FA                                     l2493 2678  
                                   l2397 20CE                                     l2653 2D10  
                                   l2661 2906                                     l2637 238C  
                                   l2629 2328                                     l2645 23C4  
                                   l2733 298E                                     l2725 2968  
                                   l2557 29E6                                     l2549 29BA  
                                   l2581 1C40                                     l2565 1B6E  
                                   l2717 2A7A                                     l2709 2A22  
                                   l2901 134C                                     l2821 1016  
                                   l2815 22C2                                     l2807 22A0  
                                   l2487 263A                                     l2479 2616  
                                   l2399 20CE                                     l2663 2916  
                                   l2671 2B7C                                     l2751 1874  
                                   l2639 239C                                     l2735 29A4  
                                   l2727 2978                                     l2559 29FE  
                                   l2591 1CC6                                     l2583 1C6C  
                                   l2575 1BCE                                     l2903 135C  
                                   l2831 104C                                     l2823 101A  
                                   l2817 22D2                                     l2809 22A2  
                                   l2489 2658                                     l2649 2D04  
                                   l2665 2920                                     l2657 28E8  
                                   l2673 2B9E                                     l2761 1902  
                                   l2753 188E                                     l2745 1854  
                                   l2497 2492                                     l2737 29B6  
                                   l2729 2988                                     l2593 1CCC  
                                   l2577 1C26                                     l2569 1B8C  
                                   l2905 135E                                     l2841 1098  
                                   l2833 1054                                     l2825 1022  
                                   l2659 28F8                                     l2675 2BA2  
                                   l2667 2B64                                     l2771 199E  
                                   l2755 18C0                                     l2747 1870  
                                   l2499 2496                                     l2691 2C9C  
                                   l2683 2C72                                     l2595 1CD0  
                                   l2587 1C86                                     l2851 10C4  
                                   l2843 1098                                     l2835 1066  
                                   l2827 1034                                     l2781 21EA  
                                   l2669 2B68                                     l2757 18C8  
                                   l2685 2C76                                     l2589 1CBA  
                                   l2597 2A7E                                     l2861 114C  
                                   l2853 10E2                                     l2845 109C  
                                   l2837 1080                                     l2829 1046  
                                   ?_pad 0011                                     l2791 2220  
                                   l2783 21FA                                     l2679 2CB2  
                                   l2767 195E                                     l2759 18D0  
                                   l2687 2C88                                     l2695 2BEE  
                                   l2599 2A8E                                     l2871 11BE  
                                   l2863 1154                                     l2855 1100  
                                   l2847 10A6                                     l2839 108C  
                                   l2793 2230                                     l2785 21FE  
                                   l2777 21D8                                     l2769 198C  
                                   l2689 2C88                                     l2697 2BF2  
                                   l2881 1262                                     l2873 11D2  
                                   l2865 1170                                     l2857 111E  
                                   l2849 10C2                                     l2795 2246  
                                   l2787 220C                                     l2779 21DC  
                                   l2699 2C04                                     l2891 12DA  
                                   l2875 11E4                                     l2883 1276  
                                   l2867 1172                                     l2859 113C  
                                   l2797 224E                                     l2789 221C  
                                   l2885 128E                                     l2877 11F6  
                                   l2869 1186                                     l2893 12FC  
                                   l2799 225A                                     l2895 130C  
                                   l2879 122E                                     l2887 12A2  
                                   l2897 131E                                     l2889 12BA  
                                   l2899 133A                                     STR_1 1011  
                                   u1200 1FA2                                     u2000 2C88  
                                   u1201 1F9E                                     u2001 2C84  
                                   u1210 1FC4                                     u2010 2C04  
                                   u1211 1FC0                                     u2011 2C00  
                                   u2100 220C                                     u1300 1B2C  
                                   u2020 2A36                                     u2101 2208  
                                   u1301 1B28                                     u2021 2A32  
                                   u2110 2246                                     u2030 2988  
                                   u1310 1CF6                                     u1150 23DA  
                                   u2111 2242                                     u2031 2984  
                                   u1311 1CF2                                     u1151 23D6  
                                   u2120 2268                                     u1224 1FEC  
                                   u1400 2B30                                     u2040 29B6  
                                   u1240 19F8                                     u1320 1D28  
                                   u1160 23EC                                     u2200 1100  
                                   u2121 2264                                     u1225 1FE8  
                                   u1401 2B2C                                     u2041 29B2  
                                   u1241 19F4                                     u1321 1D24  
                                   u1161 23E8                                     u2201 10FC  
                                   u2130 2290                                     u1410 1E5E  
                                   u1234 204E                                     u2050 188E  
                                   u1250 1A2A                                     u1330 1D66  
                                   u1170 2414                                     u2210 111E  
                                   u2131 228C                                     u1411 1E5A  
                                   u1235 204A                                     u2051 188A  
                                   u1251 1A26                                     u1331 1D62  
                                   u1171 2410                                     u2211 111A  
                                   u2140 22C2                                     u1420 1E80  
                                   u2060 18BC                                     u1340 1D90  
                                   u1180 244A                                     u1500 1404  
                                   u2220 113C                                     u2141 22BE  
                                   u1421 1E7C                                     u2061 18B8  
                                   u1261 1A54                                     u1341 1D8C  
                                   u1181 2446                                     u1501 1400  
                                   u2221 1138                                     _LATA 000F89  
                                   u2070 198C                                     u1270 1A78  
                                   u1350 1DBE                                     u1190 2BEC  
                                   u1510 1430                                     u2230 1186  
                                   u2150 1034                                     _LATB 000F8A  
                                   u2071 1988                                     u1271 1A74  
                                   u1351 1DBA                                     u1191 2BE8  
                                   u1511 142C                                     u2231 1182  
                                   u2151 1030                                     _LATC 000F8B  
                                   u2080 199E                                     u1280 1AA2  
                                   u1360 1E06                                     u1520 1446  
                                   u2240 11D2                                     u2160 1066  
                                   _LATD 000F8C                                     u2081 199A  
                                   u1281 1A9E                                     u1361 1E02  
                                   u1521 1442                                     u2241 11CE  
                                   u2161 1062                                     _LATE 000F8D  
                                   u2090 21EA                                     u1450 1F5E  
                                   u1434 1EA8                                     u1610 277A  
                                   u1290 1AE2                                     u1370 279A  
                                   u1530 1582                                     u2250 11E4  
                                   u2091 21E6                                     u1451 1F58  
                                   u1435 1EA4                                     u1611 2776  
                                   u2307 2122                                     u1291 1ADE  
                                   u1371 2796                                     u1531 157E  
                                   u2251 11E0                                     u2171 1086  
                                   u1460 1F60                                     u1444 1F0A  
                                   u1700 25FA                                     u1604 2758  
                                   u1380 27F0                                     u1540 15A0  
                                   u1620 1626                                     u2260 11F6  
                                   u1445 1F06                                     u1701 25F6  
                                   u1605 2754                                     u2317 2142  
                                   u1381 27EC                                     u1541 159C  
                                   u1621 1622                                     u2261 11F2  
                                   u2181 1092                                     u1710 2632  
                                   u1390 2C4C                                     u1550 15BA  
                                   u1470 13B4                                     u1630 16CE  
                                   u2270 130C                                     u2190 10E2  
                                   u1711 262E                                     u2327 215E  
                                   u1391 2C48                                     u1551 15B6  
                                   u1471 13AE                                     u1631 16CA  
                                   u2271 1308                                     u2191 10DE  
                                   u1720 2678                                     u1800 2580  
                                   u1560 15CA                                     u1480 13B6  
                                   u1640 16EA                                     u2280 131E  
                                   u1721 2674                                     u1801 257C  
                                   u1561 15C6                                     u1641 16E6  
                                   u2281 131A                                     u1570 288E  
                                   u1650 20CE                                     u1730 24A8  
                                   u1810 29D0                                     u1490 13C8  
                                   u1571 288A                                     u1651 20CA  
                                   u1731 24A4                                     u1811 29CC  
                                   u1491 13C4                                     u1580 28B0  
                                   u1660 211C                                     u1740 24BA  
                                   u1900 230C                                     u1820 29E2  
                                   u1581 28AC                                     u1661 2118  
                                   u1741 24B6                                     u1901 2308  
                                   u1821 29DE                                     u1590 271A  
                                   u1750 24DC                                     u1910 235C  
                                   u1670 2692                                     u1830 2A1A  
                                   u1591 2716                                     u1751 24D8  
                                   u1911 2358                                     u1671 268E  
                                   u1831 2A16                                     u1920 239C  
                                   u1840 1B88                                     u1921 2398  
                                   u2297 296E                                     u1841 1B84  
                                   u1930 23C4                                     u1690 26F2  
                                   u1850 1BCA                                     u1770 2B10  
                                   u1931 23C0                                     u1691 26EE  
                                   u1851 1BC6                                     u1771 2B0C  
                                   u1940 2906                                     u1764 2532  
                                   u1684 26D0                                     u1780 2560  
                                   u1860 1C3C                                     u1941 2902  
                                   u1765 252E                                     u1685 26CC  
                                   u1781 255C                                     u1861 1C38  
                                   u1950 2940                                     u1790 2570  
                                   u1870 1C82                                     u1951 293C  
                                   u1791 256C                                     u1871 1C7E  
                                   u1960 2B7C                                     u1880 1CE2  
                                   u1961 2B78                                     u1881 1CDE  
                                   u1970 2B9E                                     u1890 22FA  
                                   u1971 2B9A                                     u1891 22F6  
                                   u1980 2CD6                                     u1981 2CD0  
                                   u1990 2CD8              ??_lcd_convert_int_to_string 007B  
                ??_application_intialize 001E                                     abs@a 0013  
                                   _dbuf 0112           gpio_pin_read_logic@_pin_config 0001  
                                   _atol 1854                                     _main 1016  
                                   _dtoa 1384                                     _prec 00F6  
                                   pad@i 0018                                     pad@p 0015  
                                   fsr1h 000FE2                                     fsr2h 000FDA  
                                   indf1 000FE7                                     indf2 000FDF  
                                   fsr1l 000FE1                                     pad@w 001A  
                                   fsr2l 000FD9                  ?_lcd_8bit_send_char_pos 001E  
                                   prodl 000FF3                                     start 0000  
          __end_of_lcd_8bit_send_command 278C                             ___param_bank 000000  
                                  ??_abs 0015                     _gpio_pin_write_logic 1F8C  
                                  ??_pad 0017                   keypad_get_value@keypad 000B  
                        __end_of___aldiv 22E4                          __end_of___aodiv 1B6E  
                                  ?_atol 000D                                    ?_main 0001  
                                  ?_dtoa 001C                          __end_of___aomod 1E48  
                           vfpfcnvrt@fmt 0041                                    _PORTA 000F80  
                                  _PORTB 000F81                                    _PORTC 000F82  
                                  _PORTD 000F83                                    _PORTE 000F84  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                      ___lmul@multiplicand 0005  
                           main@num1_val 00B1                             main@num2_val 00B5  
               __end_of_keypad_get_value 23C8                                    _flags 007D  
                                  _fputc 23C8                                    _fputs 2BAA  
                        __end_of_isdigit 2CDE                             main@operator 00B0  
                                  pad@fp 0011                                    atol@n 0018  
                                  _width 00F4                                    atol@s 000D  
                                  _putch 2D34                                    dtoa@d 001E  
                                  dtoa@i 003C                                    dtoa@n 0034  
                                  dtoa@p 0030                                    dtoa@s 003E  
                                  dtoa@w 0032                          __end_of_isspace 2BAA  
                                  tablat 000FF5           __end_of_lcd_8bit_send_char_pos 2CB2  
                                  status 000FD8                          __end_of_sprintf 2ACC  
               __end_of_keypad_intialize 267C                          __initialization 2806  
                    keypad_get_value@col 0013                      keypad_get_value@ret 0011  
                           __end_of_atol 19E6                             __end_of_main 1384  
                           __end_of_dtoa 1602                    ?_gpio_pin_write_logic 0001  
              _lcd_convert_int_to_string 2A1E                   lcd_8bit_set_cursor@lcd 0017  
                 lcd_8bit_set_cursor@ret 001D                   lcd_8bit_set_cursor@row 0019  
               gpio_pin_read_logic@logic 0003                            _lat_registers 00BA  
                                 ??_atol 0011                                   ??_main 007C  
                                 ??_dtoa 0026                            __activetblptr 000002  
                                 ?_fputc 0001                                   ?_fputs 000A  
                                 ?_putch 0001                             vfprintf@cfmt 0064  
                                 ___lmul 28E8                                ??___aldiv 0009  
                              ??___aodiv 0011                                ??___aomod 0011  
                   _lcd_8bit_send_string 29BA                                   _keypad 00D8  
                                 _memset 1B6E                                   clear_0 285E  
                                 clear_1 286A                                   isa$std 000001  
                                 pad@buf 0013                                   dtoa@fp 001C  
            lcd_8bit_send_string_pos@lcd 001E              lcd_8bit_send_string_pos@ret 0024  
            lcd_8bit_send_string_pos@row 0020  gpio_pin_direction_intialize@_pin_config 0001  
                                 fputc@c 0001                                   fputs@c 000E  
                                 fputs@i 000F                             __pdataCOMRAM 007E  
                                 fputs@s 000A                                ??_isdigit 0003  
                           __mediumconst 0000                                ??_isspace 0003  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                                   putch@c 0001  
                       __end_of_vfprintf 2B1A                                ??_sprintf 006E  
                    main@second_num_text 0086                               __accesstop 0080  
                __end_of__initialization 2872       lcd_8bit_send_command@line_data_pin 0016  
                          ___rparam_used 000001                   ??_gpio_pin_write_logic 0004  
                         __pcstackCOMRAM 0001                     keypad_get_value@rows 0014  
                           __pidataBANK0 2CDE                             __pidataBANK1 2D22  
                          __end_of_fputc 2492                            __end_of_fputs 2BEE  
                  ?_lcd_8bit_send_string 0017                            __end_of_putch 2D36  
                     _lcd_8bit_intialize 20B8                       _lcd_8bit_send_char 267C  
                    ?_lcd_8bit_intialize 0017                                  ??_fputc 0005  
                                ??_fputs 000E                                  ??_putch 0001  
            keypad_intialize@col_counter 0016                               __pbssBANK0 00E0  
                             __pbssBANK1 0100                      ?_lcd_8bit_send_char 000E  
                             _data_index 00F8            __end_of_application_intialize 2D34  
                   ??_lcd_8bit_intialize 0019                                  ?___lmul 0001  
                                ?_memset 0001                           ___lmul@product 0009  
                   ??_lcd_8bit_send_char 0011                            _keypad_matrix 1001  
                      ?_keypad_get_value 000B                       ??_keypad_get_value 000F  
                         _tris_registers 00C4                                  __Hparam 0000  
                                __Lparam 0000                        ?_keypad_intialize 000F  
                    _ecu_layer_intialize 2D04                  _send_8bit_enable_signal 2B1A  
                 ??_lcd_8bit_send_string 001B                                  ___aldiv 21D8  
                                ___aodiv 19E6                    _lcd_8bit_send_command 2704  
                                ___aomod 1CE4                       ??_keypad_intialize 0011  
                    _gpio_pin_read_logic 2492                                ?_vfprintf 005E  
                           __psmallconst 1000               __end_of_gpio_pin_intialize 28E8  
                                __pcinit 2806                                  __ramtop 1000  
               _lcd_8bit_send_string_pos 2BEE                                  __ptext0 1016  
                                __ptext1 2A1E                                  __ptext2 2A7E  
                                __ptext3 2ACC                                  __ptext4 1602  
                                __ptext5 1384                                  __ptext6 278C  
                                __ptext7 2BAA                                  __ptext8 23C8  
                                __ptext9 2D34                                  _isdigit 2CB2  
                       ___aldiv@dividend 0001                     ?_ecu_layer_intialize 0001  
                                _isspace 2B64           keypad_read_value@current_value 0016  
                                atol@neg 0016        __end_of_lcd_convert_int_to_string 2A7E  
                   ?_gpio_pin_read_logic 0001                                  _sprintf 2A7E  
                   end_of_initialization 2872                                  fputc@fp 0003  
                                memset@c 0003                                  memset@k 0009  
                                memset@n 0005                                  memset@s 000B  
                          __Lmediumconst 0000                                  fputs@fp 000C  
                  gpio_pin_intialize@ret 000E                        __end_of_vfpfcnvrt 1854  
                       ___aldiv@quotient 000B                                  postdec1 000FE5  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc1 000FE6                                  postinc2 000FDE  
                       vfpfcnvrt@convarg 0053                               ??_vfprintf 0064  
           lcd_8bit_send_char_pos@colomn 0021            gpio_pin_intialize@_pin_config 000B  
                  ??_ecu_layer_intialize 001D     __end_of_gpio_pin_direction_intialize 1F8C  
           _gpio_pin_direction_intialize 1E48                    ??_gpio_pin_read_logic 0005  
         lcd_convert_int_to_string@value 0080                ??_send_8bit_enable_signal 000D  
                             main@result 00A3                   ?_lcd_8bit_send_command 000E  
         lcd_8bit_send_string_pos@colomn 0021                    keypad_get_value@logic 0012  
                  keypad_get_value@value 000D               keypad_read_value@new_value 0017  
                         __end_of___lmul 2952                              vfpfcnvrt@ap 0043  
                            vfpfcnvrt@cp 005C                              vfpfcnvrt@fp 003F  
                          __pidataCOMRAM 2D36           lcd_8bit_send_string_pos@string 0022  
                         __end_of_memset 1CE4                      start_initialization 2806  
               ??_lcd_8bit_send_char_pos 0023                              __end_of_abs 2C72  
                            __end_of_pad 2806            ?_gpio_pin_direction_intialize 0001  
             lcd_8bit_send_string@string 0019                      keypad_intialize@ret 0013  
                            vfprintf@fmt 0060                                 ??___lmul 0009  
                            __pdataBANK0 00BA                              __pdataBANK1 0132  
                               ??_memset 0007                      _lcd_8bit_set_cursor 254A  
                             memset@dest 0001                 lcd_8bit_send_command@lcd 000E  
               lcd_8bit_send_command@ret 0015          __end_of_send_8bit_enable_signal 2B64  
                            __pbssCOMRAM 007D                            __pcstackBANK0 0080  
                       ___aodiv@dividend 0001                lcd_8bit_send_char_pos@lcd 001E  
              lcd_8bit_send_char_pos@ret 0023                lcd_8bit_send_char_pos@row 0020  
                   ?_lcd_8bit_set_cursor 0017          gpio_pin_direction_intialize@ret 0009  
                              __pnvBANK0 00FA                   ecu_layer_intialize@ret 001D  
             ??_lcd_8bit_send_string_pos 0024                    _application_intialize 2D2C  
                               ?___aldiv 0001                                 ?___aodiv 0001  
                               ?___aomod 0001          gpio_pin_write_logic@_pin_config 0001  
                       ___aodiv@quotient 0013                gpio_pin_write_logic@logic 0003  
                           _keypad_value 00FA                              __smallconst 1000  
             send_8bit_enable_signal@lcd 000B                                 ?_isdigit 0001  
             send_8bit_enable_signal@ret 000D                                 ?_isspace 0001  
                               ?_sprintf 0066                                _read_data 00E0  
                     _gpio_pin_intialize 287C                    ??_lcd_8bit_set_cursor 001B  
                        ___aldiv@divisor 0005           ??_gpio_pin_direction_intialize 0003  
                        ___aldiv@counter 0009                      ?_gpio_pin_intialize 000B  
                              main@F3056 0109                                main@F3058 0100  
                  lcd_8bit_intialize@lcd 0017                    lcd_8bit_intialize@pin 001B  
                  lcd_8bit_intialize@ret 001C                   keypad_intialize@keypad 000F  
                              _vfpfcnvrt 1602                     ??_gpio_pin_intialize 000D  
                              main@index 00B9                lcd_8bit_set_cursor@colomn 001A  
                             vfpfcnvrt@c 005B                  gpio_pin_write_logic@ret 000A  
                     main@first_num_text 008F                        ___lmul@multiplier 0001  
                              copy_data0 281A                                copy_data1 283A  
             ?_lcd_convert_int_to_string 0080                        _keypad_read_value 2952  
                 gpio_pin_read_logic@ret 000A                  ??_lcd_8bit_send_command 0011  
                     ?_keypad_read_value 0001                   ?_application_intialize 0001  
                               __Hrparam 0000                   _lcd_8bit_send_char_pos 2C72  
                             vfprintf@ap 0062                                 __Lrparam 0000  
                             vfprintf@fp 005E                      ??_keypad_read_value 0015  
            __end_of_ecu_layer_intialize 2D22                               ?_vfpfcnvrt 003F  
                        ___aodiv@divisor 0009                          ___aodiv@counter 0011  
            __end_of_gpio_pin_read_logic 254A                               sprintf@fmt 0068  
                               _main$385 00A7                                 _main$386 00AB  
                               _dtoa$954 002E                                 __ptext10 2C32  
                               __ptext11 1CE4                                 __ptext20 22E4  
                               __ptext12 19E6                                 __ptext21 2492  
                               __ptext13 1B6E                                 __ptext30 2B1A  
                               __ptext22 1854                                 __ptext14 2BEE  
                               __ptext31 25E4                                 __ptext23 2B64  
                               __ptext15 29BA                                 __ptext32 287C  
                               __ptext24 2CB2                                 __ptext16 2C72  
                               __ptext33 1F8C                                 __ptext25 28E8  
                               __ptext17 254A                                 __ptext34 1E48  
                               __ptext26 2D2C                                 __ptext18 267C  
                               __ptext35 21D8                                 __ptext27 2D04  
                               __ptext19 2952                                 __ptext28 20B8  
                               __ptext29 2704                __end_of_keypad_read_value 29BA  
       __end_of_lcd_8bit_send_string_pos 2C32                         _keypad_get_value 22E4  
                               isa$xinst 000000                   lcd_8bit_send_char@data 0010  
             lcd_8bit_send_char_pos@data 0022             keypad_intialize@rows_counter 0014  
                               _vfprintf 2ACC                              _isspace$862 0005  
                       ___aomod@dividend 0001                    __end_of_keypad_matrix 1011  
                       _keypad_intialize 25E4                          main@result_text 0098  
                               isdigit@c 0001             __end_of_gpio_pin_write_logic 20B8  
               ?_send_8bit_enable_signal 000B                                sprintf@ap 006E  
                               isspace@c 0001                    lcd_8bit_send_char@lcd 000E  
                  lcd_8bit_send_char@ret 0015             lcd_convert_int_to_string@ret 007B  
           lcd_convert_int_to_string@str 0084                          ___aomod@divisor 0009  
                            ??_vfpfcnvrt 0045                          ___aomod@counter 0011  
        lcd_8bit_send_char@line_data_pin 0016                                 sprintf@f 0070  
                               sprintf@s 0066                           _port_registers 0132  
                           ___aldiv@sign 000A                  lcd_8bit_send_string@lcd 0017  
                lcd_8bit_send_string@ret 001B                             ___aodiv@sign 0012  
                 main@second_value_index 00AF             lcd_8bit_send_command@command 0010  
                           ___aomod@sign 0012               __end_of_lcd_8bit_intialize 21D8  
